(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{1548:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、mysql-事务隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、mysql-事务隔离级别"}},[t._v("#")]),t._v(" 1、MySQL 事务隔离级别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("未提交读 - 读到其它事务未提交的数据（最新的版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有脏读、不可重复读、幻读现象")])])]),t._v(" "),s("li",[s("p",[t._v("提交读（RC） - 读到其它事务已提交的数据（最新已提交的版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有不可重复读、幻读现象")]),t._v(" "),s("li",[t._v("使用场景：希望看到最新的有效值")])])]),t._v(" "),s("li",[s("p",[t._v("可重复读（RR） - 在事务范围内，多次读能够保证一致性（快照建立时最新已提交版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有幻读现象，可以用加锁避免")]),t._v(" "),s("li",[t._v("使用场景：事务内要求更强的一致性，但看到的未必是最新的有效值")])])]),t._v(" "),s("li",[s("p",[t._v("串行读 - 在事务范围内，仅有读读可以并发，读写或写写会阻塞其它事务，用这种办法保证更强的一致性")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：无")])])])]),t._v(" "),s("h4",{attrs:{id:"_1、脏读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、脏读现象"}},[t._v("#")]),t._v(" 1、脏读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set session transaction isolation level read uncommitted;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select * from account;/"),s("em",[t._v("两个账户都为 1000")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("start transaction;")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select * from account;/"),s("em",[t._v("1号账户2000, 2号账户1000")]),t._v("/")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(502),alt:"image-20221022101307568"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx2 未提交的情况下，tx1 仍然读取到了它的更改，此时与第一次读取的数据不一致，则是产生了脏读")])]),t._v(" "),s("h4",{attrs:{id:"_2、不可重复读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、不可重复读现象"}},[t._v("#")]),t._v(" 2、不可重复读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level read committed;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("两个账户都为 1000")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("1号账户2000, 2号账户1000")]),t._v("/")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(503),alt:"image-20221022101453527"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx1 在同一事务内，两次读取的结果不一致，当然，此时 tx2 的事务已提交")])]),t._v(" "),s("h4",{attrs:{id:"_3、幻读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、幻读现象"}},[t._v("#")]),t._v(" 3、幻读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("存在 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("发现还是只有 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);  /* ERROR  1062 (23000): Duplicate entry '3' for key 'PRIMARY'  */")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(504),alt:"image-20221022105234049"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx1 查询时并没有发现 3 号账户，执行插入时却发现主键冲突异常，就好像出现了幻觉一样")])]),t._v(" "),s("h4",{attrs:{id:"_4、使用-for-update-避免幻读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、使用-for-update-避免幻读现象"}},[t._v("#")]),t._v(" 4、使用 for update 避免幻读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("存在 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account where accountNo=3  for update;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);  /* 阻塞 */")])]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("在 for update 这行语句执行时，虽然此时 3 号账户尚不存在，但 MySQL 在 repeatable read 隔离级别下会用间隙锁，锁住 2 号记录与正无穷大之间的间隙")]),t._v(" "),s("li",[t._v("此时 tx2 想插入 3 号记录就不行了，被间隙锁挡住了")])]),t._v(" "),s("h4",{attrs:{id:"_5、串行读避免幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、串行读避免幻读"}},[t._v("#")]),t._v(" 5、串行读避免幻读")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level serializable;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 存在 1,2 两个账户 */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);  /* 阻塞 */")])]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);")]),t._v(" "),s("td")])])]),t._v(" "),s("blockquote",[s("p",[t._v("串行读隔离级别下，普通的 select 也会加共享读锁，其它事务的查询可以并发，但增删改就只能阻塞了")])]),t._v(" "),s("h2",{attrs:{id:"_2、快照读与当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、快照读与当前读"}},[t._v("#")]),t._v(" 2、快照读与当前读")]),t._v(" "),s("h4",{attrs:{id:"_1、当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、当前读"}},[t._v("#")]),t._v(" 1、当前读")]),t._v(" "),s("blockquote",[s("p",[t._v("当前读，即读取最新提交的数据，查询时需要加锁，以下情况都属于当前读")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("select … for update")])]),t._v(" "),s("li",[s("p",[t._v("insert、update、delete，都会按最新提交的数据进行操作")])])])]),t._v(" "),s("h4",{attrs:{id:"_2、快照读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、快照读"}},[t._v("#")]),t._v(" 2、快照读")]),t._v(" "),s("blockquote",[s("p",[t._v("快照读，读取某一个快照建立时（可以理解为某一时间点）的数据，快照读主要体现在 select 时，不同隔离级别下，select 的行为不同")]),t._v(" "),s("ul",[s("li",[t._v("在 Serializable 隔离级别下 - 普通 select 也变成当前读")]),t._v(" "),s("li",[t._v("在 RC 隔离级别下 - 每次 select 都会建立新的快照")]),t._v(" "),s("li",[t._v("在 RR 隔离级别下\n"),s("ul",[s("li",[t._v("事务启动后，首次 select 会建立快照")]),t._v(" "),s("li",[t._v("如果事务启动选择了 with consistent snapshot，事务启动时就建立快照")]),t._v(" "),s("li",[t._v("基于旧数据的修改操作，会重新建立快照")])])])]),t._v(" "),s("p",[s("strong",[t._v("快照读本质上读取的是历史数据（原理是回滚段），属于无锁查询")])])]),t._v(" "),s("h5",{attrs:{id:"_1、rr-下-快照建立时机-第一次-select-时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、rr-下-快照建立时机-第一次-select-时"}},[t._v("#")]),t._v(" 1、RR 下，快照建立时机 - 第一次 select 时")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account;  /* 此时建立快照，两个账户为 1000  */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account;  /* 两个账户仍为 1000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("快照一旦建立，以后的查询都基于此快照，因此 tx1 中第二次 select 仍然得到 1 号账户余额为 1000")])]),t._v(" "),s("p",[t._v("如果 tx2 的 update 先执行")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 此时建立快照，1号余额已经为2000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("h5",{attrs:{id:"_2、rr-下-快照建立时机-事务启动时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rr-下-快照建立时机-事务启动时"}},[t._v("#")]),t._v(" 2、RR 下，快照建立时机 - 事务启动时")]),t._v(" "),s("p",[t._v("如果希望事务启动时就建立快照，可以添加 with consistent snapshot 选项")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction with consistent snapshot; /* 此时建立快照，两个账户为 1000  */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 两个账户仍为 1000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("h5",{attrs:{id:"_3、rr-下-快照建立时机-修改数据时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、rr-下-快照建立时机-修改数据时"}},[t._v("#")]),t._v(" 3、RR 下，快照建立时机 - 修改数据时")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 此时建立快照，两个账户为 1000 */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance=balance+1000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("update  account set balance=balance+1000 where accountNo=1;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 1号余额为3000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("tx1 内的修改必须重新建立快照，否则，就会发生丢失更新的问题")])]),t._v(" "),s("h2",{attrs:{id:"_3、innodb-vs-myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、innodb-vs-myisam"}},[t._v("#")]),t._v(" 3、InnoDB vs MyISAM")]),t._v(" "),s("h4",{attrs:{id:"_1、innodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、innodb"}},[t._v("#")]),t._v(" 1、InnoDB")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("索引分为聚簇索引与二级索引")]),t._v(" "),s("ul",[s("li",[t._v("聚簇索引：主键值作为索引数据，叶子节点还包含了所有字段数据，索引和数据是存储在一起的")]),t._v(" "),s("li",[t._v("二级索引：除主键外的其它字段建立的索引称为二级索引。被索引的字段值作为索引数据，叶子节点还包含了主键值")])])]),t._v(" "),s("li",[s("p",[t._v("支持事务")]),t._v(" "),s("ul",[s("li",[t._v("通过 undo log 支持事务回滚、当前读（多版本查询）")]),t._v(" "),s("li",[t._v("通过 redo log 实现持久性")]),t._v(" "),s("li",[t._v("通过两阶段提交实现一致性")]),t._v(" "),s("li",[t._v("通过当前读、锁实现隔离性")])])]),t._v(" "),s("li",[s("p",[t._v("支持行锁、间隙锁")])]),t._v(" "),s("li",[s("p",[t._v("支持外键")])])])]),t._v(" "),s("p",[s("strong",[t._v("InnoDB 索引特点")])]),t._v(" "),s("p",[t._v("聚簇索引：主键值作为索引数据，叶子节点还包含了所有字段数据，索引和数据是存储在一起的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(505),alt:"image-20210901155308778"}})]),t._v(" "),s("ul",[s("li",[t._v("主键即 7369、7499、7521 等")])]),t._v(" "),s("p",[t._v("二级索引：除主键外的其它字段建立的索引称为二级索引。被索引的字段值作为索引数据，叶子节点还包含了主键值")]),t._v(" "),s("p",[s("img",{attrs:{src:a(506),alt:"image-20210901155317460"}})]),t._v(" "),s("ul",[s("li",[t._v("上图中 800、950、1100 这些是工资字段的值，根据它们建立了二级索引")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(507),alt:"image-20210901155327838"}})]),t._v(" "),s("ul",[s("li",[t._v("上图中，如果执行查询 "),s("code",[t._v("select empno, ename, sal from emp where sal = 800")]),t._v("，这时候可以利用二级索引定位到 800 这个工资，同时还能知道主键值 7369")]),t._v(" "),s("li",[t._v("但 select 字句中还出现了 ename 字段，在二级索引中不存在，因此需要根据主键值 7369 查询聚簇索引来获取 ename 的信息，这个过程俗称"),s("strong",[t._v("回表")])])]),t._v(" "),s("h4",{attrs:{id:"_2、myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、myisam"}},[t._v("#")]),t._v(" 2、MyISAM")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("索引只有一种")]),t._v(" "),s("ul",[s("li",[t._v("被索引字段值作为索引数据，叶子节点还包含了该记录数据页地址，数据和索引是分开存储的")])])]),t._v(" "),s("li",[s("p",[t._v("不支持事务，没有 undo log 和 redo log")])]),t._v(" "),s("li",[s("p",[t._v("仅支持表锁")])]),t._v(" "),s("li",[s("p",[t._v("不支持外键")])]),t._v(" "),s("li",[s("p",[t._v("会保存表的总行数")])])])]),t._v(" "),s("p",[s("strong",[t._v("MyISAM 索引特点")])]),t._v(" "),s("p",[t._v("被索引字段值作为索引数据，叶子节点还包含了该记录数据页地址，数据和索引是分开存储的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(508),alt:"image-20210901155226621"}})]),t._v(" "),s("h2",{attrs:{id:"_4、查询语句执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、查询语句执行流程"}},[t._v("#")]),t._v(" 4、查询语句执行流程")]),t._v(" "),s("p",[s("strong",[t._v("执行 SQL 语句 select * from user where id = 1 时发生了什么")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(509),alt:"image-20210902082718756"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("连接器：负责建立连接、检查权限、连接超时时间由 wait_timeout 控制，默认 8 小时")])]),t._v(" "),s("li",[s("p",[t._v("查询缓存：会将 SQL 和查询结果以键值对方式进行缓存，修改操作会以表单位导致缓存失效")])]),t._v(" "),s("li",[s("p",[t._v("分析器：词法、语法分析")])]),t._v(" "),s("li",[s("p",[t._v("优化器：决定用哪个索引，决定表的连接顺序等")])]),t._v(" "),s("li",[s("p",[t._v("执行器：根据存储引擎类型，调用存储引擎接口")])]),t._v(" "),s("li",[s("p",[t._v("存储引擎：数据的读写接口，索引、表都在此层实现")])])]),t._v(" "),s("h2",{attrs:{id:"_5、undo-log-与-redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、undo-log-与-redo-log"}},[t._v("#")]),t._v(" 5、undo log 与 redo log")]),t._v(" "),s("h4",{attrs:{id:"_1、undo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、undo-log"}},[t._v("#")]),t._v(" 1、undo log")]),t._v(" "),s("ul",[s("li",[t._v("回滚数据，以行为单位，记录数据每次的变更，一行记录有多个版本并存")]),t._v(" "),s("li",[t._v("多版本并发控制，即快照读（也称为一致性读），让查询操作可以去访问历史版本")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(510),alt:"image-20210902083051903"}})]),t._v(" "),s("ol",[s("li",[t._v("每个事务会按照开始时间，分配一个单调递增的事务编号 trx id")]),t._v(" "),s("li",[t._v("每次事务的改动都会以行为单位记入回滚日志，包括当时的事务编号，改动的值等")]),t._v(" "),s("li",[t._v("查询操作，事务编号大于自己的数据是不可见的，事务编号小于等于自己的数据才是可见的")])]),t._v(" "),s("ul",[s("li",[t._v("例如图中红色事务看不到 trx id=102 以及 trx id=101 的数据，只有 trx id=99 的数据对它可见")])]),t._v(" "),s("h4",{attrs:{id:"_2、redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、redo-log"}},[t._v("#")]),t._v(" 2、redo log")]),t._v(" "),s("p",[t._v("redo log 的作用主要是实现 ACID 中的持久性，保证提交的数据不丢失")]),t._v(" "),s("ul",[s("li",[t._v("它记录了事务提交的变更操作，服务器意外宕机重启时，利用 redo log 进行回放，重新执行已提交的变更操作")]),t._v(" "),s("li",[t._v("事务提交时，首先将变更写入 redo log，事务就视为成功。至于数据页（表、索引）上的变更，可以放在后面慢慢做\n"),s("ul",[s("li",[t._v("数据页上的变更宕机丢失也没事，因为 redo log 里已经记录了")]),t._v(" "),s("li",[t._v("数据页在磁盘上位置随机，写入速度慢，redo log 的写入是顺序的速度快")])])])]),t._v(" "),s("p",[t._v("它由两部分组成，内存中的 redo log buffer，磁盘上的 redo log file")]),t._v(" "),s("ul",[s("li",[t._v("redo log file 由一组文件组成，当写满了会循环覆盖较旧的日志，这意味着不能无限依赖 redo log，更早的数据恢复需要 binlog")]),t._v(" "),s("li",[t._v("buffer 和 file 两部分组成意味着，写入了文件才真正安全，同步策略由参数 innodb_flush_log_at_trx_commit  控制\n"),s("ul",[s("li",[t._v("0 - 每隔 1s 将日志 write and flush 到磁盘")]),t._v(" "),s("li",[t._v("1 - 每次事务提交将日志 write and flush（默认值）")]),t._v(" "),s("li",[t._v("2 - 每次事务提交将日志 write，每隔 1s flush 到磁盘，意味着 write 意味着写入操作系统缓存，如果 MySQL 挂了，而操作系统没挂，那么数据不会丢失")])])])]),t._v(" "),s("h2",{attrs:{id:"_6、mysql锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、mysql锁"}},[t._v("#")]),t._v(" 6、MySQL锁")]),t._v(" "),s("h4",{attrs:{id:"_1、全局锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、全局锁"}},[t._v("#")]),t._v(" 1、全局锁")]),t._v(" "),s("p",[t._v("用作全量备份时，保证"),s("strong",[t._v("表与表之间的数据一致性")])]),t._v(" "),s("p",[t._v("如果不加任何包含，数据备份时就可能产生不一致的情况，如下图所示")]),t._v(" "),s("p",[s("img",{attrs:{src:a(511),alt:"image-20210902090302805"}})]),t._v(" "),s("p",[t._v("全局锁的语法：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("flush "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("使用全局读锁锁定所有数据库的所有表。这时会阻塞其它所有 DML 以及 DDL 操作，这样可以避免备份过程中的数据不一致。接下来可以执行备份，最后用 unlock tables 来解锁")])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])])]),t._v(" "),s("p",[t._v("但 flush tables 属于比较重的操作，可以使用 --single-transaction 参数来完成不加锁的一致性备份（仅针对 InnoDB 引擎的表）")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqldump "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--single-transaction -uroot -p test > 1.sql")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("h4",{attrs:{id:"_2、表级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、表级锁"}},[t._v("#")]),t._v(" 2、表级锁")]),t._v(" "),s("h5",{attrs:{id:"_1、表锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、表锁"}},[t._v("#")]),t._v(" 1、表锁")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("语法：加锁 lock tables 表名 read/write，解锁 unlock tables")]),t._v(" "),s("li",[t._v("缺点：粒度较粗，在 InnoDB 引擎很少使用")])])]),t._v(" "),s("h5",{attrs:{id:"_2、-元数据锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、-元数据锁"}},[t._v("#")]),t._v(" 2、 元数据锁")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("即 metadata-lock（MDL），主要是为"),s("strong",[t._v("了避免 DML 与 DDL 冲突")]),t._v("，DML 的元数据锁之间不互斥")])]),t._v(" "),s("li",[s("p",[t._v("加元数据锁的几种情况")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("lock tables read/write")]),t._v("，类型为 SHARED_READ_ONLY 和 SHARED_NO_READ_WRITE")]),t._v(" "),s("li",[s("code",[t._v("alter table")]),t._v("，类型为 EXCLUSIVE，与其它 MDL 都互斥")]),t._v(" "),s("li",[s("code",[t._v("select，select … lock in share mode")]),t._v("，类型为 SHARED_READ")]),t._v(" "),s("li",[s("code",[t._v("insert，update，delete，select for update")]),t._v("，类型为 SHARED_WRITE")])])]),t._v(" "),s("li",[s("p",[t._v("查看元数据锁（适用于 MySQL 8.0 以上版本）")]),t._v(" "),s("p",[s("code",[t._v("select object_type,object_schema,object_name,lock_type,lock_duration from performance_schema.metadata_locks;")])])])])]),t._v(" "),s("h5",{attrs:{id:"_3、is-意向共享-与-ix-意向排他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、is-意向共享-与-ix-意向排他"}},[t._v("#")]),t._v(" 3、IS（意向共享） 与 IX（意向排他）")]),t._v(" "),s("ul",[s("li",[t._v("主要是"),s("strong",[t._v("避免 DML 与表锁冲突")]),t._v("，DML 主要目的是加行锁，为了让表锁不用检查每行数据是否加锁，加意向锁（表级）来减少表锁的判断，意向锁之间不会互斥")]),t._v(" "),s("li",[t._v("加意向表锁的几种情况\n"),s("ul",[s("li",[s("code",[t._v("select … lock in share mode")]),t._v(" 会加 IS 锁")]),t._v(" "),s("li",[s("code",[t._v("insert，update，delete， select … for update")]),t._v(" 会加 IX 锁")])])]),t._v(" "),s("li",[t._v("查看意向表锁（适用于 MySQL 8.0 以上版本）\n"),s("ul",[s("li",[t._v("select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks;")])])])]),t._v(" "),s("h4",{attrs:{id:"_3、行级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、行级锁"}},[t._v("#")]),t._v(" 3、行级锁")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("种类")]),t._v(" "),s("ul",[s("li",[t._v("行锁 – 在 RC 下，锁住的是行，防止其他事务对此行 update 或 delete")]),t._v(" "),s("li",[t._v("间隙锁 – 在 RR 下，锁住的是间隙，防止其他事务在这个间隙 insert 产生幻读")]),t._v(" "),s("li",[t._v("临键锁 – 在 RR 下，锁住的是前面间隙+行，特定条件下可优化为行锁")])])]),t._v(" "),s("li",[s("p",[t._v("查看行级锁")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks where object_name='表名';")])])])])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])])]),t._v(" "),s("ul",[s("li",[t._v("它们锁定的其实都是"),s("strong",[t._v("索引")]),t._v("上的行与间隙，根据索引的有序性来确定间隙")])])]),t._v(" "),s("p",[t._v("测试数据")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lisi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wangwu'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhang'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhang'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("说明")])]),t._v(" "),s("ul",[s("li",[t._v("1,2,3,4 之间其实并不可能有间隙")]),t._v(" "),s("li",[t._v("4 与 8 之间有间隙")]),t._v(" "),s("li",[t._v("8 与 12 之间有间隙")]),t._v(" "),s("li",[t._v("12 与正无穷大之间有间隙")]),t._v(" "),s("li",[t._v("其实我们的例子中还有负无穷大与 1 之间的间隙，想避免负数可以通过建表时选择数据类型为 unsigned int")])])]),t._v(" "),s("p",[t._v("间隙锁例子")]),t._v(" "),s("p",[t._v("事务1：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 锁住的是 8 与 12 之间的间隙 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("事务2：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("临键锁和记录锁例子")]),t._v(" "),s("p",[t._v("事务1：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("临键锁锁定的是左开右闭的区间，与上条查询条件相关的区间有 (4,8]，(8,12]，(12,+∞)")]),t._v(" "),s("li",[t._v("临键锁在某些条件下可以被优化为记录锁，例如 (4,8] 被优化为只针对 8 的记录锁，前面的区间不会锁住")])]),t._v(" "),s("p",[t._v("事务2：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports},502:function(t,s,a){t.exports=a.p+"assets/img/image-20221022101307568.a4c07013.png"},503:function(t,s,a){t.exports=a.p+"assets/img/image-20221022101453527.622f2694.png"},504:function(t,s,a){t.exports=a.p+"assets/img/image-20221022105234049.de3df162.png"},505:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155308778.3ca6ec2f.png"},506:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155317460.5e9e106e.png"},507:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155327838.80dc4251.png"},508:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155226621.b34d7bfa.png"},509:function(t,s,a){t.exports=a.p+"assets/img/image-20210902082718756.5ba275bc.png"},510:function(t,s,a){t.exports=a.p+"assets/img/image-20210902083051903.30d2a51b.png"},511:function(t,s,a){t.exports=a.p+"assets/img/image-20210902090302805.350b17e9.png"}}]);