(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{1734:function(t,s,a){"use strict";a.r(s);var e=a(2),_=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、数据库三范式是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、数据库三范式是什么"}},[t._v("#")]),t._v(" 1、数据库三范式是什么?")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("第一范式（1NF）：字段具有原子性,不可再分。(所有关系型数据库系统都满足第一范式数据库表中的字段都是单一属性的，不可再分)")]),t._v(" "),s("li",[t._v("第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。要求数据库表中的每个实例或行必须可以被惟一地区分。通常需要为表加上一个列，以存储各个实例的惟一标识。这个惟一属性列被称为主关键字或主键。")]),t._v(" "),s("li",[t._v("满足第三范式（3NF）必须先满足第二范式（2NF）。简而言之，第三范式（3NF）要求一个数据库表中不包含已在其它表中已包含的非主关键字信息。 所以第三范式具有如下特征：\n"),s("ul",[s("li",[t._v("每一列只有一个值")]),t._v(" "),s("li",[t._v("每一行都能区分。")]),t._v(" "),s("li",[t._v("每一个表都不包含其他表已经包含的非主关键字信息。")])])])])]),t._v(" "),s("h2",{attrs:{id:"_2、请简述常用的索引有哪些种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、请简述常用的索引有哪些种类"}},[t._v("#")]),t._v(" 2、请简述常用的索引有哪些种类?")]),t._v(" "),s("blockquote",[s("p",[t._v("从 "),s("strong",[t._v("功能逻辑")]),t._v(" 上说，索引主要有 4 种，分别是普通索引、唯一索引、主键索引、全文索引。")]),t._v(" "),s("p",[t._v("按照 "),s("strong",[t._v("物理实现")]),t._v("方式 ，索引可以分为 2 种：聚簇索引和非聚簇索引。")]),t._v(" "),s("p",[t._v("按照 "),s("strong",[t._v("作用字段个数")]),t._v(" 进行划分，分成单列索引和联合索引")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("普通索引:")]),t._v(" 即针对数据库表创建索引")]),t._v(" "),s("li",[s("strong",[t._v("唯一索引")]),t._v(": 与普通索引类似，不同的就是：MySQL数据库索引列的值必须唯一，但允许有空值")]),t._v(" "),s("li",[s("strong",[t._v("主键索引")]),t._v(": 它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引")]),t._v(" "),s("li",[s("strong",[t._v("组合索引")]),t._v(": 为了进一步榨取MySQL的效率，就要考虑建立组合索引。即将数据库表中的多个字段联合起来作为一个组合索引。")]),t._v(" "),s("li",[s("strong",[t._v("全文索引")]),t._v("：是目前搜索引擎使用的一种关键技术，对文本的内容进行分词、搜索。")]),t._v(" "),s("li",[s("strong",[t._v("覆盖索引")]),t._v("：查询列要被所建的索引覆盖，不必读取数据行")])])]),t._v(" "),s("h2",{attrs:{id:"_3、mysql数据库中索引的工作机制是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、mysql数据库中索引的工作机制是什么"}},[t._v("#")]),t._v(" 3、MySQL数据库中索引的工作机制是什么？")]),t._v(" "),s("blockquote",[s("p",[t._v("数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。")]),t._v(" "),s("p",[t._v("索引的实现通常使用B树及其变种B+树")])]),t._v(" "),s("h2",{attrs:{id:"_4、mysql的基础操作命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、mysql的基础操作命令"}},[t._v("#")]),t._v(" 4、MySQL的基础操作命令")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("MySQL 是否处于运行状态:\n"),s("ul",[s("li",[t._v("Debian 上运行命令 "),s("code",[t._v("service mysql status")]),t._v("，")]),t._v(" "),s("li",[t._v("在RedHat 上运行命令 "),s("code",[t._v("service mysqld status")])])])]),t._v(" "),s("li",[t._v("开启或停止 MySQL 服务\n"),s("ul",[s("li",[t._v("service mysqld start 开启服务")]),t._v(" "),s("li",[t._v("service mysqld stop 停止服务")])])]),t._v(" "),s("li",[t._v("列出所有数据库:运行命令 show databases;")]),t._v(" "),s("li",[t._v("切换到某个数据库并在上面工作:运行命令 use databasename; 进入名为 databasename 的数据库")]),t._v(" "),s("li",[t._v("列出某个数据库内所有表: show tables;")])])]),t._v(" "),s("h2",{attrs:{id:"_5、一张表-里面有id自增主键-当insert了17条记录之后-删除了第15-16-17条记录-再把mysql重启-再insert一条记录-这条记录的id是18还是15"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、一张表-里面有id自增主键-当insert了17条记录之后-删除了第15-16-17条记录-再把mysql重启-再insert一条记录-这条记录的id是18还是15"}},[t._v("#")]),t._v(" 5、一张表，里面有ID自增主键，当insert了17条记录之后，删除了第15,16,17条记录，再把Mysql重启，再insert一条记录，这条记录的ID是18还是15 ？")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("如果表的类型为"),s("code",[t._v("MyISAM")]),t._v("，ID为18\n"),s("ul",[s("li",[t._v("因为MyISAM表会把自增主键的最大ID记录到数据文件里，重启MySQL自增主键的最大ID也不会丢失")])])]),t._v(" "),s("li",[t._v("如果表的类型是"),s("code",[t._v("InnoDB")]),t._v("，ID是15\n"),s("ul",[s("li",[t._v("InnoDB表只是把自增主键的最大ID记录到内存中，所以重启数据库或者是对表进行OPTIMIZE操作，都会导致最大ID丢失")])])])])]),t._v(" "),s("h2",{attrs:{id:"_6、mysql中varchar与char的区别以及varchar-32-中的32代表的涵义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、mysql中varchar与char的区别以及varchar-32-中的32代表的涵义"}},[t._v("#")]),t._v(" 6、MySQL中varchar与char的区别以及varchar(32)中的32代表的涵义？")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("varchar")]),t._v("与"),s("code",[t._v("char")]),t._v("的区别:")]),t._v(" "),s("ul",[s("li",[t._v("char是一种固定长度的类型")]),t._v(" "),s("li",[t._v("varchar则是一种可变长度的类型.")])]),t._v(" "),s("p",[s("code",[t._v("varchar(32)")]),t._v("中32的涵义 : 最多存放32个字节")]),t._v(" "),s("p",[t._v("int（20）中20的涵义: int(M)中的M indicates the maximum display width (最大显示宽度)for integer types. The maximum legal display width is 255.")])]),t._v(" "),s("h2",{attrs:{id:"_7、select-和select-全部字段的2种写法有何优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、select-和select-全部字段的2种写法有何优缺点"}},[t._v("#")]),t._v(" 7、"),s("code",[t._v("SELECT *")]),t._v(" 和"),s("code",[t._v("SELECT 全部字段")]),t._v("的2种写法有何优缺点?")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("SELECT *")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("SELECT 全部字段")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("解析数据字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("需要")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不需要")])]),t._v(" "),s("tr",[s("td",[t._v("输出顺序")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("建表列顺序相同")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指定字段顺序")])]),t._v(" "),s("tr",[s("td",[t._v("字段改名")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不需要修改")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("需要")])]),t._v(" "),s("tr",[s("td",[t._v("索引优化")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("无法优化")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以建立索引进行优化")])]),t._v(" "),s("tr",[s("td",[t._v("可读性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可读性低")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可读性高")])])])]),t._v(" "),s("h2",{attrs:{id:"_8、havng-子句-和-where的异同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、havng-子句-和-where的异同点"}},[t._v("#")]),t._v(" 8、HAVNG 子句 和 WHERE的异同点?")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("having")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("where")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("语法上")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("having用select结果别名")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("where 用表中列名")])]),t._v(" "),s("tr",[s("td",[t._v("结果范围")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("返回客户端的行数")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("where从表读出数据的行数")])]),t._v(" "),s("tr",[s("td",[t._v("索引")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能使用索引，只能在临时结果集操作")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以使用索引")])]),t._v(" "),s("tr",[s("td",[t._v("聚集函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("专门使用聚集函数的")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能使用聚集函数")])])])]),t._v(" "),s("h2",{attrs:{id:"_9、如何区分float和double"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、如何区分float和double"}},[t._v("#")]),t._v(" 9、如何区分FLOAT和DOUBLE？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("浮点数以8位精度存储在FLOAT中，并且有四个字节")]),t._v(" "),s("li",[t._v("浮点数存储在DOUBLE中，精度为18位，有八个字节")])])]),t._v(" "),s("h2",{attrs:{id:"_10、一张表最多创建多少索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、一张表最多创建多少索引"}},[t._v("#")]),t._v(" 10、一张表最多创建多少索引？")]),t._v(" "),s("blockquote",[s("p",[t._v("任何标准表最多可以创建16个索引列。")])]),t._v(" "),s("h2",{attrs:{id:"_11、mysql里记录金钱用什么字段类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、mysql里记录金钱用什么字段类型"}},[t._v("#")]),t._v(" 11、MySQL里记录金钱用什么字段类型?")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("NUMERIC")]),t._v("和"),s("code",[t._v("DECIMAL")]),t._v("类型被Mysql实现为同样的类型，这在SQL92标准允许。他们被用于保存值，该值的准确精度是极其重要的值，例如与金钱有关的数据。当声明一个类是这些类型之一时，精度和规模的能被(并且通常是)指定。")])]),t._v(" "),s("p",[t._v("PS："),s("code",[t._v("salary DECIMAL(9,2)")])]),t._v(" "),s("p",[t._v("在这个例子中，9(precision)代表将被用于存储值的总的小数位数，而2(scale)代表将被用于存储小数点后的位数。")]),t._v(" "),s("p",[t._v("因此，在这种情况下，能被存储在salary列中的值的范围是从-9999999.99到9999999.99。在ANSI/ISO SQL92中，句法DECIMAL(p)等价于DECIMAL(p,0)。")]),t._v(" "),s("p",[t._v("同样，句法DECIMAL等价于DECIMAL(p,0)，这里实现被允许决定值p。Mysql当前不支持DECIMAL/NUMERIC数据类型的这些变种形式的任何一种。")]),t._v(" "),s("h2",{attrs:{id:"_12、mysql-中有哪几种锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、mysql-中有哪几种锁"}},[t._v("#")]),t._v(" 12、MySQL 中有哪几种锁？")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表级锁")]),t._v("： 开销小， 加锁快； 不会出现死锁； 锁定粒度大， 发生锁冲突的概率最高， 并发度最低。"),s("br"),t._v(" "),s("code",[t._v("行级锁")]),t._v("： 开销大， 加锁慢； 会出现死锁； 锁定粒度最小， 发生锁冲突的概率最低， 并发度也最高。"),s("br"),t._v(" "),s("code",[t._v("页面锁")]),t._v("： 开销和加锁时间界于表锁和行锁之间； 会出现死锁； 锁定粒度界于表锁和行锁之间， 并发度一般。")])]),t._v(" "),s("h2",{attrs:{id:"_13、mysql-中有哪些不同的表格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13、mysql-中有哪些不同的表格"}},[t._v("#")]),t._v(" 13、MySQL 中有哪些不同的表格？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("MyISAM")]),t._v(" "),s("li",[t._v("Heap")]),t._v(" "),s("li",[t._v("Merge")]),t._v(" "),s("li",[t._v("INNODB")]),t._v(" "),s("li",[t._v("MISAM")])]),t._v(" "),s("p",[t._v("MyISAM是Mysql的默认存储引擎。")])]),t._v(" "),s("h2",{attrs:{id:"_14、mysql如何优化distinct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14、mysql如何优化distinct"}},[t._v("#")]),t._v(" 14、Mysql如何优化DISTINCT？")]),t._v(" "),s("blockquote",[s("p",[t._v("DISTINCT在所有列上转换为GROUP BY，并与ORDER BY子句结合使用。")])]),t._v(" "),s("h2",{attrs:{id:"_15、char-和varchar-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15、char-和varchar-的区别"}},[t._v("#")]),t._v(" 15、CHAR 和VARCHAR 的区别？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("CHAR 和 VARCHAR "),s("strong",[t._v("类型在存储和检索方面有所不同")])]),t._v(" "),s("li",[t._v("CHAR 列长度固定为创建表时声明的长度， 长度值范围是 1 到 255 当 CHAR 值被存储时， 它们被用空格填充到特定长度， 检索 CHAR 值时需删除尾随空格。")])])]),t._v(" "),s("h2",{attrs:{id:"_16、mysql-数据库作发布系统的存储-一天五万条以上的增量-预计运维三年-怎么优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16、mysql-数据库作发布系统的存储-一天五万条以上的增量-预计运维三年-怎么优化"}},[t._v("#")]),t._v(" 16、MySQL 数据库作发布系统的存储，一天五万条以上的增量， 预计运维三年,怎么优化？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("设计良好的数据库结构， 允许部分数据冗余， 尽量避免 join 查询， 提高效率。")]),t._v(" "),s("li",[t._v("选择合适的表字段数据类型和存储引擎， 适当的添加索引。")]),t._v(" "),s("li",[t._v("MySQL 库主从读写分离。")]),t._v(" "),s("li",[t._v("找规律分表， 减少单表中的数据量提高查询速度。")]),t._v(" "),s("li",[t._v("添加缓存机制， 比如 memcached， apc等。")]),t._v(" "),s("li",[t._v("不经常改动的页面， 生成静态页面。")]),t._v(" "),s("li",[t._v("书写高效率的 SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1, field_2, field_3 FROM TABLE.")])])]),t._v(" "),s("h2",{attrs:{id:"_17、limit-1000000加载很慢的话-你是怎么解决的呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17、limit-1000000加载很慢的话-你是怎么解决的呢"}},[t._v("#")]),t._v(" 17、limit 1000000加载很慢的话，你是怎么解决的呢？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("方案一：如果id是连续的，可以这样，返回上次查询的最大记录(偏移量)，再往下limit")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select id，name from employee where id>1000000 limit 10.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"方案二-在业务允许的情况下限制页数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案二-在业务允许的情况下限制页数"}},[t._v("#")]),t._v(" "),s("strong",[t._v("方案二：在业务允许的情况下限制页数：")])]),t._v(" "),s("p",[t._v("建议跟业务讨论，有没有必要查这么后的分页啦。因为绝大多数用户都不会往后翻太多页。")]),t._v(" "),s("h3",{attrs:{id:"方案三-order-by-索引-id为索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案三-order-by-索引-id为索引"}},[t._v("#")]),t._v(" "),s("strong",[t._v("方案三：order by + 索引（id为索引）")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select id，name from employee order by id  limit 1000000，10\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"方案四-利用延迟关联或者子查询优化超多分页场景。-先快速定位需要获取的id段-然后再关联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案四-利用延迟关联或者子查询优化超多分页场景。-先快速定位需要获取的id段-然后再关联"}},[t._v("#")]),t._v(" "),s("strong",[t._v("方案四：利用延迟关联或者子查询优化超多分页场景。（先快速定位需要获取的id段，然后再关联）")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT a.* FROM employee a, (select id from employee where 条件 LIMIT 1000000,10 ) b where a.id=b.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("h2",{attrs:{id:"_18、实践中如何优化-mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18、实践中如何优化-mysql"}},[t._v("#")]),t._v(" 18、实践中如何优化 MySQL？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("SQL 语句及索引的优化")]),t._v(" "),s("li",[t._v("数据库表结构的优化")]),t._v(" "),s("li",[t._v("系统配置的优化")]),t._v(" "),s("li",[t._v("硬件的优化")])])]),t._v(" "),s("h2",{attrs:{id:"_19、优化数据库的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19、优化数据库的方法"}},[t._v("#")]),t._v(" 19、优化数据库的方法？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置 NOTNULL， 例如’ 省份’、’ 性别’ 最好适用 ENUM")]),t._v(" "),s("li",[t._v("使用连接(JOIN)来代替子查询")]),t._v(" "),s("li",[t._v("适用联合(UNION)来代替手动创建的临时表")]),t._v(" "),s("li",[t._v("事务处理")]),t._v(" "),s("li",[t._v("分库分表")]),t._v(" "),s("li",[t._v("读写分离")]),t._v(" "),s("li",[t._v("锁定表、优化事务处理")]),t._v(" "),s("li",[t._v("适用外键， 优化锁定表")]),t._v(" "),s("li",[t._v("建立索引")]),t._v(" "),s("li",[t._v("优化查询语句")])])]),t._v(" "),s("h2",{attrs:{id:"_20、innodb与myisam的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20、innodb与myisam的区别"}},[t._v("#")]),t._v(" 20、InnoDB与MyISAM的区别")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("InnoDB支持事务，MyISAM不支持事务")]),t._v(" "),s("li",[t._v("InnoDB支持外键，MyISAM不支持外键")]),t._v(" "),s("li",[t._v("InnoDB 支持 MVCC(多版本并发控制)，MyISAM 不支持")]),t._v(" "),s("li",[t._v("select count(*) from table时，MyISAM更快，因为它有一个变量保存了整个表的总行数，可以直接读取，InnoDB就需要全表扫描。")]),t._v(" "),s("li",[t._v("Innodb不支持全文索引，而MyISAM支持全文索引（5.7以后的InnoDB也支持全文索引）")]),t._v(" "),s("li",[t._v("InnoDB支持表、行级锁，而MyISAM支持表级锁。")]),t._v(" "),s("li",[t._v("InnoDB表必须有主键，而MyISAM可以没有主键")]),t._v(" "),s("li",[t._v("Innodb表需要更多的内存和存储，而MyISAM可被压缩，存储空间较小，。")]),t._v(" "),s("li",[t._v("Innodb按主键大小有序插入，MyISAM记录插入顺序是，按记录插入顺序保存。")]),t._v(" "),s("li",[t._v("InnoDB 存储引擎提供了具有提交、回滚、崩溃恢复能力的事务安全，与 MyISAM 比 InnoDB 写的效率差一些，并且会占用更多的磁盘空间以保留数据和索引")])])]),t._v(" "),s("h2",{attrs:{id:"_21、mysql遇到过死锁问题吗-你是如何解决的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21、mysql遇到过死锁问题吗-你是如何解决的"}},[t._v("#")]),t._v(" 21、MySQL遇到过死锁问题吗，你是如何解决的？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("查看死锁日志show engine innodb status;")]),t._v(" "),s("li",[t._v("找出死锁Sql")]),t._v(" "),s("li",[t._v("分析sql加锁情况")]),t._v(" "),s("li",[t._v("模拟死锁案发")]),t._v(" "),s("li",[t._v("分析死锁日志")]),t._v(" "),s("li",[t._v("分析死锁结果")])])]),t._v(" "),s("h2",{attrs:{id:"_22、创建索引的原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22、创建索引的原则"}},[t._v("#")]),t._v(" 22、创建索引的原则")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("最左前缀匹配原则")]),t._v(" "),s("li",[t._v("频繁作为查询条件的字段才去创建索引")]),t._v(" "),s("li",[t._v("频繁更新的字段不适合创建索引")]),t._v(" "),s("li",[t._v("索引列不能参与计算，不能有函数操作")]),t._v(" "),s("li",[t._v("优先考虑扩展索引，而不是新建索引，避免不必要的索引")]),t._v(" "),s("li",[t._v("在order by或者group by子句中，创建索引需要注意顺序")]),t._v(" "),s("li",[t._v("区分度低的数据列不适合做索引列(如性别）")]),t._v(" "),s("li",[t._v("定义有外键的数据列一定要建立索引。")]),t._v(" "),s("li",[t._v("对于定义为text、image数据类型的列不要建立索引。")]),t._v(" "),s("li",[t._v("删除不再使用或者很少使用的索引")])])]),t._v(" "),s("h2",{attrs:{id:"_23、创建索引的方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23、创建索引的方式有哪些"}},[t._v("#")]),t._v(" 23、创建索引的方式有哪些？")]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("p",[t._v("在创建表的时候创建索引")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" table_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("col_name data_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" FULLTEXT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SPATIAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("UNIQUE 、 FULLTEXT 和 SPATIAL 为可选参数，分别表示唯一索引、全文索引和空间索引；")])]),t._v(" "),s("li",[s("p",[t._v("INDEX 与 KEY 为同义词，两者的作用相同，用来指定创建索引；")])]),t._v(" "),s("li",[s("p",[t._v("index_name 指定索引的名称，为可选参数，如果不指定，那么MySQL默认col_name为索引名；")])]),t._v(" "),s("li",[s("p",[t._v("col_name 为需要创建索引的字段列，该列必须从数据表中定义的多个列中选择；")])]),t._v(" "),s("li",[s("p",[t._v("length 为可选参数，表示索引的长度，只有字符串类型的字段才能指定索引长度；")])]),t._v(" "),s("li",[s("p",[t._v("ASC 或 DESC 指定升序或者降序的索引值存储。")])])])]),t._v(" "),s("li",[s("p",[t._v("使用ALTER TABLE命令添加索引")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" table_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("使用CREATE INDEX命令创建")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" table_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])]),t._v(" "),s("h2",{attrs:{id:"_24、如何删除百万级别以上的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24、如何删除百万级别以上的数据"}},[t._v("#")]),t._v(" 24、如何删除百万级别以上的数据？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("可以删除百万数据的时候可以先删除索引")]),t._v(" "),s("li",[t._v("然后批量删除其中无用数据")]),t._v(" "),s("li",[t._v("删除完成后重新创建索引")])])]),t._v(" "),s("h2",{attrs:{id:"_25、索引的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25、索引的优缺点"}},[t._v("#")]),t._v(" 25、索引的优缺点？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("优点：")])]),t._v(" "),s("ul",[s("li",[t._v("类似大学图书馆建书目索引，提高数据检索的效率，降低 数据库的IO成本 ，这也是创建索引最主要的原因")]),t._v(" "),s("li",[t._v("通过创建唯一索引，可以保证数据库表中每一行 数据的唯一性")]),t._v(" "),s("li",[t._v("在实现数据的参考完整性方面，可以 加速表和表之间的连接 。换句话说，对于有依赖关系的子表和父表联合查询时，可以提高查询速度")]),t._v(" "),s("li",[t._v("在使用分组和排序子句进行数据查询时，可以显著 减少查询中分组和排序的时 间 ，降低了CPU的消耗")])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ul",[s("li",[t._v("创建索引和维护索引要 耗费时间 ，并且随着数据量的增加，所耗费的时间也会增加")]),t._v(" "),s("li",[t._v("索引需要占 磁盘空间 ，除了数据表占数据空间之外，每一个索引还要占一定的物理空间， 存储在磁盘上 ，如果有大量的索引，索引文件就可能比数据文件更快达到最大文件尺寸")]),t._v(" "),s("li",[t._v("虽然索引大大提高了查询速度，同时却会 降低更新表的速度 。当对表中的数据进行增加、删除和修改的时候，索引也要动态地维护，这样就降低了数据的维护速度")])])]),t._v(" "),s("h2",{attrs:{id:"_26、哪些情况适合创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26、哪些情况适合创建索引"}},[t._v("#")]),t._v(" 26、哪些情况适合创建索引？")]),t._v(" "),s("h3",{attrs:{id:"_1、字段的数值有唯一性的限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、字段的数值有唯一性的限制"}},[t._v("#")]),t._v(" 1、字段的数值有唯一性的限制")]),t._v(" "),s("blockquote",[s("p",[t._v("业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。（来源：Alibaba）")]),t._v(" "),s("p",[t._v("说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的。")])]),t._v(" "),s("h3",{attrs:{id:"_2、频繁作为where查询条件的字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、频繁作为where查询条件的字段"}},[t._v("#")]),t._v(" 2、频繁作为WHERE查询条件的字段")]),t._v(" "),s("blockquote",[s("p",[t._v("某个字段在SELECT语句的 WHERE 条件中经常被使用到，那么就需要给这个字段创建索引了。尤其是在数据量大的情况下，创建普通索引就可以大幅提升数据查询的效率。")]),t._v(" "),s("p",[t._v("例如：比如student_info数据表（含100万条数据），假设我们想要查询 student_id=123110 的用户信息。")])]),t._v(" "),s("h3",{attrs:{id:"_3、经常-group-by-和-order-by-的列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、经常-group-by-和-order-by-的列"}},[t._v("#")]),t._v(" 3、经常 GROUP BY 和 ORDER BY 的列")]),t._v(" "),s("blockquote",[s("p",[t._v("索引就是让数据按照某种顺序进行存储或检索，因此当我们使用 "),s("code",[t._v("GROUP BY")]),t._v("对数据进行分组查询，或者使用"),s("code",[t._v("ORDER BY")]),t._v(" 对数据进行排序的时候，就需要 对分组或者排序的字段进行索引 。如果待排序的列有多个，那么可以在这些列上建立"),s("code",[t._v("组合索引")])])]),t._v(" "),s("h3",{attrs:{id:"_4、update、delete-的-where-条件列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、update、delete-的-where-条件列"}},[t._v("#")]),t._v(" 4、UPDATE、DELETE 的 WHERE 条件列")]),t._v(" "),s("blockquote",[s("p",[t._v("对数据按照某个条件进行查询后再进行 UPDATE 或 DELETE 的操作，如果对 WHERE 字段创建了索引，就能大幅提升效率。原理是因为我们需要先根据 WHERE 条件列检索出来这条记录，然后再对它进行更新或删除。"),s("strong",[t._v("如果进行更新的时候，更新的字段是非索引字段，提升的效率会更明显，这是因为非索引字段更新不需要对索引进行维护。")])])]),t._v(" "),s("h3",{attrs:{id:"_5、distinct-字段需要创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、distinct-字段需要创建索引"}},[t._v("#")]),t._v(" 5、DISTINCT 字段需要创建索引")]),t._v(" "),s("blockquote",[s("p",[t._v("有时候我们需要对某个字段进行去重，使用 DISTINCT，那么对这个字段创建索引，也会提升查询效率")])]),t._v(" "),s("h3",{attrs:{id:"_6、多表-join-连接操作时-创建索引注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、多表-join-连接操作时-创建索引注意事项"}},[t._v("#")]),t._v(" 6、多表 JOIN 连接操作时，创建索引注意事项")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("连接表的数量尽量不要超过 3 张 ，因为每增加一张表就相当于增加了一次嵌套的循环，数量级增长会非常快，严重影响查询的效率。")]),t._v(" "),s("li",[t._v("对 WHERE 条件创建索引 ，因为 WHERE 才是对数据条件的过滤。如果在数据量非常大的情况下，没有 WHERE 条件过滤是非常可怕的。")]),t._v(" "),s("li",[t._v("对用于连接的字段创建索引 ，并且该字段在多张表中的 类型必须一致 。比如 course_id 在 student_info 表和 course 表中都为 int(11) 类型，而不能一个为 int 另一个为 varchar 类型")])])]),t._v(" "),s("h3",{attrs:{id:"_7、使用列的类型小的创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、使用列的类型小的创建索引"}},[t._v("#")]),t._v(" 7、使用列的类型小的创建索引")]),t._v(" "),s("h3",{attrs:{id:"_8、使用字符串前缀创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、使用字符串前缀创建索引"}},[t._v("#")]),t._v(" 8、使用字符串前缀创建索引")]),t._v(" "),s("p",[t._v("创建一张商户表，因为地址字段比较长，在地址字段上建立前缀索引")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" shop "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("问题是，截取多少呢？截取得多了，达不到节省索引存储空间的目的；截取得少了，重复内容太多，字段的散列度(选择性)会降低。"),s("strong",[t._v("怎么计算不同的长度的选择性呢？")])]),t._v(" "),s("p",[t._v("先看一下字段在全部数据中的选择度：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("通过不同长度去计算，与全表的选择性对比：")]),t._v(" "),s("p",[s("strong",[t._v("公式")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 索引长度"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sub10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 截取前10个字符的选择度 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sub11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 截取前15个字符的选择度 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sub12"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 截取前20个字符的选择度 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sub13 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 截取前25个字符的选择度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" shop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("引申另一个问题：索引列前缀对排序的影响")])]),t._v(" "),s("p",[s("strong",[t._v("拓展：Alibaba《Java开发手册》")])]),t._v(" "),s("p",[t._v("【 强制 】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度。")]),t._v(" "),s("p",[t._v("说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会 高达 90% 以上 ，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度来确定。")]),t._v(" "),s("h3",{attrs:{id:"_9、-区分度高-散列性高-的列适合作为索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、-区分度高-散列性高-的列适合作为索引"}},[t._v("#")]),t._v(" 9、 区分度高(散列性高)的列适合作为索引")]),t._v(" "),s("h3",{attrs:{id:"_10、使用最频繁的列放到联合索引的左侧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、使用最频繁的列放到联合索引的左侧"}},[t._v("#")]),t._v(" 10、使用最频繁的列放到联合索引的左侧")]),t._v(" "),s("blockquote",[s("p",[t._v('这样也可以较少的建立一些索引。同时，由于"最左前缀原则"，可以增加联合索引的使用率。')])]),t._v(" "),s("h3",{attrs:{id:"_11、在多个字段都要创建索引的情况下-联合索引优于单值索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、在多个字段都要创建索引的情况下-联合索引优于单值索引"}},[t._v("#")]),t._v(" 11、在多个字段都要创建索引的情况下，联合索引优于单值索引")]),t._v(" "),s("h2",{attrs:{id:"_27、哪些情况下创建索引-但是没有生效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27、哪些情况下创建索引-但是没有生效"}},[t._v("#")]),t._v(" 27、哪些情况下创建索引，但是没有生效？")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("查询条件包含or，可能导致索引失效")]),t._v(" "),s("li",[t._v("如何字段类型是字符串，where时一定用引号括起来，否则索引失效")]),t._v(" "),s("li",[t._v("like通配符可能导致索引失效。")]),t._v(" "),s("li",[t._v("联合索引，查询时的条件列不是联合索引中的第一个列，索引失效。")]),t._v(" "),s("li",[t._v("在索引列上使用mysql的内置函数，索引失效。")]),t._v(" "),s("li",[t._v("对索引列运算（如，+、-、*、/），索引失效。")]),t._v(" "),s("li",[t._v("索引字段上使用（！= 或者 < >，not in）时，可能会导致索引失效。")]),t._v(" "),s("li",[t._v("索引字段上使用is null， is not null，可能导致索引失效。")]),t._v(" "),s("li",[t._v("左连接查询或者右连接查询查询关联的字段编码格式不一样，可能导致索引失效。")]),t._v(" "),s("li",[t._v("mysql估计使用全表扫描要比使用索引快,则不使用索引。")])])]),t._v(" "),s("h2",{attrs:{id:"_28、数据库索引的原理-为什么要用b-树-为什么不用二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28、数据库索引的原理-为什么要用b-树-为什么不用二叉树"}},[t._v("#")]),t._v(" 28、数据库索引的原理，为什么要用B+树，为什么不用二叉树？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("为什么不是一般二叉树？")])]),t._v(" "),s("p",[t._v("如果二叉树特殊化为一个链表，相当于全表扫描。平衡二叉树相比于二叉查找树来说，查找效率更稳定，总体的查找速度也更快。")]),t._v(" "),s("p",[s("strong",[t._v("为什么不是平衡二叉树呢？")])]),t._v(" "),s("p",[t._v("我们知道，在内存比在磁盘的数据，查询效率快得多。如果树这种数据结构作为索引，那我们每查找一次数据就需要从磁盘中读取一个节点，也就是我们说的一个磁盘块，但是平衡二叉树可是每个节点只存储一个键值和数据的，如果是B树，可以存储更多的节点数据，树的高度也会降低，因此读取磁盘的次数就降下来啦，查询效率就快啦。")]),t._v(" "),s("p",[s("strong",[t._v("那为什么不是B树而是B+树呢？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("B+树非叶子节点上是不存储数据的，仅存储键值，而B树节点中不仅存储键值，也会存储数据。innodb中页的默认大小是16KB，如果不存储数据，那么就会存储更多的键值，相应的树的阶数（节点的子节点树）就会更大，树就会更矮更胖，如此一来我们查找数据进行磁盘的IO次数有会再次减少，数据查询的效率也会更快。")])]),t._v(" "),s("li",[s("p",[t._v("B+树索引的所有数据均存储在叶子节点，而且数据是按照顺序排列的，链表连着的。那么B+树使得范围查找，排序查找，分组查找以及去重查找变得异常简单。")])])])]),t._v(" "),s("h2",{attrs:{id:"_29、如何选择合适的分布式主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29、如何选择合适的分布式主键"}},[t._v("#")]),t._v(" 29、如何选择合适的分布式主键？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("数据库自增长序列或字段")]),t._v(" "),s("li",[t._v("UUID")]),t._v(" "),s("li",[t._v("Redis生成ID")]),t._v(" "),s("li",[t._v("Twitter的snowflake算法")]),t._v(" "),s("li",[t._v("利用zookeeper生成唯一ID")]),t._v(" "),s("li",[t._v("MongoDB的ObjectId")])])]),t._v(" "),s("h2",{attrs:{id:"_30、在高并发情况下-如何做到安全的修改同一行数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30、在高并发情况下-如何做到安全的修改同一行数据"}},[t._v("#")]),t._v(" 30、在高并发情况下，如何做到安全的修改同一行数据？")]),t._v(" "),s("blockquote",[s("p",[t._v("这种情况下，采用加锁的方式进行安全修改")]),t._v(" "),s("h3",{attrs:{id:"使用悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用悲观锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("使用悲观锁")])]),t._v(" "),s("p",[t._v("悲观锁思想就是，当前线程要进来修改数据时，别的线程都得拒之门外~ 比如，可以使用select…for update ~")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from User where name=‘jay’ for update\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("以上这条sql语句会锁定了User表中所有符合检索条件（name=‘jay’）的记录。本次事务提交之前，别的线程都无法修改这些记录。")]),t._v(" "),s("h3",{attrs:{id:"使用乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用乐观锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("使用乐观锁")])]),t._v(" "),s("p",[t._v("乐观锁思想就是，有线程过来，先放过去修改，如果看到别的线程没修改过，就可以修改成功，如果别的线程修改过，就修改失败或者重试。实现方式：乐观锁一般会使用版本号机制或CAS算法实现。")])]),t._v(" "),s("h2",{attrs:{id:"_31、数据库自增主键可能遇到什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31、数据库自增主键可能遇到什么问题"}},[t._v("#")]),t._v(" 31、数据库自增主键可能遇到什么问题")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("使用自增主键对数据库做分库分表，可能出现诸如主键重复等的问题。解决方案的话，简单点的话可以考虑使用UUID解决，复杂的可以考虑前面提到的分布式主键方案")]),t._v(" "),s("li",[t._v("自增主键会产生表锁，从而引发问题")]),t._v(" "),s("li",[t._v("自增主键可能用完问题。")])])]),t._v(" "),s("h2",{attrs:{id:"_32、mvcc你了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32、mvcc你了解吗"}},[t._v("#")]),t._v(" 32、MVCC你了解吗？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("多版本并发控制")]),t._v("技术的英文全称是 "),s("strong",[t._v("Multiversion Concurrency Control")]),t._v("，简称 "),s("strong",[t._v("MVCC")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("多版本并发控制（MVCC）")]),t._v(" 是通过保存数据在某个时间点的快照来实现并发控制的。也就是说，不管事务执行多长时间，事务内部看到的数据是不受其它事务影响的，根据事务开始的时间不同，每个事务对同一张表，同一时刻看到的数据可能是不一样的。")]),t._v(" "),s("p",[t._v("简单来说，"),s("strong",[t._v("多版本并发控制")]),t._v(" 的思想就是保存数据的历史版本，通过对数据行的多个版本管理来实现数据库的并发控制。这样我们就可以通过比较版本号决定数据是否显示出来，读取数据的时候不需要加锁也可以保证事务的隔离效果。")]),t._v(" "),s("p",[s("strong",[t._v("MVCC需要关注这几个知识点：")])]),t._v(" "),s("ul",[s("li",[t._v("事务版本号")]),t._v(" "),s("li",[t._v("表的隐藏列")]),t._v(" "),s("li",[t._v("undo log")]),t._v(" "),s("li",[t._v("read view")])])]),t._v(" "),s("h2",{attrs:{id:"_33、说一下大表查询的优化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33、说一下大表查询的优化方案"}},[t._v("#")]),t._v(" 33、说一下大表查询的优化方案")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("优化shema、sql语句+索引；")]),t._v(" "),s("li",[t._v("可以考虑加缓存，memcached, redis，或者JVM本地缓存；")]),t._v(" "),s("li",[t._v("主从复制，读写分离；")]),t._v(" "),s("li",[t._v("分库分表；")])])]),t._v(" "),s("h2",{attrs:{id:"_34、blob和text有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34、blob和text有什么区别"}},[t._v("#")]),t._v(" 34、Blob和text有什么区别？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("Blob用于存储二进制数据，而Text用于存储大字符串。")]),t._v(" "),s("li",[t._v("Blob值被视为二进制字符串（字节字符串）,它们没有字符集，并且排序和比较基于列值中的字节的数值。")]),t._v(" "),s("li",[t._v("text值被视为非二进制字符串（字符字符串）。它们有一个字符集，并根据字符集的排序规则对值进行排序和比较。")])])]),t._v(" "),s("h2",{attrs:{id:"_35、组合索引是什么-为什么需要注意组合索引中的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35、组合索引是什么-为什么需要注意组合索引中的顺序"}},[t._v("#")]),t._v(" 35、组合索引是什么？为什么需要注意组合索引中的顺序？")]),t._v(" "),s("blockquote",[s("p",[t._v("组合索引，用户可以在多个列上建立索引,这种索引叫做组合索引。")]),t._v(" "),s("p",[t._v("因为InnoDB引擎中的索引策略的最左原则，所以需要注意组合索引中的顺序。")])]),t._v(" "),s("h2",{attrs:{id:"_36、为什么要使用视图-什么是视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36、为什么要使用视图-什么是视图"}},[t._v("#")]),t._v(" 36、为什么要使用视图？什么是视图？")]),t._v(" "),s("p",[s("strong",[t._v("为什么要使用视图？")])]),t._v(" "),s("p",[t._v("为了提高复杂SQL语句的复用性和表操作的安全性，MySQL数据库管理系统提供了视图特性。")]),t._v(" "),s("p",[s("strong",[t._v("什么是视图？")])]),t._v(" "),s("blockquote",[s("p",[t._v("视图是一个虚拟的表，是一个表中的数据经过某种筛选后的显示方式，视图由一个预定义的查询select语句组成。")])]),t._v(" "),s("h2",{attrs:{id:"_37、视图有哪些特点-哪些使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37、视图有哪些特点-哪些使用场景"}},[t._v("#")]),t._v(" 37、视图有哪些特点？哪些使用场景？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("视图特点：")])]),t._v(" "),s("ul",[s("li",[t._v("视图的列可以来自不同的表，是表的抽象和在逻辑意义上建立的新关系。")]),t._v(" "),s("li",[t._v("视图是由基本表(实表)产生的表(虚表)。")]),t._v(" "),s("li",[t._v("视图的建立和删除不影响基本表。")]),t._v(" "),s("li",[t._v("对视图内容的更新(添加，删除和修改)直接影响基本表。")]),t._v(" "),s("li",[t._v("当视图来自多个基本表时，不允许添加和删除数据。")])]),t._v(" "),s("p",[s("strong",[t._v("视图用途：")]),t._v(" 简化sql查询，提高开发效率，兼容老的表结构。")]),t._v(" "),s("p",[s("strong",[t._v("视图的常见使用场景：")])]),t._v(" "),s("ul",[s("li",[t._v("重用SQL语句；")]),t._v(" "),s("li",[t._v("简化复杂的SQL操作。")]),t._v(" "),s("li",[t._v("使用表的组成部分而不是整个表；")]),t._v(" "),s("li",[t._v("保护数据")]),t._v(" "),s("li",[t._v("更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据。")])])]),t._v(" "),s("h2",{attrs:{id:"_38、视图的优点-缺点-讲一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38、视图的优点-缺点-讲一下"}},[t._v("#")]),t._v(" 38、视图的优点，缺点，讲一下？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("查询简单化。视图能简化用户的操作")]),t._v(" "),s("li",[t._v("数据安全性。视图使用户能以多种角度看待同一数据，能够对机密数据提供安全保护")]),t._v(" "),s("li",[t._v("逻辑数据独立性。视图对重构数据库提供了一定程度的逻辑独立性")])])]),t._v(" "),s("h2",{attrs:{id:"_39、count-1-、count-与-count-列名-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_39、count-1-、count-与-count-列名-的区别"}},[t._v("#")]),t._v(" 39、count(1)、count(*) 与 count(列名) 的区别？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("count(*)：包括了所有的列，相当于行数，在统计结果的时候，不会忽略列值为NULL")]),t._v(" "),s("li",[t._v("count(1)：包括了忽略所有列，用1代表代码行，在统计结果的时候，不会忽略列值为NULL")]),t._v(" "),s("li",[t._v("count(列名)：只包括列名那一列，在统计结果的时候，会忽略列值为空（这里的空不是指空字符串或者0，而是表示null）的计数，即某个字段值为NULL时，不统计。")])])]),t._v(" "),s("h2",{attrs:{id:"_40、什么是存储过程-有哪些优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_40、什么是存储过程-有哪些优缺点"}},[t._v("#")]),t._v(" 40、什么是存储过程？有哪些优缺点？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("存储过程")]),t._v("，就是一些编译好了的SQL语句，这些SQL语句代码像一个方法一样实现一些功能（对单表或多表的增删改查），然后给这些代码块取一个名字，在用到这个功能的时候调用即可。")]),t._v(" "),s("p",[s("strong",[t._v("优点：")])]),t._v(" "),s("ul",[s("li",[t._v("存储过程是一个预编译的代码块，执行效率比较高")]),t._v(" "),s("li",[t._v("存储过程在服务器端运行，减少客户端的压力")]),t._v(" "),s("li",[t._v("允许模块化程序设计，只需要创建一次过程，以后在程序中就可以调用该过程任意次，类似方法的复用")]),t._v(" "),s("li",[t._v("一个存储过程替代大量T_SQL语句 ，可以降低网络通信量，提高通信速率")]),t._v(" "),s("li",[t._v("可以一定程度上确保数据安全")])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ul",[s("li",[t._v("调试麻烦")]),t._v(" "),s("li",[t._v("可移植性不灵活")]),t._v(" "),s("li",[t._v("重新编译问题")])])]),t._v(" "),s("h2",{attrs:{id:"_41、什么是触发器-触发器的使用场景有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_41、什么是触发器-触发器的使用场景有哪些"}},[t._v("#")]),t._v(" 41、什么是触发器？触发器的使用场景有哪些？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("触发器")]),t._v("，指一段代码，当触发某个事件时，自动执行这些代码。")]),t._v(" "),s("p",[s("strong",[t._v("使用场景：")])]),t._v(" "),s("ul",[s("li",[t._v("可以通过数据库中的相关表实现级联更改。")]),t._v(" "),s("li",[t._v("实时监控某张表中的某个字段的更改而需要做出相应的处理。")]),t._v(" "),s("li",[t._v("例如可以生成某些业务的编号。")]),t._v(" "),s("li",[t._v("注意不要滥用，否则会造成数据库及应用程序的维护困难。")])])]),t._v(" "),s("h2",{attrs:{id:"_42、mysql中都有哪些触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_42、mysql中都有哪些触发器"}},[t._v("#")]),t._v(" 42、MySQL中都有哪些触发器？")]),t._v(" "),s("blockquote",[s("p",[t._v("MySQL 数据库中有六种触发器：")]),t._v(" "),s("ul",[s("li",[t._v("Before Insert")]),t._v(" "),s("li",[t._v("After Insert")]),t._v(" "),s("li",[t._v("Before Update")]),t._v(" "),s("li",[t._v("After Update")]),t._v(" "),s("li",[t._v("Before Delete")]),t._v(" "),s("li",[t._v("After Delete")])])]),t._v(" "),s("h2",{attrs:{id:"_43、drop、delete与truncate的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_43、drop、delete与truncate的区别"}},[t._v("#")]),t._v(" 43、drop、delete与truncate的区别")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("delete")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("truncate")]),t._v(" "),s("th",[t._v("drop")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DML")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DDL")]),t._v(" "),s("td",[t._v("DDL")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("回滚")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("可回滚")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不可回滚")]),t._v(" "),s("td",[t._v("不可回滚")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("删除内容")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("表结构还在，删除表的全部或者一部分数据行")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("表结构还在，删除表中的所有数据")]),t._v(" "),s("td",[t._v("从数据库中删除表，所有的数据行，索引和权限也会被删除")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("删除速度")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除速度慢，逐行删除")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除速度快")]),t._v(" "),s("td",[t._v("删除速度最快")])])])]),t._v(" "),s("h2",{attrs:{id:"_44、列值为null时-查询是否会用到索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_44、列值为null时-查询是否会用到索引"}},[t._v("#")]),t._v(" 44、列值为NULL时，查询是否会用到索引？")]),t._v(" "),s("blockquote",[s("p",[t._v("列值为NULL也是可以走索引的")]),t._v(" "),s("p",[t._v("计划对列进行索引，应尽量避免把它设置为可空，因为这会让 MySQL 难以优化引用了可空列的查询，同时增加了引擎的复杂度")])]),t._v(" "),s("h2",{attrs:{id:"_45、如果要存储用户的密码散列-应该使用什么字段进行存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_45、如果要存储用户的密码散列-应该使用什么字段进行存储"}},[t._v("#")]),t._v(" 45、如果要存储用户的密码散列，应该使用什么字段进行存储？")]),t._v(" "),s("blockquote",[s("p",[t._v("密码散列，盐，用户身份证号等固定长度的字符串，应该使用char而不是varchar来存储，这样可以节省空间且提高检索效率。")])]),t._v(" "),s("h2",{attrs:{id:"_46、innodb的事务实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_46、innodb的事务实现原理"}},[t._v("#")]),t._v(" 46、Innodb的事务实现原理？")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("原子性：是使用 undo log来实现的，如果事务执行过程中出错或者用户执行了rollback，系统通过undo log日志返回事务开始的状态。")]),t._v(" "),s("li",[t._v("持久性：使用 redo log来实现，只要redo log日志持久化了，当系统崩溃，即可通过redo log把数据恢复。")]),t._v(" "),s("li",[t._v("隔离性：通过锁以及MVCC,使事务相互隔离开。")]),t._v(" "),s("li",[t._v("一致性：通过回滚、恢复，以及并发情况下的隔离性，从而实现一致性。")])])]),t._v(" "),s("h2",{attrs:{id:"_47、mysql中text数据类型的最大长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_47、mysql中text数据类型的最大长度"}},[t._v("#")]),t._v(" 47、MySQL中TEXT数据类型的最大长度")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("TINYTEXT：256 bytes")]),t._v(" "),s("li",[t._v("TEXT：65,535 bytes(64kb)")]),t._v(" "),s("li",[t._v("MEDIUMTEXT：16,777,215 bytes(16MB)")]),t._v(" "),s("li",[t._v("LONGTEXT：4,294,967,295 bytes(4GB)")])])]),t._v(" "),s("h2",{attrs:{id:"_48、mysql-事务隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_48、mysql-事务隔离级别"}},[t._v("#")]),t._v(" 48、MySQL 事务隔离级别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("未提交读 - 读到其它事务未提交的数据（最新的版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有脏读、不可重复读、幻读现象")])])]),t._v(" "),s("li",[s("p",[t._v("提交读（RC） - 读到其它事务已提交的数据（最新已提交的版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有不可重复读、幻读现象")]),t._v(" "),s("li",[t._v("使用场景：希望看到最新的有效值")])])]),t._v(" "),s("li",[s("p",[t._v("可重复读（RR） - 在事务范围内，多次读能够保证一致性（快照建立时最新已提交版本）")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：有幻读现象，可以用加锁避免")]),t._v(" "),s("li",[t._v("使用场景：事务内要求更强的一致性，但看到的未必是最新的有效值")])])]),t._v(" "),s("li",[s("p",[t._v("串行读 - 在事务范围内，仅有读读可以并发，读写或写写会阻塞其它事务，用这种办法保证更强的一致性")]),t._v(" "),s("ul",[s("li",[t._v("错误现象：无")])])])]),t._v(" "),s("h4",{attrs:{id:"_1、脏读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、脏读现象"}},[t._v("#")]),t._v(" 1、脏读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set session transaction isolation level read uncommitted;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select * from account;/"),s("em",[t._v("两个账户都为 1000")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("start transaction;")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select * from account;/"),s("em",[t._v("1号账户2000, 2号账户1000")]),t._v("/")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(491),alt:"image-20221022101307568"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx2 未提交的情况下，tx1 仍然读取到了它的更改，此时与第一次读取的数据不一致，则是产生了脏读")])]),t._v(" "),s("h4",{attrs:{id:"_2、不可重复读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、不可重复读现象"}},[t._v("#")]),t._v(" 2、不可重复读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level read committed;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("两个账户都为 1000")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("1号账户2000, 2号账户1000")]),t._v("/")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(492),alt:"image-20221022101453527"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx1 在同一事务内，两次读取的结果不一致，当然，此时 tx2 的事务已提交")])]),t._v(" "),s("h4",{attrs:{id:"_3、幻读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、幻读现象"}},[t._v("#")]),t._v(" 3、幻读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("存在 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("发现还是只有 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);  /* ERROR  1062 (23000): Duplicate entry '3' for key 'PRIMARY'  */")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(493),alt:"image-20221022105234049"}})]),t._v(" "),s("blockquote",[s("p",[t._v("tx1 查询时并没有发现 3 号账户，执行插入时却发现主键冲突异常，就好像出现了幻觉一样")])]),t._v(" "),s("h4",{attrs:{id:"_4、使用-for-update-避免幻读现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、使用-for-update-避免幻读现象"}},[t._v("#")]),t._v(" 4、使用 for update 避免幻读现象")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /"),s("em",[t._v("存在 1,2 两个账户")]),t._v("/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account where accountNo=3  for update;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);  /* 阻塞 */")])]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("在 for update 这行语句执行时，虽然此时 3 号账户尚不存在，但 MySQL 在 repeatable read 隔离级别下会用间隙锁，锁住 2 号记录与正无穷大之间的间隙")]),t._v(" "),s("li",[t._v("此时 tx2 想插入 3 号记录就不行了，被间隙锁挡住了")])]),t._v(" "),s("h4",{attrs:{id:"_5、串行读避免幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、串行读避免幻读"}},[t._v("#")]),t._v(" 5、串行读避免幻读")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level serializable;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 存在 1,2 两个账户 */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("insert  into account values(3, 1000);  /* 阻塞 */")])]),t._v(" "),s("tr",[s("td",[t._v("insert  into account values(3, 5000);")]),t._v(" "),s("td")])])]),t._v(" "),s("blockquote",[s("p",[t._v("串行读隔离级别下，普通的 select 也会加共享读锁，其它事务的查询可以并发，但增删改就只能阻塞了")])]),t._v(" "),s("h2",{attrs:{id:"_49、快照读与当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_49、快照读与当前读"}},[t._v("#")]),t._v(" 49、快照读与当前读")]),t._v(" "),s("h4",{attrs:{id:"_1、当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、当前读"}},[t._v("#")]),t._v(" 1、当前读")]),t._v(" "),s("blockquote",[s("p",[t._v("当前读，即读取最新提交的数据，查询时需要加锁，以下情况都属于当前读")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("select … for update")])]),t._v(" "),s("li",[s("p",[t._v("insert、update、delete，都会按最新提交的数据进行操作")])])])]),t._v(" "),s("h4",{attrs:{id:"_2、快照读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、快照读"}},[t._v("#")]),t._v(" 2、快照读")]),t._v(" "),s("blockquote",[s("p",[t._v("快照读，读取某一个快照建立时（可以理解为某一时间点）的数据，快照读主要体现在 select 时，不同隔离级别下，select 的行为不同")]),t._v(" "),s("ul",[s("li",[t._v("在 Serializable 隔离级别下 - 普通 select 也变成当前读")]),t._v(" "),s("li",[t._v("在 RC 隔离级别下 - 每次 select 都会建立新的快照")]),t._v(" "),s("li",[t._v("在 RR 隔离级别下\n"),s("ul",[s("li",[t._v("事务启动后，首次 select 会建立快照")]),t._v(" "),s("li",[t._v("如果事务启动选择了 with consistent snapshot，事务启动时就建立快照")]),t._v(" "),s("li",[t._v("基于旧数据的修改操作，会重新建立快照")])])])]),t._v(" "),s("p",[s("strong",[t._v("快照读本质上读取的是历史数据（原理是回滚段），属于无锁查询")])])]),t._v(" "),s("h5",{attrs:{id:"_1、rr-下-快照建立时机-第一次-select-时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、rr-下-快照建立时机-第一次-select-时"}},[t._v("#")]),t._v(" 1、RR 下，快照建立时机 - 第一次 select 时")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account;  /* 此时建立快照，两个账户为 1000  */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account;  /* 两个账户仍为 1000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("快照一旦建立，以后的查询都基于此快照，因此 tx1 中第二次 select 仍然得到 1 号账户余额为 1000")])]),t._v(" "),s("p",[t._v("如果 tx2 的 update 先执行")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 此时建立快照，1号余额已经为2000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("h5",{attrs:{id:"_2、rr-下-快照建立时机-事务启动时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rr-下-快照建立时机-事务启动时"}},[t._v("#")]),t._v(" 2、RR 下，快照建立时机 - 事务启动时")]),t._v(" "),s("p",[t._v("如果希望事务启动时就建立快照，可以添加 with consistent snapshot 选项")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction with consistent snapshot; /* 此时建立快照，两个账户为 1000  */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance = 2000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 两个账户仍为 1000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("h5",{attrs:{id:"_3、rr-下-快照建立时机-修改数据时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、rr-下-快照建立时机-修改数据时"}},[t._v("#")]),t._v(" 3、RR 下，快照建立时机 - 修改数据时")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("tx1")])]),t._v(" "),s("th",[s("strong",[t._v("tx2")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set  session transaction isolation level repeatable read;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("start  transaction;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 此时建立快照，两个账户为 1000 */")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("update  account set balance=balance+1000 where accountNo=1;")])]),t._v(" "),s("tr",[s("td",[t._v("update  account set balance=balance+1000 where accountNo=1;")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("select  * from account; /* 1号余额为3000 */")]),t._v(" "),s("td")])])]),t._v(" "),s("ul",[s("li",[t._v("tx1 内的修改必须重新建立快照，否则，就会发生丢失更新的问题")])]),t._v(" "),s("h2",{attrs:{id:"_50、innodb-vs-myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_50、innodb-vs-myisam"}},[t._v("#")]),t._v(" 50、InnoDB vs MyISAM")]),t._v(" "),s("h4",{attrs:{id:"_1、innodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、innodb"}},[t._v("#")]),t._v(" 1、InnoDB")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("索引分为聚簇索引与二级索引")]),t._v(" "),s("ul",[s("li",[t._v("聚簇索引：主键值作为索引数据，叶子节点还包含了所有字段数据，索引和数据是存储在一起的")]),t._v(" "),s("li",[t._v("二级索引：除主键外的其它字段建立的索引称为二级索引。被索引的字段值作为索引数据，叶子节点还包含了主键值")])])]),t._v(" "),s("li",[s("p",[t._v("支持事务")]),t._v(" "),s("ul",[s("li",[t._v("通过 undo log 支持事务回滚、当前读（多版本查询）")]),t._v(" "),s("li",[t._v("通过 redo log 实现持久性")]),t._v(" "),s("li",[t._v("通过两阶段提交实现一致性")]),t._v(" "),s("li",[t._v("通过当前读、锁实现隔离性")])])]),t._v(" "),s("li",[s("p",[t._v("支持行锁、间隙锁")])]),t._v(" "),s("li",[s("p",[t._v("支持外键")])])])]),t._v(" "),s("p",[s("strong",[t._v("InnoDB 索引特点")])]),t._v(" "),s("p",[t._v("聚簇索引：主键值作为索引数据，叶子节点还包含了所有字段数据，索引和数据是存储在一起的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(494),alt:"image-20210901155308778"}})]),t._v(" "),s("ul",[s("li",[t._v("主键即 7369、7499、7521 等")])]),t._v(" "),s("p",[t._v("二级索引：除主键外的其它字段建立的索引称为二级索引。被索引的字段值作为索引数据，叶子节点还包含了主键值")]),t._v(" "),s("p",[s("img",{attrs:{src:a(495),alt:"image-20210901155317460"}})]),t._v(" "),s("ul",[s("li",[t._v("上图中 800、950、1100 这些是工资字段的值，根据它们建立了二级索引")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(496),alt:"image-20210901155327838"}})]),t._v(" "),s("ul",[s("li",[t._v("上图中，如果执行查询 "),s("code",[t._v("select empno, ename, sal from emp where sal = 800")]),t._v("，这时候可以利用二级索引定位到 800 这个工资，同时还能知道主键值 7369")]),t._v(" "),s("li",[t._v("但 select 字句中还出现了 ename 字段，在二级索引中不存在，因此需要根据主键值 7369 查询聚簇索引来获取 ename 的信息，这个过程俗称"),s("strong",[t._v("回表")])])]),t._v(" "),s("h4",{attrs:{id:"_2、myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、myisam"}},[t._v("#")]),t._v(" 2、MyISAM")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("索引只有一种")]),t._v(" "),s("ul",[s("li",[t._v("被索引字段值作为索引数据，叶子节点还包含了该记录数据页地址，数据和索引是分开存储的")])])]),t._v(" "),s("li",[s("p",[t._v("不支持事务，没有 undo log 和 redo log")])]),t._v(" "),s("li",[s("p",[t._v("仅支持表锁")])]),t._v(" "),s("li",[s("p",[t._v("不支持外键")])]),t._v(" "),s("li",[s("p",[t._v("会保存表的总行数")])])])]),t._v(" "),s("p",[s("strong",[t._v("MyISAM 索引特点")])]),t._v(" "),s("p",[t._v("被索引字段值作为索引数据，叶子节点还包含了该记录数据页地址，数据和索引是分开存储的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(497),alt:"image-20210901155226621"}})]),t._v(" "),s("h2",{attrs:{id:"_51、查询语句执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_51、查询语句执行流程"}},[t._v("#")]),t._v(" 51、查询语句执行流程")]),t._v(" "),s("p",[s("strong",[t._v("执行 SQL 语句 select * from user where id = 1 时发生了什么")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(498),alt:"image-20210902082718756"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("连接器：负责建立连接、检查权限、连接超时时间由 wait_timeout 控制，默认 8 小时")])]),t._v(" "),s("li",[s("p",[t._v("查询缓存：会将 SQL 和查询结果以键值对方式进行缓存，修改操作会以表单位导致缓存失效")])]),t._v(" "),s("li",[s("p",[t._v("分析器：词法、语法分析")])]),t._v(" "),s("li",[s("p",[t._v("优化器：决定用哪个索引，决定表的连接顺序等")])]),t._v(" "),s("li",[s("p",[t._v("执行器：根据存储引擎类型，调用存储引擎接口")])]),t._v(" "),s("li",[s("p",[t._v("存储引擎：数据的读写接口，索引、表都在此层实现")])])]),t._v(" "),s("h2",{attrs:{id:"_52、undo-log-与-redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_52、undo-log-与-redo-log"}},[t._v("#")]),t._v(" 52、undo log 与 redo log")]),t._v(" "),s("h4",{attrs:{id:"_1、undo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、undo-log"}},[t._v("#")]),t._v(" 1、undo log")]),t._v(" "),s("ul",[s("li",[t._v("回滚数据，以行为单位，记录数据每次的变更，一行记录有多个版本并存")]),t._v(" "),s("li",[t._v("多版本并发控制，即快照读（也称为一致性读），让查询操作可以去访问历史版本")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(499),alt:"image-20210902083051903"}})]),t._v(" "),s("ol",[s("li",[t._v("每个事务会按照开始时间，分配一个单调递增的事务编号 trx id")]),t._v(" "),s("li",[t._v("每次事务的改动都会以行为单位记入回滚日志，包括当时的事务编号，改动的值等")]),t._v(" "),s("li",[t._v("查询操作，事务编号大于自己的数据是不可见的，事务编号小于等于自己的数据才是可见的")])]),t._v(" "),s("ul",[s("li",[t._v("例如图中红色事务看不到 trx id=102 以及 trx id=101 的数据，只有 trx id=99 的数据对它可见")])]),t._v(" "),s("h4",{attrs:{id:"_2、redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、redo-log"}},[t._v("#")]),t._v(" 2、redo log")]),t._v(" "),s("p",[t._v("redo log 的作用主要是实现 ACID 中的持久性，保证提交的数据不丢失")]),t._v(" "),s("ul",[s("li",[t._v("它记录了事务提交的变更操作，服务器意外宕机重启时，利用 redo log 进行回放，重新执行已提交的变更操作")]),t._v(" "),s("li",[t._v("事务提交时，首先将变更写入 redo log，事务就视为成功。至于数据页（表、索引）上的变更，可以放在后面慢慢做\n"),s("ul",[s("li",[t._v("数据页上的变更宕机丢失也没事，因为 redo log 里已经记录了")]),t._v(" "),s("li",[t._v("数据页在磁盘上位置随机，写入速度慢，redo log 的写入是顺序的速度快")])])])]),t._v(" "),s("p",[t._v("它由两部分组成，内存中的 redo log buffer，磁盘上的 redo log file")]),t._v(" "),s("ul",[s("li",[t._v("redo log file 由一组文件组成，当写满了会循环覆盖较旧的日志，这意味着不能无限依赖 redo log，更早的数据恢复需要 binlog")]),t._v(" "),s("li",[t._v("buffer 和 file 两部分组成意味着，写入了文件才真正安全，同步策略由参数 innodb_flush_log_at_trx_commit  控制\n"),s("ul",[s("li",[t._v("0 - 每隔 1s 将日志 write and flush 到磁盘")]),t._v(" "),s("li",[t._v("1 - 每次事务提交将日志 write and flush（默认值）")]),t._v(" "),s("li",[t._v("2 - 每次事务提交将日志 write，每隔 1s flush 到磁盘，意味着 write 意味着写入操作系统缓存，如果 MySQL 挂了，而操作系统没挂，那么数据不会丢失")])])])]),t._v(" "),s("h2",{attrs:{id:"_53、mysql锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_53、mysql锁"}},[t._v("#")]),t._v(" 53、MySQL锁")]),t._v(" "),s("h4",{attrs:{id:"_1、全局锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、全局锁"}},[t._v("#")]),t._v(" 1、全局锁")]),t._v(" "),s("p",[t._v("用作全量备份时，保证"),s("strong",[t._v("表与表之间的数据一致性")])]),t._v(" "),s("p",[t._v("如果不加任何包含，数据备份时就可能产生不一致的情况，如下图所示")]),t._v(" "),s("p",[s("img",{attrs:{src:a(500),alt:"image-20210902090302805"}})]),t._v(" "),s("p",[t._v("全局锁的语法：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("flush "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("使用全局读锁锁定所有数据库的所有表。这时会阻塞其它所有 DML 以及 DDL 操作，这样可以避免备份过程中的数据不一致。接下来可以执行备份，最后用 unlock tables 来解锁")])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])])]),t._v(" "),s("p",[t._v("但 flush tables 属于比较重的操作，可以使用 --single-transaction 参数来完成不加锁的一致性备份（仅针对 InnoDB 引擎的表）")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqldump "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--single-transaction -uroot -p test > 1.sql")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("h4",{attrs:{id:"_2、表级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、表级锁"}},[t._v("#")]),t._v(" 2、表级锁")]),t._v(" "),s("h5",{attrs:{id:"_1、表锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、表锁"}},[t._v("#")]),t._v(" 1、表锁")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("语法：加锁 lock tables 表名 read/write，解锁 unlock tables")]),t._v(" "),s("li",[t._v("缺点：粒度较粗，在 InnoDB 引擎很少使用")])])]),t._v(" "),s("h5",{attrs:{id:"_2、-元数据锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、-元数据锁"}},[t._v("#")]),t._v(" 2、 元数据锁")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[t._v("即 metadata-lock（MDL），主要是为"),s("strong",[t._v("了避免 DML 与 DDL 冲突")]),t._v("，DML 的元数据锁之间不互斥")])]),t._v(" "),s("li",[s("p",[t._v("加元数据锁的几种情况")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("lock tables read/write")]),t._v("，类型为 SHARED_READ_ONLY 和 SHARED_NO_READ_WRITE")]),t._v(" "),s("li",[s("code",[t._v("alter table")]),t._v("，类型为 EXCLUSIVE，与其它 MDL 都互斥")]),t._v(" "),s("li",[s("code",[t._v("select，select … lock in share mode")]),t._v("，类型为 SHARED_READ")]),t._v(" "),s("li",[s("code",[t._v("insert，update，delete，select for update")]),t._v("，类型为 SHARED_WRITE")])])]),t._v(" "),s("li",[s("p",[t._v("查看元数据锁（适用于 MySQL 8.0 以上版本）")]),t._v(" "),s("p",[s("code",[t._v("select object_type,object_schema,object_name,lock_type,lock_duration from performance_schema.metadata_locks;")])])])])]),t._v(" "),s("h5",{attrs:{id:"_3、is-意向共享-与-ix-意向排他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、is-意向共享-与-ix-意向排他"}},[t._v("#")]),t._v(" 3、IS（意向共享） 与 IX（意向排他）")]),t._v(" "),s("ul",[s("li",[t._v("主要是"),s("strong",[t._v("避免 DML 与表锁冲突")]),t._v("，DML 主要目的是加行锁，为了让表锁不用检查每行数据是否加锁，加意向锁（表级）来减少表锁的判断，意向锁之间不会互斥")]),t._v(" "),s("li",[t._v("加意向表锁的几种情况\n"),s("ul",[s("li",[s("code",[t._v("select … lock in share mode")]),t._v(" 会加 IS 锁")]),t._v(" "),s("li",[s("code",[t._v("insert，update，delete， select … for update")]),t._v(" 会加 IX 锁")])])]),t._v(" "),s("li",[t._v("查看意向表锁（适用于 MySQL 8.0 以上版本）\n"),s("ul",[s("li",[t._v("select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks;")])])])]),t._v(" "),s("h4",{attrs:{id:"_3、行级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、行级锁"}},[t._v("#")]),t._v(" 3、行级锁")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("种类")]),t._v(" "),s("ul",[s("li",[t._v("行锁 – 在 RC 下，锁住的是行，防止其他事务对此行 update 或 delete")]),t._v(" "),s("li",[t._v("间隙锁 – 在 RR 下，锁住的是间隙，防止其他事务在这个间隙 insert 产生幻读")]),t._v(" "),s("li",[t._v("临键锁 – 在 RR 下，锁住的是前面间隙+行，特定条件下可优化为行锁")])])]),t._v(" "),s("li",[s("p",[t._v("查看行级锁")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks where object_name='表名';")])])])])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])])]),t._v(" "),s("ul",[s("li",[t._v("它们锁定的其实都是"),s("strong",[t._v("索引")]),t._v("上的行与间隙，根据索引的有序性来确定间隙")])])]),t._v(" "),s("p",[t._v("测试数据")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lisi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wangwu'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhang'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhang'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("说明")])]),t._v(" "),s("ul",[s("li",[t._v("1,2,3,4 之间其实并不可能有间隙")]),t._v(" "),s("li",[t._v("4 与 8 之间有间隙")]),t._v(" "),s("li",[t._v("8 与 12 之间有间隙")]),t._v(" "),s("li",[t._v("12 与正无穷大之间有间隙")]),t._v(" "),s("li",[t._v("其实我们的例子中还有负无穷大与 1 之间的间隙，想避免负数可以通过建表时选择数据类型为 unsigned int")])])]),t._v(" "),s("p",[t._v("间隙锁例子")]),t._v(" "),s("p",[t._v("事务1：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 锁住的是 8 与 12 之间的间隙 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("事务2：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("临键锁和记录锁例子")]),t._v(" "),s("p",[t._v("事务1：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("临键锁锁定的是左开右闭的区间，与上条查询条件相关的区间有 (4,8]，(8,12]，(12,+∞)")]),t._v(" "),s("li",[t._v("临键锁在某些条件下可以被优化为记录锁，例如 (4,8] 被优化为只针对 8 的记录锁，前面的区间不会锁住")])]),t._v(" "),s("p",[t._v("事务2：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 会阻塞 */")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=_.exports},491:function(t,s,a){t.exports=a.p+"assets/img/image-20221022101307568.a4c07013.png"},492:function(t,s,a){t.exports=a.p+"assets/img/image-20221022101453527.622f2694.png"},493:function(t,s,a){t.exports=a.p+"assets/img/image-20221022105234049.de3df162.png"},494:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155308778.3ca6ec2f.png"},495:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155317460.5e9e106e.png"},496:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155327838.80dc4251.png"},497:function(t,s,a){t.exports=a.p+"assets/img/image-20210901155226621.b34d7bfa.png"},498:function(t,s,a){t.exports=a.p+"assets/img/image-20210902082718756.5ba275bc.png"},499:function(t,s,a){t.exports=a.p+"assets/img/image-20210902083051903.30d2a51b.png"},500:function(t,s,a){t.exports=a.p+"assets/img/image-20210902090302805.350b17e9.png"}}]);