import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-f55ccf80.js";const i="/assets/image-20221023133858757-bb3dc86d.png",u="/assets/image-20191107170946888-7d21ca62.png",r="/assets/image-20191107171412510-a442ed9b.png",k="/assets/image-20191107171722920-d2a7193e.png",d="/assets/image-20191107171953361-26b06511.png",v="/assets/image-20191107172443294-4101440f.png",m="/assets/image-20191107172556600-4433a725.png",b="/assets/server_design-87d38f2d.png",y="/assets/image-20221023163242809-5737c46e.png",g="/assets/stock_order_valid-a203da76.png",q={},h=p('<h2 id="_1、概述" tabindex="-1"><a class="header-anchor" href="#_1、概述" aria-hidden="true">#</a> 1、概述</h2><blockquote><p>HATEOAS（Hypermedia as the engine of application state）是 REST 架构风格中最复杂的约束，也是构建成熟 REST 服务的核心。</p></blockquote><h2 id="_2、hateoas示例" tabindex="-1"><a class="header-anchor" href="#_2、hateoas示例" aria-hidden="true">#</a> 2、HATEOAS示例</h2><p><img src="'+i+`" alt="image-20221023133858757" loading="lazy"></p><h2 id="_3、hateoas常用链接类型" tabindex="-1"><a class="header-anchor" href="#_3、hateoas常用链接类型" aria-hidden="true">#</a> 3、HATEOAS常用链接类型</h2><table><thead><tr><th>REL</th><th>说明</th></tr></thead><tbody><tr><td>SELF</td><td>指向当前资源本身的链接</td></tr><tr><td>edit</td><td>指向⼀一个可以编辑当前资源的链接</td></tr><tr><td>collection</td><td>如果当前资源包含在某个集合中，指向该集合的链接</td></tr><tr><td>search</td><td>指向⼀一个可以搜索当前资源与其相关资源的链接</td></tr><tr><td>related</td><td>指向⼀一个与当前资源相关的链接</td></tr><tr><td>first</td><td>集合遍历相关的类型，指向第⼀一个资源的链接</td></tr><tr><td>last</td><td>集合遍历相关的类型，指向最后⼀一个资源的链接</td></tr><tr><td>previous</td><td>集合遍历相关的类型，指向上⼀一个资源的链接</td></tr></tbody></table><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>device</span><span class="token punctuation">&gt;</span></span>
    ......
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>self<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://host:port/res/device/11<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>device</span><span class="token punctuation">&gt;</span></span>
  ...
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>next<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://host:port/res/device?start=10&amp;size=10<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、hateoas-crud示例" tabindex="-1"><a class="header-anchor" href="#_4、hateoas-crud示例" aria-hidden="true">#</a> 4、HATEOAS CRUD示例</h2>`,8),f=n("p",null,"显示接口",-1),_={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/search",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,[n("img",{src:u,alt:"image-20191107170946888",loading:"lazy"})],-1),S=n("p",null,"分页查询",-1),T={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate%7B?page,size,sort%7D",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,[n("img",{src:r,alt:"image-20191107171412510",loading:"lazy"})],-1),R=n("p",null,"支持排序：",-1),x={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate?page=0&size=3&sort=lastUpdateUser,desc",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,[n("img",{src:k,alt:"image-20191107171722920",loading:"lazy"})],-1),B=n("p",null,"新增数据",-1),C={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,"传递的操作类型要改为POST， 采用JSON格式提交数据。",-1),O=n("p",null,[n("img",{src:d,alt:"image-20191107171953361",loading:"lazy"})],-1),N=n("p",null,"更新数据",-1),L={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/15",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,"链接附带数据唯一ID， 提交采用PUT方式。",-1),I=n("p",null,[n("img",{src:v,alt:"image-20191107172443294",loading:"lazy"})],-1),H=n("p",null,"删除数据",-1),z={href:"http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/15",target:"_blank",rel:"noopener noreferrer"},P=n("p",null,"提交方式采用PUT。",-1),U=n("p",null,[n("img",{src:m,alt:"image-20191107172556600",loading:"lazy"})],-1),M=p('<h2 id="_5、案例设计" tabindex="-1"><a class="header-anchor" href="#_5、案例设计" aria-hidden="true">#</a> 5、案例设计</h2><h3 id="_1、服务设计" tabindex="-1"><a class="header-anchor" href="#_1、服务设计" aria-hidden="true">#</a> 1、服务设计</h3><p>采用Spring Data Rest 实现 Hypermedia规范。</p><p><img src="'+b+`" alt="server_design" loading="lazy"> 设计两个服务， 订单服务和股票服务， 两个服务遵循Hateoas风格。</p><ul><li>Step 1: 通过Restful的Hypermedia模型调用股票服务， 查询并打印股票信息。</li><li>Step 2: 通过HTTP PUT动作更新股票价格。</li><li>Step 3: 重新调用股票信息接口，打印股票名称与价格。</li><li>Step 4: 以上步骤操作成功后， 订单服务调用自身接口， 生成订单信息。</li></ul><h3 id="_2、工程说明" tabindex="-1"><a class="header-anchor" href="#_2、工程说明" aria-hidden="true">#</a> 2、工程说明</h3><blockquote><p>数据层采用spring data jpa，spring提供的一套简化JPA开发的框架，按照约定好的【方法命名规则】写dao层接口，就可以在不写接口实现的情况下，实现对数据库的访问和操作。同时提供了很多除了CRUD之外的功能，如分页、排序、复杂查询等等。</p><p>本工程侧重Hateoas的理解， 数据库采用简化的H2内存数据库， 重新启动服务数据消失。</p></blockquote><h3 id="_3、构建工程" tabindex="-1"><a class="header-anchor" href="#_3、构建工程" aria-hidden="true">#</a> 3、构建工程</h3><h4 id="_1、hateoas-stocks股票服务" tabindex="-1"><a class="header-anchor" href="#_1、hateoas-stocks股票服务" aria-hidden="true">#</a> 1、hateoas-stocks股票服务</h4><ul><li><p>启动类</p><p>要加上EntityScan与EnableJpaRepositories注解，指定路径， 否则不生效。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EntityScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EnableJpaRepositories</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StackApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">StackApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 数据源
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Hibernate5Module</span> <span class="token function">hibernate5Module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Hibernate5Module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * json解析
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Jackson2ObjectMapperBuilderCustomizer</span> <span class="token function">jackson2ObjectMapperBuilderCustomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> builder <span class="token operator">-&gt;</span> builder<span class="token punctuation">.</span><span class="token function">indentOutput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实体类</p><ul><li><p>BaseEntity：通用实体类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@MappedSuperclass</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">IDENTITY</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@CreationTimestamp</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@UpdateTimestamp</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>股票实体类：<code>StocksEntity</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;T_STOCKS&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StocksEntity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span><span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Double</span> price<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>·StocksRepository接口</p><p>定义两个方法，根据名称集合查找多个股票信息； 根据指定名称查找股票信息。</p><p>按照JPA规范，按照方法名称自动映射解析， 无须写SQL。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RepositoryRestResource</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;stocks&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StocksRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 根据股票名称查找所对应的股票数据
     * <span class="token keyword">@param</span> <span class="token parameter">list</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByNameInOrderById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据名称查询股票信息
     * <span class="token keyword">@param</span> <span class="token parameter">name</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StocksEntity</span> <span class="token function">findByName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置文件yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> hateoas<span class="token punctuation">-</span>stocks
  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>
    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>
      <span class="token key atrule">ddl-auto</span><span class="token punctuation">:</span> none
    <span class="token key atrule">properties</span><span class="token punctuation">:</span>
      <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>
        <span class="token key atrule">show_sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">format_sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数据库文件</p><ul><li><p>schema.sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> t_stocks <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> t_stocks<span class="token punctuation">(</span>
    id <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    price <span class="token keyword">double</span> <span class="token punctuation">,</span>
    create_time <span class="token keyword">timestamp</span> <span class="token punctuation">,</span>
    update_time <span class="token keyword">timestamp</span> <span class="token punctuation">,</span>
    <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>data.sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> t_stocks<span class="token punctuation">(</span>name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;中国平安&#39;</span><span class="token punctuation">,</span> <span class="token number">88.8</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t_stocks<span class="token punctuation">(</span>name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;工商银行&#39;</span><span class="token punctuation">,</span> <span class="token number">89.8</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t_stocks<span class="token punctuation">(</span>name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;长沙银行&#39;</span><span class="token punctuation">,</span> <span class="token number">66.8</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>整体工程</p><img src="`+y+`" alt="image-20221023163242809" style="zoom:80%;"></li></ul><h4 id="_2、hateoas-order订单服务" tabindex="-1"><a class="header-anchor" href="#_2、hateoas-order订单服务" aria-hidden="true">#</a> 2、hateoas-order订单服务</h4><ul><li><p>启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EntityScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EnableJpaRepositories</span><span class="token punctuation">(</span><span class="token string">&quot;com.xiaobear&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">OrderApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Hibernate5Module</span> <span class="token function">hibernate5Module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Hibernate5Module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Jackson2ObjectMapperBuilderCustomizer</span> <span class="token function">jackson2ObjectMapperBuilderCustomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> builder <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">indentOutput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置HTTP连接池参数
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span> <span class="token function">requestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PoolingHttpClientConnectionManager</span> connectionManager <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connectionManager<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connectionManager<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>connectionManager<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">evictIdleConnections</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">disableAutomaticRetries</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">//  Keep-Alive 策略</span>
                <span class="token punctuation">.</span><span class="token function">setKeepAliveStrategy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RemoteConnectionKeepAliveStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HttpComponentsClientHttpRequestFactory</span> requestFactory <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> requestFactory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 设置RestTemplate参数
     * <span class="token keyword">@param</span> <span class="token parameter">builder</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token class-name">RestTemplateBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> builder
                <span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">requestFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">requestFactory</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实体类</p><ul><li><p><code>OrderEntity</code>:订单实体类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;t_order&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@Builder</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderEntity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 用户名
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> user<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 股票名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> stockName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 成交数量
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> volume<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 成交价格
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> price<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>股票实体类：<code>StocksEntity</code></p></li><li><p>BaseEntity：通用实体类</p></li></ul></li><li><p>OrderRepository接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RepositoryRestResource</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEntity</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 通过用户查询信息
     * <span class="token keyword">@param</span> <span class="token parameter">user</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>RemoteConnectionKeepAliveStrategy</code>：远程连接</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RemoteConnectionKeepAliveStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">ConnectionKeepAliveStrategy</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token constant">DEFAULT_SECONDS</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 远程连接， keepalive的设置策略
     * <span class="token keyword">@param</span> <span class="token parameter">httpResponse</span>
     * <span class="token keyword">@param</span> <span class="token parameter">httpContext</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getKeepAliveDuration</span><span class="token punctuation">(</span><span class="token class-name">HttpResponse</span> httpResponse<span class="token punctuation">,</span> <span class="token class-name">HttpContext</span> httpContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>httpResponse<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token constant">HTTP</span><span class="token punctuation">.</span><span class="token constant">CONN_KEEP_ALIVE</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>h <span class="token operator">-&gt;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">endsWithIgnoreCase</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span>
                        <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>h <span class="token operator">-&gt;</span> <span class="token class-name">NumberUtils</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">DEFAULT_SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_SECONDS</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>runner类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RemoteRunner</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationRunner</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">URI</span> <span class="token constant">ROOT_URI</span> <span class="token operator">=</span> <span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8080/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderRepository</span> orderRepository<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ApplicationArguments</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">Link</span> stocksLink <span class="token operator">=</span> <span class="token function">getLink</span><span class="token punctuation">(</span><span class="token constant">ROOT_URI</span><span class="token punctuation">,</span><span class="token string">&quot;stocksEntities&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Step 1: 查询股票信息</span>
        <span class="token function">queryStocks</span><span class="token punctuation">(</span>stocksLink<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Step 2: 更新股票价格</span>
        <span class="token class-name">Link</span> updateLink<span class="token operator">=</span> <span class="token function">getLink</span><span class="token punctuation">(</span><span class="token constant">ROOT_URI</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;stocks/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;stocksEntity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Resource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span></span> americano <span class="token operator">=</span> <span class="token function">updateStocks</span><span class="token punctuation">(</span>updateLink<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Step 3: 重新查询打印股票信息</span>
        <span class="token function">queryStocks</span><span class="token punctuation">(</span>stocksLink<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Step 4: 生成订单信息</span>
        <span class="token class-name">OrderEntity</span> order <span class="token operator">=</span> <span class="token class-name">OrderEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token string">&quot;mirson&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">stockName</span><span class="token punctuation">(</span><span class="token string">&quot;建设银行&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">volume</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">price</span><span class="token punctuation">(</span><span class="token number">99.9</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获取请求链接
     * <span class="token keyword">@param</span> <span class="token parameter">uri</span>
     * <span class="token keyword">@param</span> <span class="token parameter">rel</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Link</span> <span class="token function">getLink</span><span class="token punctuation">(</span><span class="token class-name">URI</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> rel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resources</span><span class="token punctuation">&lt;</span><span class="token class-name">Link</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> rootResp <span class="token operator">=</span>
                restTemplate<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                        <span class="token keyword">new</span> <span class="token class-name">ParameterizedTypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resources</span><span class="token punctuation">&lt;</span><span class="token class-name">Link</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Link</span> link <span class="token operator">=</span> rootResp<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLink</span><span class="token punctuation">(</span>rel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Link: {}&quot;</span><span class="token punctuation">,</span> link<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> link<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 查询股票信息
     * <span class="token keyword">@param</span> <span class="token parameter">stocksLink</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">queryStocks</span><span class="token punctuation">(</span><span class="token class-name">Link</span> stocksLink<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PagedResources</span><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> stocksResp <span class="token operator">=</span>
                restTemplate<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>stocksLink<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                        <span class="token keyword">new</span> <span class="token class-name">ParameterizedTypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PagedResources</span><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> stocksResp<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">null</span> <span class="token operator">!=</span> stocksResp<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">StringBuffer</span> strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stocksResp<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                strs<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> resp <span class="token operator">=</span> strs<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;,$&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;query stocks ==&gt; &quot;</span> <span class="token operator">+</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;query stocks ==&gt;  empty! &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新股票信息
     * <span class="token keyword">@param</span> <span class="token parameter">link</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Resource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">updateStocks</span><span class="token punctuation">(</span><span class="token class-name">Link</span> link<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">StocksEntity</span> americano <span class="token operator">=</span> <span class="token class-name">StocksEntity</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;中国平安&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">price</span><span class="token punctuation">(</span><span class="token number">68.9</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RequestEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span></span> req <span class="token operator">=</span>
                <span class="token class-name">RequestEntity</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>link<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span>americano<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> resp <span class="token operator">=</span>
                restTemplate<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>
                        <span class="token keyword">new</span> <span class="token class-name">ParameterizedTypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&lt;</span><span class="token class-name">StocksEntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;add Stocks ==&gt; {}&quot;</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resp<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置文件yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> hateoas<span class="token punctuation">-</span>order
  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>
    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>
      <span class="token key atrule">ddl-auto</span><span class="token punctuation">:</span> none
    <span class="token key atrule">properties</span><span class="token punctuation">:</span>
      <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>
        <span class="token key atrule">show_sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">format_sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数据库文件</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> t_order <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">;</span>

<span class="token keyword">create</span> <span class="token keyword">table</span> t_order <span class="token punctuation">(</span>
    id <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    <span class="token keyword">user</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    stock_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    volume <span class="token keyword">int</span><span class="token punctuation">,</span>
    price <span class="token keyword">double</span> <span class="token punctuation">,</span>
    create_time <span class="token keyword">timestamp</span> <span class="token punctuation">,</span>
    update_time <span class="token keyword">timestamp</span><span class="token punctuation">,</span>
    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_3、启动股票服务验证" tabindex="-1"><a class="header-anchor" href="#_3、启动股票服务验证" aria-hidden="true">#</a> 3、启动股票服务验证</h4>`,13),F=n("p",null,"启动股票服务，通过HTTP访问， 来查看Rest接口信息",-1),J={href:"http://127.0.0.1:8080/",target:"_blank",rel:"noopener noreferrer"},W=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;stocksEntities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks{?page,size,sort}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;templated&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;profile&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/profile&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到我们定义的/stocks接口</p>`,2),V={href:"http://127.0.0.1:8080/stocks",target:"_blank",rel:"noopener noreferrer"},K=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_embedded&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;stocksEntities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;createTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.644+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updateTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.644+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;中国平安&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">68.6</span><span class="token punctuation">,</span>
      <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/1&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;stocksEntity&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/1&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;createTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.647+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updateTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.647+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;工商银行&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">58.8</span><span class="token punctuation">,</span>
      <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/2&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;stocksEntity&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/2&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;createTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.648+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updateTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.648+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;招商银行&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">98.9</span><span class="token punctuation">,</span>
      <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/3&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;stocksEntity&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/3&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks{?page,size,sort}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;templated&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;profile&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/profile/stocks&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;search&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/search&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;page&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;size&quot;</span> <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token property">&quot;totalElements&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;totalPages&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印了所有股票信息，最下面还暴露了其他接口信息。</p>`,2),G={href:"http://127.0.0.1:8080/stocks/search",target:"_blank",rel:"noopener noreferrer"},Y=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;findByName&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/search/findByName{?name}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;templated&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;findByNameInOrderById&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/search/findByNameInOrderById{?list}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;templated&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/search&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印了我们通过JPA定义的两个接口，findByNameInOrderById与findByName。</p>`,2),Q={href:"http://127.0.0.1:8080/stocks/search/findByNameInOrderById?list=%E4%B8%AD%E5%9B%BD%E5%B9%B3%E5%AE%89,test",target:"_blank",rel:"noopener noreferrer"},$=p(`<p>查询中国平安与test两只股票，结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_embedded&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;stocksEntities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;createTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.644+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updateTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:20:44.644+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;中国平安&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">68.6</span><span class="token punctuation">,</span>
      <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/1&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;stocksEntity&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/1&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/stocks/search/findByNameInOrderById?list=%E4%B8%AD%E5%9B%BD%E5%B9%B3%E5%AE%89,latte&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),X=n("h4",{id:"_4、启动订单服务验证",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4、启动订单服务验证","aria-hidden":"true"},"#"),s(" 4、启动订单服务验证")],-1),Z=n("li",null,[n("p",null,"启动订单服务， 完整验证四个步骤处理流程。"),n("p",null,"条件： 订单服务， 预期是修改中国平安的股票， 从价格68.6改成68.9；"),n("p",null,"新增订单信息： 股票名称建设银行，用户名是mirson, 交易数量为1000， 价格为99.9。")],-1),nn=n("li",null,[n("p",null,"控制台日志"),n("p",null,[n("img",{src:g,alt:"1562682968676",loading:"lazy"})]),n("p",null,"看到两行日志，中国平安的价格发生了变化，从68.6修改为68.9。")],-1),sn=n("p",null,"查看order服务的订单信息",-1),an={href:"http://127.0.0.1:8082/order",target:"_blank",rel:"noopener noreferrer"},tn=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_embedded&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;orderEntities&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;createTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:35:42.520+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updateTime&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2019-07-09T14:35:42.520+0000&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;user&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;mirson&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;stockName&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;建设银行&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;volume&quot;</span> <span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
      <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">99.9</span><span class="token punctuation">,</span>
      <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8082/order/1&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;orderEntity&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8082/order/1&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_links&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;self&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8082/order{?page,size,sort}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;templated&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;profile&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8082/profile/order&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;search&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;href&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8082/order/search&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;page&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;size&quot;</span> <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token property">&quot;totalElements&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;totalPages&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成了我们新增的订单信息。此外还可以通过Postman来模拟增删改查操作， Spring Data Rest都帮我们做好封装。</p><p>通过Spring Data Rest整个实现流程非常简单， 没有Controller层， 这正是Restful的设计风格， 以资源为对象， 无需过多的流程，转换处理。</p>`,3),pn=p(`<h3 id="_4、遇到的问题" tabindex="-1"><a class="header-anchor" href="#_4、遇到的问题" aria-hidden="true">#</a> 4、遇到的问题</h3><h4 id="_1、springboot中使用整合springdata-jpa-出现-no-identifier-specified-for-entity" tabindex="-1"><a class="header-anchor" href="#_1、springboot中使用整合springdata-jpa-出现-no-identifier-specified-for-entity" aria-hidden="true">#</a> 1、SpringBoot中使用整合SpringData JPA，出现“No identifier specified for entity”</h4><p>先看代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">CreationTimestamp</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">UpdateTimestamp</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Id</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> xiaobear
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@description</span>: 基础类
 * <span class="token keyword">@date</span> 2022/10/23 13:57
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@MappedSuperclass</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">IDENTITY</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@CreationTimestamp</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@UpdateTimestamp</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后来经过百度查找一番，发现标注@Id引入的包错了</p><ul><li>错误引入：<code>import org.springframework.data.annotation.Id;</code></li><li>正确引入：<code>import javax.persistence.Id;</code></li></ul><h4 id="_2、orderrepository-must-only-contain-a-single-path-segment" tabindex="-1"><a class="header-anchor" href="#_2、orderrepository-must-only-contain-a-single-path-segment" aria-hidden="true">#</a> 2、OrderRepository must only contain a single path segment!</h4><p>先看代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RepositoryRestResource</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;/order&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEntity</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 通过用户查询信息
     * <span class="token keyword">@param</span> <span class="token parameter">user</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),en={href:"https://time.geekbang.org/discuss/detail/157607",target:"_blank",rel:"noopener noreferrer"},on=n("p",null,[s("尝试去除了路径上的"),n("code",null,"'/'"),s("，启动发现正常了")],-1);function cn(ln,un){const a=o("ExternalLinkIcon");return c(),l("div",null,[h,n("ul",null,[n("li",null,[f,n("p",null,[n("a",_,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/search"),t(a)])]),w]),n("li",null,[S,n("p",null,[n("a",T,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate{?page,size,sort}"),t(a)])]),E])]),R,n("p",null,[n("a",x,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate?page=0&size=3&sort=lastUpdateUser,desc"),t(a)])]),j,n("ul",null,[n("li",null,[B,n("p",null,[n("a",C,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate"),t(a)])]),A,O]),n("li",null,[N,n("p",null,[n("a",L,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/15"),t(a)])]),D,I]),n("li",null,[H,n("p",null,[n("a",z,[s("http://39.98.152.160:10680/admin/accountWarnNotifyTemplate/15"),t(a)])]),P,U])]),M,n("ol",null,[n("li",null,[F,n("ul",null,[n("li",null,[n("p",null,[s("地址： "),n("a",J,[s("http://127.0.0.1:8080/"),t(a)])]),W]),n("li",null,[n("p",null,[s("地址： "),n("a",V,[s("http://127.0.0.1:8080/stocks"),t(a)])]),K]),n("li",null,[n("p",null,[s("地址： "),n("a",G,[s("http://127.0.0.1:8080/stocks/search"),t(a)])]),Y]),n("li",null,[n("p",null,[s("地址： "),n("a",Q,[s("http://127.0.0.1:8080/stocks/search/findByNameInOrderById?list=中国平安,test"),t(a)])]),$])])])]),X,n("ol",null,[Z,nn,n("li",null,[sn,n("p",null,[s("地址： "),n("a",an,[s("http://127.0.0.1:8082/order"),t(a)])]),tn])]),pn,n("p",null,[s("通过查阅资料："),n("a",en,[s("资料链接"),t(a)])]),on])}const dn=e(q,[["render",cn],["__file","HATEOAS.html.vue"]]);export{dn as default};
