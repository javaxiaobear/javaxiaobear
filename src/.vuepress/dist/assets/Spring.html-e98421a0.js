const e=JSON.parse('{"key":"v-564a37d8","path":"/interview/framework/Spring.html","title":"Spring 52道面试题","lang":"zh-CN","frontmatter":{"title":"Spring 52道面试题","description":"1、什么是Spring?\\r Spring是一个轻量级Java开发框架，最早有Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于...","head":[["meta",{"property":"og:url","content":"https://javaxiaobear.cn/interview/framework/Spring.html"}],["meta",{"property":"og:site_name","content":"小熊学Java 全能学习+面试指南"}],["meta",{"property":"og:title","content":"Spring 52道面试题"}],["meta",{"property":"og:description","content":"1、什么是Spring?\\r Spring是一个轻量级Java开发框架，最早有Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T11:19:08.000Z"}],["meta",{"property":"article:author","content":"小熊同学"}],["meta",{"property":"article:modified_time","content":"2023-09-21T11:19:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 52道面试题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T11:19:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小熊同学\\",\\"url\\":\\"https://javaxiaobear.cn\\"}]}"]]},"headers":[{"level":2,"title":"1、什么是Spring?","slug":"_1、什么是spring","link":"#_1、什么是spring","children":[]},{"level":2,"title":"2、Spring的两大核心概念","slug":"_2、spring的两大核心概念","link":"#_2、spring的两大核心概念","children":[{"level":3,"title":"1、IOC（控制反转）","slug":"_1、ioc-控制反转","link":"#_1、ioc-控制反转","children":[]},{"level":3,"title":"2、AOP（面向切面编程）","slug":"_2、aop-面向切面编程","link":"#_2、aop-面向切面编程","children":[]}]},{"level":2,"title":"3、Spring的优缺点是什么？","slug":"_3、spring的优缺点是什么","link":"#_3、spring的优缺点是什么","children":[{"level":3,"title":"1、优点","slug":"_1、优点","link":"#_1、优点","children":[]},{"level":3,"title":"2、缺点","slug":"_2、缺点","link":"#_2、缺点","children":[]}]},{"level":2,"title":"4、Spring由哪些模块组成？","slug":"_4、spring由哪些模块组成","link":"#_4、spring由哪些模块组成","children":[]},{"level":2,"title":"5、Spring中用到了哪些设计模式？","slug":"_5、spring中用到了哪些设计模式","link":"#_5、spring中用到了哪些设计模式","children":[]},{"level":2,"title":"6、讲解一下核心容器（spring context应用上下文) 模块","slug":"_6、讲解一下核心容器-spring-context应用上下文-模块","link":"#_6、讲解一下核心容器-spring-context应用上下文-模块","children":[]},{"level":2,"title":"7、Spring框架中有哪些不同类型的事件？","slug":"_7、spring框架中有哪些不同类型的事件","link":"#_7、spring框架中有哪些不同类型的事件","children":[]},{"level":2,"title":"8、什么是Spring IOC容器？","slug":"_8、什么是spring-ioc容器","link":"#_8、什么是spring-ioc容器","children":[]},{"level":2,"title":"9、控制反转（IOC）有什么用？","slug":"_9、控制反转-ioc-有什么用","link":"#_9、控制反转-ioc-有什么用","children":[]},{"level":2,"title":"10、IOC的优点有哪些？","slug":"_10、ioc的优点有哪些","link":"#_10、ioc的优点有哪些","children":[]},{"level":2,"title":"11、Spring IOC的实现机制","slug":"_11、spring-ioc的实现机制","link":"#_11、spring-ioc的实现机制","children":[]},{"level":2,"title":"12、BeanFactory 和 ApplicationContext有什么区别？","slug":"_12、beanfactory-和-applicationcontext有什么区别","link":"#_12、beanfactory-和-applicationcontext有什么区别","children":[]},{"level":2,"title":"13、Spring 如何设计容器的，BeanFactory和ApplicationContext的关系详解","slug":"_13、spring-如何设计容器的-beanfactory和applicationcontext的关系详解","link":"#_13、spring-如何设计容器的-beanfactory和applicationcontext的关系详解","children":[]},{"level":2,"title":"14、ApplicationContext通常的实现是什么？","slug":"_14、applicationcontext通常的实现是什么","link":"#_14、applicationcontext通常的实现是什么","children":[]},{"level":2,"title":"15、什么是Spring的依赖注入？","slug":"_15、什么是spring的依赖注入","link":"#_15、什么是spring的依赖注入","children":[]},{"level":2,"title":"16、依赖注入的基本原则","slug":"_16、依赖注入的基本原则","link":"#_16、依赖注入的基本原则","children":[]},{"level":2,"title":"17、依赖注入有什么优势？","slug":"_17、依赖注入有什么优势","link":"#_17、依赖注入有什么优势","children":[]},{"level":2,"title":"18、依赖注入有几种实现方式？","slug":"_18、依赖注入有几种实现方式","link":"#_18、依赖注入有几种实现方式","children":[]},{"level":2,"title":"19、构造器依赖注入和 Setter方法注入的区别？","slug":"_19、构造器依赖注入和-setter方法注入的区别","link":"#_19、构造器依赖注入和-setter方法注入的区别","children":[]},{"level":2,"title":"20、什么是Spring Bean?","slug":"_20、什么是spring-bean","link":"#_20、什么是spring-bean","children":[]},{"level":2,"title":"21、如何给Spring 容器提供配置元数据？Spring有几种配置方式","slug":"_21、如何给spring-容器提供配置元数据-spring有几种配置方式","link":"#_21、如何给spring-容器提供配置元数据-spring有几种配置方式","children":[]},{"level":2,"title":"22、Spring基于xml注入bean的几种方式","slug":"_22、spring基于xml注入bean的几种方式","link":"#_22、spring基于xml注入bean的几种方式","children":[]},{"level":2,"title":"23、Spring支持的几种bean的作用域","slug":"_23、spring支持的几种bean的作用域","link":"#_23、spring支持的几种bean的作用域","children":[]},{"level":2,"title":"24、Spring框架中的单例bean是线程安全的吗？","slug":"_24、spring框架中的单例bean是线程安全的吗","link":"#_24、spring框架中的单例bean是线程安全的吗","children":[]},{"level":2,"title":"25、Spring如何处理线程并发问题？","slug":"_25、spring如何处理线程并发问题","link":"#_25、spring如何处理线程并发问题","children":[]},{"level":2,"title":"26、Spring Bean的生命周期","slug":"_26、spring-bean的生命周期","link":"#_26、spring-bean的生命周期","children":[]},{"level":2,"title":"27、什么是Spring的内部bean？什么是Spring inner beans？","slug":"_27、什么是spring的内部bean-什么是spring-inner-beans","link":"#_27、什么是spring的内部bean-什么是spring-inner-beans","children":[]},{"level":2,"title":"28、什么是bean的自动装配？","slug":"_28、什么是bean的自动装配","link":"#_28、什么是bean的自动装配","children":[]},{"level":2,"title":"29、解释不同方式的自动装配，spring 自动装配 bean 有哪些方式？","slug":"_29、解释不同方式的自动装配-spring-自动装配-bean-有哪些方式","link":"#_29、解释不同方式的自动装配-spring-自动装配-bean-有哪些方式","children":[]},{"level":2,"title":"30、使用@Autowired注解自动装配的过程是怎样的？","slug":"_30、使用-autowired注解自动装配的过程是怎样的","link":"#_30、使用-autowired注解自动装配的过程是怎样的","children":[]},{"level":2,"title":"31、自动装配有哪些局限性？","slug":"_31、自动装配有哪些局限性","link":"#_31、自动装配有哪些局限性","children":[]},{"level":2,"title":"32、可以在Spring中注入一个null 和一个空字符串吗？","slug":"_32、可以在spring中注入一个null-和一个空字符串吗","link":"#_32、可以在spring中注入一个null-和一个空字符串吗","children":[]},{"level":2,"title":"33、什么是基于Java的Spring注解配置？","slug":"_33、什么是基于java的spring注解配置","link":"#_33、什么是基于java的spring注解配置","children":[]},{"level":2,"title":"34、@Component, @Controller, @Repository, @Service 有何区别？","slug":"_34、-component-controller-repository-service-有何区别","link":"#_34、-component-controller-repository-service-有何区别","children":[]},{"level":2,"title":"35、@Autowired 注解有什么作用？","slug":"_35、-autowired-注解有什么作用","link":"#_35、-autowired-注解有什么作用","children":[]},{"level":2,"title":"36、@Autowired和@Resource之间的区别","slug":"_36、-autowired和-resource之间的区别","link":"#_36、-autowired和-resource之间的区别","children":[]},{"level":2,"title":"37、@Qualifier 注解有什么作用","slug":"_37、-qualifier-注解有什么作用","link":"#_37、-qualifier-注解有什么作用","children":[]},{"level":2,"title":"38、Spring支持的事务管理类型， spring 事务实现方式有哪些？","slug":"_38、spring支持的事务管理类型-spring-事务实现方式有哪些","link":"#_38、spring支持的事务管理类型-spring-事务实现方式有哪些","children":[]},{"level":2,"title":"39、Spring事务的实现方式和实现原理","slug":"_39、spring事务的实现方式和实现原理","link":"#_39、spring事务的实现方式和实现原理","children":[]},{"level":2,"title":"40、Spring的事务传播行为","slug":"_40、spring的事务传播行为","link":"#_40、spring的事务传播行为","children":[]},{"level":2,"title":"41、spring 的事务隔离？","slug":"_41、spring-的事务隔离","link":"#_41、spring-的事务隔离","children":[]},{"level":2,"title":"42、Spring框架的事务管理有哪些优点？","slug":"_42、spring框架的事务管理有哪些优点","link":"#_42、spring框架的事务管理有哪些优点","children":[]},{"level":2,"title":"43、你更倾向用那种事务管理类型？","slug":"_43、你更倾向用那种事务管理类型","link":"#_43、你更倾向用那种事务管理类型","children":[]},{"level":2,"title":"44、什么是AOP?","slug":"_44、什么是aop","link":"#_44、什么是aop","children":[]},{"level":2,"title":"45、Spring AOP and AspectJ AOP 有什么区别？AOP 有哪些实现方式？","slug":"_45、spring-aop-and-aspectj-aop-有什么区别-aop-有哪些实现方式","link":"#_45、spring-aop-and-aspectj-aop-有什么区别-aop-有哪些实现方式","children":[]},{"level":2,"title":"46、JDK动态代理和CGLIB动态代理的区别？","slug":"_46、jdk动态代理和cglib动态代理的区别","link":"#_46、jdk动态代理和cglib动态代理的区别","children":[]},{"level":2,"title":"47、Spring AOP里面的几个名词","slug":"_47、spring-aop里面的几个名词","link":"#_47、spring-aop里面的几个名词","children":[]},{"level":2,"title":"48、Spring在运行时通知对象","slug":"_48、spring在运行时通知对象","link":"#_48、spring在运行时通知对象","children":[]},{"level":2,"title":"49、Spring只支持方法级别的连接点？","slug":"_49、spring只支持方法级别的连接点","link":"#_49、spring只支持方法级别的连接点","children":[]},{"level":2,"title":"50、在Spring AOP 中，关注点和横切关注的区别是什么？在 springaop 中 concern 和 cross-cutting concern 的不同之处？","slug":"_50、在spring-aop-中-关注点和横切关注的区别是什么-在-springaop-中-concern-和-cross-cutting-concern-的不同之处","link":"#_50、在spring-aop-中-关注点和横切关注的区别是什么-在-springaop-中-concern-和-cross-cutting-concern-的不同之处","children":[]},{"level":2,"title":"51、Spring通知有哪些类型？","slug":"_51、spring通知有哪些类型","link":"#_51、spring通知有哪些类型","children":[]},{"level":2,"title":"52、什么是切面 Aspect？","slug":"_52、什么是切面-aspect","link":"#_52、什么是切面-aspect","children":[]}],"git":{"createdTime":1695295148000,"updatedTime":1695295148000,"contributors":[{"name":"javaxiaobear","email":"2861184805@qq.com","commits":1}]},"readingTime":{"minutes":33.91,"words":10172},"filePathRelative":"interview/framework/Spring.md","localizedDate":"2023年9月21日","copyright":{"author":"小熊学Java"},"autoDesc":true,"excerpt":""}');export{e as data};
