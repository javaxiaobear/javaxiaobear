import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-aeb4ead9.js";const e={},l=t(`<ul><li><p>MyBatis 包含一个非常强大的查询缓存特性,它可以非常方便地配置和定制。缓存可以极大的提升查询效率</p></li><li><p>MyBatis 系统中默认定义了两级缓存：一级缓存 二级缓存</p></li><li><p>默认情况下，只有<strong>一级缓存（SqlSession 级别的缓存，也称为本地缓存）开启</strong>。</p></li><li><p><strong>二级缓存</strong>需要手动开启和配置，他是<strong>基于namespace 级别的缓存</strong>。</p></li><li><p>为了提高扩展性。MyBatis 定义了缓存接口Cache。我们可以通过实现Cache 接口来自定义二级缓存</p></li></ul><h3 id="_10-1、一级缓存" tabindex="-1"><a class="header-anchor" href="#_10-1、一级缓存" aria-hidden="true">#</a> 10.1、一级缓存</h3><p><strong>一级缓存失效的几种情况</strong></p><ul><li>不同的SqlSession 对应不同的一级缓存</li><li>同一个SqlSession 但是查询条件不同</li><li>同一个SqlSession 两次查询期间执行了任何一次增删改操作</li><li>同一个SqlSession 两次查询期间手动清空了缓存</li></ul><h3 id="_10-2、二级缓存" tabindex="-1"><a class="header-anchor" href="#_10-2、二级缓存" aria-hidden="true">#</a> 10.2、二级缓存</h3><ul><li><p>MyBatis 提供二级缓存的接口以及实现，缓存实现要求POJO 实现Serializable 接口</p></li><li><p>二级缓存==<strong>在SqlSession 关闭或提交之后才会生效</strong>==</p></li><li><p>二级缓存使用的步骤:</p><p>1、全局配置文件中开启二级缓存</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cacheEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、需要使用二级缓存的映射文件处使用cache 配置缓存</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、注意：POJO 需要实现Serializable 接口</p></li></ul><p><strong>二级缓存相关的属性</strong></p><ul><li>eviction=“FIFO”：缓存回收策略：</li></ul><p>​ LRU – 最近最少使用的：移除最长时间不被使用的对象。</p><p>​ FIFO – 先进先出：按对象进入缓存的顺序来移除它们。</p><p>​ SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</p><p>​ WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。<mark><strong>默认的是LRU。</strong></mark></p><ul><li><p>flushInterval：刷新间隔，单位毫秒默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句时刷新</p></li><li><p>size：引用数目，正整数 代表缓存最多可以存储多少个对象，太大容易导致内存溢出</p></li><li><p>readOnly：只读，true/false</p><ul><li><p>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了很重要</p><p>的性能优势。</p></li><li><p>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是false。</p></li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--在当前mapper使用二级缓存--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span>
            <span class="token attr-name">eviction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FIFO<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">flushInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60000<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">readOnly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-3、缓存的相关属性设置" tabindex="-1"><a class="header-anchor" href="#_10-3、缓存的相关属性设置" aria-hidden="true">#</a> 10.3、缓存的相关属性设置</h3><ol><li><p>全局setting 的cacheEnable：配置二级缓存的开关，一级缓存一直是打开的。</p></li><li><p>select 标签的useCache 属性：配置这个select 是否使用二级缓存。一级缓存一直是使用的</p></li><li><p>sql 标签的flushCache 属性：增删改默认flushCache=true。<strong>sql 执行以后，会同时清空一级和二级缓存</strong>。查</p><p>询默认flushCache=false。</p></li><li><p><strong>sqlSession.clearCache()：只是用来清除一级缓存。</strong></p></li></ol><h3 id="_10-4、自定义缓存-ehcache" tabindex="-1"><a class="header-anchor" href="#_10-4、自定义缓存-ehcache" aria-hidden="true">#</a> 10.4、自定义缓存--EhCache</h3><p><strong>EhCache</strong> 是一个纯Java 的进程内缓存框架，具有快速、精干等特点，是Hibernate 中默认的CacheProvider</p><ol><li><p>导入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.caches/mybatis-ehcache --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.caches<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写ehcache.xml 配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ehcache</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://ehcache.org/ehcache.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 磁盘保存路径--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>diskStore</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>D:\\360MoveData\\Users\\Administrator\\Desktop\\ehcache<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defaultCache</span>
                  <span class="token attr-name">maxElementsInMemory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">maxElementsOnDisk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10000000<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">eternal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">overflowToDisk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">timeToIdleSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">timeToLiveSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">diskExpiryThreadIntervalSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span>
                  <span class="token attr-name">memoryStoreEvictionPolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LRU<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defaultCache</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ehcache</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--
        属性说明：
         diskStore：指定数据在磁盘中的存储位置。
         defaultCache：当借助CacheManager.add(&quot;demoCache&quot;)创建Cache时，EhCache
        便会采用&lt;defalutCache/&gt;指定的的管理策略
        以下属性是必须的：
         maxElementsInMemory - 在内存中缓存的element的最大数目
         maxElementsOnDisk - 在磁盘上缓存的element的最大数目，若是0表示无穷大
         eternal - 设定缓存的elements是否永远不过期。如果为true，则缓存的数据始
        终有效，如果为false那么还要根据timeToIdleSeconds，timeToLiveSeconds判断
         overflowToDisk - 设定当内存缓存溢出的时候是否将过期的element缓存到磁
        盘上
        以下属性是可选的：
         timeToIdleSeconds - 当缓存在EhCache中的数据前后两次访问的时间超过
        timeToIdleSeconds的属性取值时，这些数据便会删除，默认值是0,也就是可闲置
        时间无穷大
         timeToLiveSeconds - 缓存element的有效生命期，默认是0.,也就是element存活
        时间无穷大
        diskSpoolBufferSizeMB 这个参数设置DiskStore(磁盘缓存)的缓存区大小.默认
        是30MB.每个Cache都应该有自己的一个缓冲区.
         diskPersistent - 在VM重启的时候是否启用磁盘保存EhCache中的数据，默认是
        false。
         diskExpiryThreadIntervalSeconds - 磁盘缓存的清理线程运行间隔，默认是120
        秒。每个120s，相应的线程会进行一次EhCache中数据的清理工作
         memoryStoreEvictionPolicy - 当内存缓存达到最大，有新的element加入的时
        候， 移除缓存中element的策略。默认是LRU（最近最少使用），可选的有LFU
        （最不常使用）和FIFO（先进先出）
        --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置cache 标签</p></li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.caches.ehcache.EhcacheCache<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20),p=[l];function c(i,o){return a(),s("div",null,p)}const d=n(e,[["render",c],["__file","cache_mechanism.html.vue"]]);export{d as default};
