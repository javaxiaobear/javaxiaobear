import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e as t}from"./app-aeb4ead9.js";const e="/assets/image109-3f2ea8b1.jpeg",p="/assets/image110-0f3c81d8.jpeg",o="/assets/image-20221126120130488-939f5c2f.png",c="/assets/image-20221126120145978-4ab08cd1.png",i="/assets/image113-81deb99d.jpeg",l="/assets/image114-00434fa4.png",r="/assets/image115-a7c1ed7b.jpeg",u="/assets/image116-fe3fa29f.jpeg",d="/assets/image117-f6fd073b.png",k="/assets/image118-d98e0975.jpeg",m="/assets/image119-f7ebff5d.png",h="/assets/image120-2a551483.jpeg",v={},g=t('<h2 id="_1、查看postfix-completion模板-后缀补全" tabindex="-1"><a class="header-anchor" href="#_1、查看postfix-completion模板-后缀补全" aria-hidden="true">#</a> 1、查看Postfix Completion模板(后缀补全)</h2><p><img src="'+e+'" alt="" loading="lazy"></p><h2 id="_2、查看live-templates模板-实时模板" tabindex="-1"><a class="header-anchor" href="#_2、查看live-templates模板-实时模板" aria-hidden="true">#</a> 2、查看Live Templates模板(实时模板)</h2><p><img src="'+p+'" alt="" loading="lazy"></p><h2 id="_3、常用代码模板" tabindex="-1"><a class="header-anchor" href="#_3、常用代码模板" aria-hidden="true">#</a> 3、常用代码模板</h2><h4 id="_1、非空判断" tabindex="-1"><a class="header-anchor" href="#_1、非空判断" aria-hidden="true">#</a> 1、非空判断</h4><blockquote><p>变量.null：if(变量 == null)</p><p>变量.nn：if(变量 != null)</p><p>变量.notnull：if(变量 != null) ifn：if(xx == null)</p><p>inn：if(xx != null)</p></blockquote><h4 id="_2、遍历数组和集合" tabindex="-1"><a class="header-anchor" href="#_2、遍历数组和集合" aria-hidden="true">#</a> 2、遍历数组和集合</h4><blockquote><p>数组或集合变量.fori：for循环</p><p>数组或集合变量.for：增强for循环</p><p>数组或集合变量.forr：反向for循环</p><p>数组或集合变量.iter：增强for循环遍历数组或集合</p></blockquote><h4 id="_3、输出语句" tabindex="-1"><a class="header-anchor" href="#_3、输出语句" aria-hidden="true">#</a> 3、输出语句</h4><blockquote><p>sout： 相 当 于 System.out.println</p><p>soutm： 打 印 当 前 方 法 的 名 称</p><p>soutp：打印当前方法的形参及形参对应的实参值</p><p>soutv：打印方法中声明的最近的变量的值</p><p>变量.sout：打印当前变量值</p><p>变量.soutv：打印当前变量名及变量值</p></blockquote><h4 id="_4、对象操作" tabindex="-1"><a class="header-anchor" href="#_4、对象操作" aria-hidden="true">#</a> 4、对象操作</h4><blockquote><p>创建对象</p><p>Xxx.new .var ：创建Xxx类的对象，并赋给相应的变量</p><p>Xxx.new .field：会将方法内刚创建的Xxx对象抽取为一个属性</p><p>强转</p><p>对象.cast：将对象进行强转</p><p>对象.castvar：将对象强转后，并赋给一个变量</p></blockquote><h4 id="_5、静态常量声明" tabindex="-1"><a class="header-anchor" href="#_5、静态常量声明" aria-hidden="true">#</a> 5、静态常量声明</h4><blockquote><ul><li>psf：public static final</li><li>psfi：public static final int</li><li>psfs：public static final String</li><li>prsf：private static final</li></ul></blockquote><h2 id="_4、自定义代码模板" tabindex="-1"><a class="header-anchor" href="#_4、自定义代码模板" aria-hidden="true">#</a> 4、自定义代码模板</h2><h4 id="自定义后缀补全模板" tabindex="-1"><a class="header-anchor" href="#自定义后缀补全模板" aria-hidden="true">#</a> 自定义后缀补全模板</h4><p><img src="'+o+'" alt="image-20221126120130488" loading="lazy"></p><p><img src="'+c+'" alt="image-20221126120145978" loading="lazy"></p><h4 id="自定义live-templates" tabindex="-1"><a class="header-anchor" href="#自定义live-templates" aria-hidden="true">#</a> 自定义Live Templates</h4><p>例如：定义sop代表System.out.print();语句</p><p>①在Live Templates中增加模板</p><p><img src="'+i+'" alt="" loading="lazy"></p><p>②先定义一个模板的组，这样方便管理所有自定义的代码模板</p><p><img src="'+l+'" alt="" loading="lazy"></p><p>③在模板组里新建模板</p><p><img src="'+r+'" alt="" loading="lazy"></p><p>④定义模板（以输出语句为例）</p><p><img src="'+u+'" alt="" loading="lazy"></p><p>Abbreviation：模板的缩略名称</p><p>Description：模板的描述</p><p>Template text：模板的代码片段</p><p>模板应用范围。比如点击Define。选择如下：应用在java代码中。</p><p><img src="'+d+'" alt="" loading="lazy"></p><h5 id="其它模板1-单元测试模板" tabindex="-1"><a class="header-anchor" href="#其它模板1-单元测试模板" aria-hidden="true">#</a> 其它模板<em>1</em>：单元测试模板：</h5><p><img src="'+k+`" alt="" loading="lazy"></p><p><strong>其它模板<em>2</em>：创建多线程</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> test$var1$<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    $var2$
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        $<span class="token keyword">var</span>$
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+`" alt="" loading="lazy"></p><h5 id="其它模板3-冒泡排序" tabindex="-1"><a class="header-anchor" href="#其它模板3-冒泡排序" aria-hidden="true">#</a> 其它模板3：冒泡排序</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> $<span class="token constant">INDEX</span>$ <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> $<span class="token constant">INDEX</span>$ <span class="token operator">&lt;</span> $<span class="token constant">ARRAY</span>$<span class="token punctuation">.</span>length<span class="token punctuation">;</span> $<span class="token constant">INDEX</span>$<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> $<span class="token constant">INDEX2</span>$ <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> $<span class="token constant">INDEX2</span>$ <span class="token operator">&lt;</span> $<span class="token constant">ARRAY</span>$<span class="token punctuation">.</span>length<span class="token operator">-</span>$<span class="token constant">INDEX</span>$<span class="token punctuation">;</span> $<span class="token constant">INDEX2</span>$<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>$<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token punctuation">]</span> <span class="token operator">&gt;</span> $<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token constant">ELEMENT_TYPE</span>$ temp <span class="token operator">=</span> $<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token punctuation">]</span><span class="token punctuation">;</span>
            $<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token punctuation">]</span> <span class="token operator">=</span> $<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
            $<span class="token constant">ARRAY</span>$<span class="token punctuation">[</span>$<span class="token constant">INDEX2</span>$<span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+h+'" alt="" loading="lazy"></p>',43),b=[g];function f(_,$){return n(),s("div",null,b)}const E=a(v,[["render",f],["__file","code_template.html.vue"]]);export{E as default};
