const e=JSON.parse('{"key":"v-249a3ec8","path":"/interview/javaHighLevel/concurrency.html","title":"Java 并发编程 面试题","lang":"zh-CN","frontmatter":{"title":"Java 并发编程 面试题","description":"1、Java中垃圾回收有什么目的？什么时候进行垃圾回收？\\r 垃圾回收的目的：识别并且丢弃应用不再使用的对象来释放和重用资源。\\r 垃圾回收：是在内存中存在没有引用的对象或超过作用域的对象时进行的。 2、线程之间如何通信及线程之间如何同步？\\r 通信：指线程之间如何来交换信息。\\r 线程之间的通信机制：共享内存和消息传递\\r Java采用的是共享内存模型，Jav...","head":[["meta",{"property":"og:url","content":"https://javaxiaobear.cn/interview/javaHighLevel/concurrency.html"}],["meta",{"property":"og:site_name","content":"小熊学Java全能学习+面试指南"}],["meta",{"property":"og:title","content":"Java 并发编程 面试题"}],["meta",{"property":"og:description","content":"1、Java中垃圾回收有什么目的？什么时候进行垃圾回收？\\r 垃圾回收的目的：识别并且丢弃应用不再使用的对象来释放和重用资源。\\r 垃圾回收：是在内存中存在没有引用的对象或超过作用域的对象时进行的。 2、线程之间如何通信及线程之间如何同步？\\r 通信：指线程之间如何来交换信息。\\r 线程之间的通信机制：共享内存和消息传递\\r Java采用的是共享内存模型，Jav..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"小熊同学"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发编程 面试题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小熊同学\\",\\"url\\":\\"https://javaxiaobear.cn\\"}]}"]]},"headers":[{"level":2,"title":"1、Java中垃圾回收有什么目的？什么时候进行垃圾回收？","slug":"_1、java中垃圾回收有什么目的-什么时候进行垃圾回收","link":"#_1、java中垃圾回收有什么目的-什么时候进行垃圾回收","children":[]},{"level":2,"title":"2、线程之间如何通信及线程之间如何同步？","slug":"_2、线程之间如何通信及线程之间如何同步","link":"#_2、线程之间如何通信及线程之间如何同步","children":[]},{"level":2,"title":"3、什么是Java内存模型？","slug":"_3、什么是java内存模型","link":"#_3、什么是java内存模型","children":[]},{"level":2,"title":"4、线程池有几种实现方式？","slug":"_4、线程池有几种实现方式","link":"#_4、线程池有几种实现方式","children":[]},{"level":2,"title":"5、自定义线程池的各个参数含义？","slug":"_5、自定义线程池的各个参数含义","link":"#_5、自定义线程池的各个参数含义","children":[]},{"level":2,"title":"6、wait vs sleep的区别","slug":"_6、wait-vs-sleep的区别","link":"#_6、wait-vs-sleep的区别","children":[]},{"level":2,"title":"7、 lock vs synchronized的区别","slug":"_7、-lock-vs-synchronized的区别","link":"#_7、-lock-vs-synchronized的区别","children":[]},{"level":2,"title":"8、悲观锁 vs 乐观锁的区别","slug":"_8、悲观锁-vs-乐观锁的区别","link":"#_8、悲观锁-vs-乐观锁的区别","children":[]},{"level":2,"title":"9、你了解ThreadLocal吗？","slug":"_9、你了解threadlocal吗","link":"#_9、你了解threadlocal吗","children":[]},{"level":2,"title":"10、start VS run的区别","slug":"_10、start-vs-run的区别","link":"#_10、start-vs-run的区别","children":[]},{"level":2,"title":"11、什么是volatile关键字？它的作用是什么？","slug":"_11、什么是volatile关键字-它的作用是什么","link":"#_11、什么是volatile关键字-它的作用是什么","children":[]},{"level":2,"title":"12、volatile关键字和synchronized关键字有什么区别？","slug":"_12、volatile关键字和synchronized关键字有什么区别","link":"#_12、volatile关键字和synchronized关键字有什么区别","children":[]},{"level":2,"title":"13、volatile关键字如何确保可见性和有序性？","slug":"_13、volatile关键字如何确保可见性和有序性","link":"#_13、volatile关键字如何确保可见性和有序性","children":[]},{"level":2,"title":"14、什么情况下应该使用volatile关键字？","slug":"_14、什么情况下应该使用volatile关键字","link":"#_14、什么情况下应该使用volatile关键字","children":[]},{"level":2,"title":"15、volatile关键字能否替代锁（synchronized）？","slug":"_15、volatile关键字能否替代锁-synchronized","link":"#_15、volatile关键字能否替代锁-synchronized","children":[]},{"level":2,"title":"16、volatile关键字是否能够解决线程安全问题？","slug":"_16、volatile关键字是否能够解决线程安全问题","link":"#_16、volatile关键字是否能够解决线程安全问题","children":[]},{"level":2,"title":"17、volatile关键字和原子性有什么关系？","slug":"_17、volatile关键字和原子性有什么关系","link":"#_17、volatile关键字和原子性有什么关系","children":[]},{"level":2,"title":"18、volatile关键字对于单例模式中的双重检查锁定有什么作用？","slug":"_18、volatile关键字对于单例模式中的双重检查锁定有什么作用","link":"#_18、volatile关键字对于单例模式中的双重检查锁定有什么作用","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":11.57,"words":3471},"filePathRelative":"interview/javaHighLevel/concurrency.md","copyright":{"author":"小熊学Java"},"autoDesc":true}');export{e as data};
