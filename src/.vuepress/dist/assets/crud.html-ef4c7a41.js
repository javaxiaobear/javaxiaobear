import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-f55ccf80.js";const p="/assets/1555425366064-e5b740ef.png",t="/assets/1555425824246-8bb25205.png",o="/assets/1555426069578-a8258b14.png",l="/assets/1555426124751-7cfe7d3f.png",c="/assets/1555426162264-b71c3b6f.png",i="/assets/1555426258516-8440bbda.png",u={},d=e('<h3 id="_1-插入数据" tabindex="-1"><a class="header-anchor" href="#_1-插入数据" aria-hidden="true">#</a> 1. 插入数据</h3><h4 id="_1-1-实际问题" tabindex="-1"><a class="header-anchor" href="#_1-1-实际问题" aria-hidden="true">#</a> 1.1 实际问题</h4><img src="'+p+`" alt="1555425366064" style="zoom:80%;"><p>解决方式：使用 INSERT 语句向表中插入数据。</p><h4 id="_1-2-方式1-values的方式添加" tabindex="-1"><a class="header-anchor" href="#_1-2-方式1-values的方式添加" aria-hidden="true">#</a> 1.2 方式1：VALUES的方式添加</h4><p>使用这种语法一次只能向表中插入<strong>一条</strong>数据。</p><p><strong>情况1：为表的所有字段按默认顺序插入数据</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>INSERT INTO 表名
VALUES (value1,value2,....);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>值列表中需要为表的每一个字段指定值，并且值的顺序必须和数据表中字段定义时的顺序相同。</p><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> departments
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token string">&#39;Pub&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span>	departments
<span class="token keyword">VALUES</span>		<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;Finance&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>情况2：为表的指定字段插入数据</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>column1 <span class="token punctuation">[</span><span class="token punctuation">,</span> column2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> columnn<span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>为表的指定字段插入数据，就是在INSERT语句中只向部分字段中插入值，而其他字段的值为表定义时的默认值。</p><p>在 INSERT 子句中随意列出列名，但是一旦列出，VALUES中要插入的value1,....valuen需要与column1,...columnn列一一对应。如果类型不同，将无法插入，并且MySQL会产生错误。</p><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> departments<span class="token punctuation">(</span>department_id<span class="token punctuation">,</span> department_name<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">&#39;IT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>情况3：同时插入多条记录</strong></p><p>INSERT语句可以同时向数据表中插入多条记录，插入时指定多个值列表，每个值列表之间用逗号分隔开，基本语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table_name 
<span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
……
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table_name<span class="token punctuation">(</span>column1 <span class="token punctuation">[</span><span class="token punctuation">,</span> column2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> columnn<span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token keyword">VALUES</span> 
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
……
<span class="token punctuation">(</span>value1 <span class="token punctuation">[</span><span class="token punctuation">,</span>value2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> valuen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>emp_id<span class="token punctuation">,</span>emp_name<span class="token punctuation">)</span>
    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">&#39;shkstart&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">&#39;atguigu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">3</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
Records: <span class="token number">3</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用INSERT同时插入多条记录时，MySQL会返回一些在执行单行插入时没有的额外信息，这些信息的含义如下： ●　Records：表明插入的记录条数。 ●　Duplicates：表明插入时被忽略的记录，原因可能是这些记录包含了重复的主键值。 ●　Warnings：表明有问题的数据值，例如发生数据类型转换。</p><blockquote><p>一个同时插入多行记录的INSERT语句等同于多个单行插入的INSERT语句，但是多行的INSERT语句在处理过程中<code>效率更高</code>。因为MySQL执行单条INSERT语句插入多行数据比使用多条INSERT语句快，所以在插入多条记录时最好选择使用单条INSERT语句的方式插入。</p></blockquote><p><strong>小结：</strong></p><ul><li><p><code>VALUES</code>也可以写成<code>VALUE</code>，但是VALUES是标准写法。</p></li><li><p>字符和日期型数据应包含在单引号中。</p></li></ul><h4 id="_1-3-方式2-将查询结果插入到表中" tabindex="-1"><a class="header-anchor" href="#_1-3-方式2-将查询结果插入到表中" aria-hidden="true">#</a> 1.3 方式2：将查询结果插入到表中</h4><p>INSERT还可以将SELECT语句查询的结果插入到表中，此时不需要把每一条记录的值一个一个输入，只需要使用一条INSERT语句和一条SELECT语句组成的组合语句即可快速地从一个或多个表中向一个表中插入多行。</p><p>基本语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 目标表名
<span class="token punctuation">(</span>tar_column1 <span class="token punctuation">[</span><span class="token punctuation">,</span> tar_column2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> tar_columnn<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">SELECT</span>
<span class="token punctuation">(</span>src_column1 <span class="token punctuation">[</span><span class="token punctuation">,</span> src_column2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> src_columnn<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> 源表名
<span class="token punctuation">[</span><span class="token keyword">WHERE</span> condition<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 INSERT 语句中加入子查询。</li><li><strong>不必书写</strong> <strong>VALUES</strong> <strong>子句。</strong></li><li>子查询中的值列表应与 INSERT 子句中的列名对应。</li></ul><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp2 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sales_reps<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> commission_pct<span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> commission_pct
<span class="token keyword">FROM</span>   employees
<span class="token keyword">WHERE</span>  job_id <span class="token operator">LIKE</span> <span class="token string">&#39;%REP%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-更新数据" tabindex="-1"><a class="header-anchor" href="#_2-更新数据" aria-hidden="true">#</a> 2. 更新数据</h3><p><img src="`+t+`" alt="1555425824246" loading="lazy"></p><ul><li>使用 UPDATE 语句更新数据。语法如下：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>UPDATE table_name
SET column1=value1, column2=value2, … , column=valuen
[WHERE condition]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>可以一次更新<strong>多条</strong>数据。</p></li><li><p>如果需要回滚数据，需要保证在DML前，进行设置：<strong>SET AUTOCOMMIT = FALSE;</strong></p></li></ul><hr><ul><li>使用 <strong>WHERE</strong> 子句指定需要更新的数据。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> employees
<span class="token keyword">SET</span>    department_id <span class="token operator">=</span> <span class="token number">70</span>
<span class="token keyword">WHERE</span>  employee_id <span class="token operator">=</span> <span class="token number">113</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果省略 WHERE 子句，则表中的所有数据都将被更新。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 	copy_emp
<span class="token keyword">SET</span>    	department_id <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>更新中的数据完整性错误</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> employees
<span class="token keyword">SET</span>    department_id <span class="token operator">=</span> <span class="token number">55</span>
<span class="token keyword">WHERE</span>  department_id <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+'" alt="1555426069578" loading="lazy"></p><blockquote><p>说明：不存在 55 号部门</p></blockquote><h3 id="_3-删除数据" tabindex="-1"><a class="header-anchor" href="#_3-删除数据" aria-hidden="true">#</a> 3. 删除数据</h3><p><img src="'+l+'" alt="1555426124751" loading="lazy"></p><ul><li>使用 DELETE 语句从表中删除数据</li></ul><p><img src="'+c+`" alt="1555426162264" loading="lazy"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table_name <span class="token punctuation">[</span><span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>condition<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>table_name指定要执行删除操作的表；<code>[WHERE &lt;condition&gt;]</code>为可选参数，指定删除条件，如果没有WHERE子句，DELETE语句将删除表中的所有记录。</p><ul><li>使用 WHERE 子句删除指定的记录。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> departments
<span class="token keyword">WHERE</span>  department_name <span class="token operator">=</span> <span class="token string">&#39;Finance&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果省略 WHERE 子句，则表中的全部数据将被删除</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span>  copy_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>删除中的数据完整性错误</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> departments
<span class="token keyword">WHERE</span>       department_id <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+`" alt="1555426258516" loading="lazy"></p><blockquote><p>说明：You cannot delete a row that contains a primary key that is used as a foreign key in another table.</p></blockquote><h3 id="_4-mysql8新特性-计算列" tabindex="-1"><a class="header-anchor" href="#_4-mysql8新特性-计算列" aria-hidden="true">#</a> 4. MySQL8新特性：计算列</h3><p>什么叫计算列呢？简单来说就是某一列的值是通过别的列计算得来的。例如，a列值为1、b列值为2，c列不需要手动插入，定义a+b的结果为c的值，那么c就是计算列，是通过别的列计算得来的。</p><p>在MySQL 8.0中，CREATE TABLE 和 ALTER TABLE 中都支持增加计算列。下面以CREATE TABLE为例进行讲解。</p><p>举例：定义数据表tb1，然后定义字段id、字段a、字段b和字段c，其中字段c为计算列，用于计算a+b的值。 首先创建测试表tb1，语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb1<span class="token punctuation">(</span>
id <span class="token keyword">INT</span><span class="token punctuation">,</span>
a <span class="token keyword">INT</span><span class="token punctuation">,</span>
b <span class="token keyword">INT</span><span class="token punctuation">,</span>
c <span class="token keyword">INT</span> GENERATED ALWAYS <span class="token keyword">AS</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> VIRTUAL
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插入演示数据，语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb1<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询数据表tb1中的数据，结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb1<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token operator">|</span> id   <span class="token operator">|</span> a    <span class="token operator">|</span> b    <span class="token operator">|</span> c    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>  <span class="token number">100</span> <span class="token operator">|</span>  <span class="token number">200</span> <span class="token operator">|</span>  <span class="token number">300</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新数据中的数据，语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">UPDATE</span> tb1 <span class="token keyword">SET</span> a <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
<span class="token keyword">Rows</span> <span class="token keyword">matched</span>: <span class="token number">1</span>  Changed: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-综合案例" tabindex="-1"><a class="header-anchor" href="#_5-综合案例" aria-hidden="true">#</a> 5. 综合案例</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 1、创建数据库test01_library</span>

<span class="token comment">## 2、创建表 books，表结构如下：</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>字段名</th><th>字段说明</th><th>数据类型</th></tr></thead><tbody><tr><td>id</td><td>书编号</td><td>INT</td></tr><tr><td>name</td><td>书名</td><td>VARCHAR(50)</td></tr><tr><td>authors</td><td>作者</td><td>VARCHAR(100)</td></tr><tr><td>price</td><td>价格</td><td>FLOAT</td></tr><tr><td>pubdate</td><td>出版日期</td><td>YEAR</td></tr><tr><td>note</td><td>说明</td><td>VARCHAR(100)</td></tr><tr><td>num</td><td>库存</td><td>INT</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 3、向books表中插入记录</span>

<span class="token comment">## 1）不指定字段名称，插入第一条记录</span>
<span class="token comment">## 2）指定所有字段名称，插入第二记录</span>
<span class="token comment">## 3）同时插入多条记录（剩下的所有记录）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>id</th><th>name</th><th>authors</th><th>price</th><th>pubdate</th><th>note</th><th>num</th></tr></thead><tbody><tr><td>1</td><td>Tal of AAA</td><td>Dickes</td><td>23</td><td>1995</td><td>novel</td><td>11</td></tr><tr><td>2</td><td>EmmaT</td><td>Jane lura</td><td>35</td><td>1993</td><td>joke</td><td>22</td></tr><tr><td>3</td><td>Story of Jane</td><td>Jane Tim</td><td>40</td><td>2001</td><td>novel</td><td>0</td></tr><tr><td>4</td><td>Lovey Day</td><td>George Byron</td><td>20</td><td>2005</td><td>novel</td><td>30</td></tr><tr><td>5</td><td>Old land</td><td>Honore Blade</td><td>30</td><td>2010</td><td>law</td><td>0</td></tr><tr><td>6</td><td>The Battle</td><td>Upton Sara</td><td>30</td><td>1999</td><td>medicine</td><td>40</td></tr><tr><td>7</td><td>Rose Hood</td><td>Richard haggard</td><td>28</td><td>2008</td><td>cartoon</td><td>28</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 4、将小说类型(novel)的书的价格都增加5。</span>

<span class="token comment">## 5、将名称为EmmaT的书的价格改为40，并将说明改为drama。</span>

<span class="token comment">## 6、删除库存为0的记录。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 7、统计书名中包含a字母的书</span>

<span class="token comment">## 8、统计书名中包含a字母的书的数量和库存总量</span>

<span class="token comment">## 9、找出“novel”类型的书，按照价格降序排列</span>

<span class="token comment">## 10、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列</span>

<span class="token comment">## 11、按照note分类统计书的数量</span>

<span class="token comment">## 12、按照note分类统计书的库存量，显示库存量超过30本的</span>

<span class="token comment">## 13、查询所有图书，每页显示5本，显示第二页</span>

<span class="token comment">## 14、按照note分类统计书的库存量，显示库存量最多的</span>

<span class="token comment">## 15、查询书名达到10个字符的书，不包括里面的空格</span>

<span class="token comment">## 16、查询书名和类型，其中note值为novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，joke显示笑话</span>

<span class="token comment">## 17、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货</span>

<span class="token comment">## 18、统计每一种note的库存量，并合计总量</span>

<span class="token comment">## 19、统计每一种note的数量，并合计总量</span>

<span class="token comment">## 20、统计库存量前三名的图书</span>

<span class="token comment">## 21、找出最早出版的一本书</span>

<span class="token comment">## 22、找出novel中价格最高的一本书</span>

<span class="token comment">## 23、找出书名中字数最多的一本书，不含空格</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>答案：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#1、创建数据库test01_library</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> test01_library <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">;</span>

<span class="token comment">#指定使用哪个数据库</span>
<span class="token keyword">USE</span> test01_library<span class="token punctuation">;</span>

<span class="token comment">#2、创建表 books</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> books<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token identifier"><span class="token punctuation">\`</span>authors<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>
	price <span class="token keyword">FLOAT</span><span class="token punctuation">,</span>
	pubdate <span class="token keyword">YEAR</span> <span class="token punctuation">,</span>
	note <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	num <span class="token keyword">INT</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#3、向books表中插入记录</span>
<span class="token comment">## 1）不指定字段名称，插入第一条记录</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books 
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;Tal of AAA&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Dickes&#39;</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">1995</span><span class="token punctuation">,</span><span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">## 2）指定所有字段名称，插入第二记录</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>authors<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>price<span class="token punctuation">,</span>pubdate<span class="token punctuation">,</span>note<span class="token punctuation">,</span>num<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;EmmaT&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Jane lura&#39;</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">1993</span><span class="token punctuation">,</span><span class="token string">&#39;Joke&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">## 3）同时插入多条记录（剩下的所有记录）</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>authors<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>price<span class="token punctuation">,</span>pubdate<span class="token punctuation">,</span>note<span class="token punctuation">,</span>num<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;Story of Jane&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Jane Tim&#39;</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">2001</span><span class="token punctuation">,</span><span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;Lovey Day&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;George Byron&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2005</span><span class="token punctuation">,</span><span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;Old land&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Honore Blade&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">2010</span><span class="token punctuation">,</span><span class="token string">&#39;Law&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;The Battle&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Upton Sara&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">1999</span><span class="token punctuation">,</span><span class="token string">&#39;medicine&#39;</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;Rose Hood&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Richard haggard&#39;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">2008</span><span class="token punctuation">,</span><span class="token string">&#39;cartoon&#39;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">## 4、将小说类型(novel)的书的价格都增加5。</span>
<span class="token keyword">UPDATE</span> books <span class="token keyword">SET</span> price<span class="token operator">=</span>price<span class="token operator">+</span><span class="token number">5</span> <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span><span class="token punctuation">;</span>

<span class="token comment">## 5、将名称为EmmaT的书的价格改为40，并将说明改为drama。</span>
<span class="token keyword">UPDATE</span> books <span class="token keyword">SET</span> price<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span>note<span class="token operator">=</span><span class="token string">&#39;drama&#39;</span> <span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">&#39;EmmaT&#39;</span><span class="token punctuation">;</span>

<span class="token comment">## 6、删除库存为0的记录。</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> num<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">## 7、统计书名中包含a字母的书</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">## 8、统计书名中包含a字母的书的数量和库存总量</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">## 9、找出“novel”类型的书，按照价格降序排列</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment">## 10、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> num <span class="token keyword">DESC</span><span class="token punctuation">,</span>note <span class="token keyword">ASC</span><span class="token punctuation">;</span>

<span class="token comment">## 11、按照note分类统计书的数量</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note<span class="token punctuation">;</span>

<span class="token comment">## 12、按照note分类统计书的库存量，显示库存量超过30本的</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">HAVING</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span><span class="token punctuation">;</span>

<span class="token comment">## 13、查询所有图书，每页显示5本，显示第二页</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">## 14、按照note分类统计书的库存量，显示库存量最多的</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> sum_num <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sum_num <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">## 15、查询书名达到10个字符的书，不包括里面的空格</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> CHAR_LENGTH<span class="token punctuation">(</span><span class="token keyword">REPLACE</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">/*
16、查询书名和类型，
 其中note值为 novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，joke显示笑话
*/</span>
<span class="token keyword">SELECT</span> name <span class="token keyword">AS</span> <span class="token string">&quot;书名&quot;</span> <span class="token punctuation">,</span>note<span class="token punctuation">,</span> <span class="token keyword">CASE</span> note 
 <span class="token keyword">WHEN</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;小说&#39;</span>
 <span class="token keyword">WHEN</span> <span class="token string">&#39;law&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;法律&#39;</span>
 <span class="token keyword">WHEN</span> <span class="token string">&#39;medicine&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;医药&#39;</span>
 <span class="token keyword">WHEN</span> <span class="token string">&#39;cartoon&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;卡通&#39;</span>
 <span class="token keyword">WHEN</span> <span class="token string">&#39;joke&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;笑话&#39;</span>
 <span class="token keyword">END</span> <span class="token keyword">AS</span> <span class="token string">&quot;类型&quot;</span>
<span class="token keyword">FROM</span> books<span class="token punctuation">;</span>


<span class="token comment">## 17、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>num<span class="token punctuation">,</span><span class="token keyword">CASE</span> 
  <span class="token keyword">WHEN</span> num<span class="token operator">&gt;</span><span class="token number">30</span> <span class="token keyword">THEN</span> <span class="token string">&#39;滞销&#39;</span>
  <span class="token keyword">WHEN</span> num<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">AND</span> num<span class="token operator">&lt;</span><span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">&#39;畅销&#39;</span>
  <span class="token keyword">WHEN</span> num<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;无货&#39;</span>
  <span class="token keyword">ELSE</span> <span class="token string">&#39;正常&#39;</span>
  <span class="token keyword">END</span> <span class="token keyword">AS</span> <span class="token string">&quot;库存状态&quot;</span>
<span class="token keyword">FROM</span> books<span class="token punctuation">;</span>

<span class="token comment">## 18、统计每一种note的库存量，并合计总量</span>
<span class="token keyword">SELECT</span> IFNULL<span class="token punctuation">(</span>note<span class="token punctuation">,</span><span class="token string">&#39;合计总库存量&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> note<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">WITH ROLLUP</span><span class="token punctuation">;</span>

<span class="token comment">## 19、统计每一种note的数量，并合计总量</span>
<span class="token keyword">SELECT</span> IFNULL<span class="token punctuation">(</span>note<span class="token punctuation">,</span><span class="token string">&#39;合计总数&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> note<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">WITH ROLLUP</span><span class="token punctuation">;</span>

<span class="token comment">## 20、统计库存量前三名的图书</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> num <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">## 21、找出最早出版的一本书</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pubdate <span class="token keyword">ASC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">## 22、找出novel中价格最高的一本书</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">## 23、找出书名中字数最多的一本书，不含空格</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> CHAR_LENGTH<span class="token punctuation">(</span><span class="token keyword">REPLACE</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,86),r=[d];function k(m,v){return s(),a("div",null,r)}const E=n(u,[["render",k],["__file","crud.html.vue"]]);export{E as default};
