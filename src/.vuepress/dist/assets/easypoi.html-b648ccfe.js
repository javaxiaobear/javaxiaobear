import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as u,c as i,a as n,b as s,d as o,t as e,e as t}from"./app-aeb4ead9.js";const k="/assets/image-20210804111036865-5472d28e.png",r="/assets/image-20210804111108642-f05fa20e.png",d="/assets/image-20210804135257342-e7ce9ff5.png",m="/assets/image-20210804135421146-8eea2f4f.png",v="/assets/image-20210804143558044-f8b31b35.png",g={},b=n("h3",{id:"_1、简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、简介","aria-hidden":"true"},"#"),s(" 1、简介")],-1),q={href:"https://easypoi.mydoc.io/",target:"_blank",rel:"noopener noreferrer"},y={href:"http://www.wupaas.com/",target:"_blank",rel:"noopener noreferrer"},h=t(`<blockquote><p>easypoi功能如同名字easy,主打的功能就是容易,让一个没见接触过poi的人员 就可以方便的写出Excel导出,Excel模板导出,Excel导入,Word模板导出,通过简单的注解和模板 语言(熟悉的表达式语法),完成以前复杂的写法</p></blockquote><p><strong>Easypoi的目标是什么</strong></p><blockquote><p>Easypoi的目标不是替代poi,而是让一个不懂导入导出的快速使用poi完成Excel和word的各种操作,而不是看很多api才可以完成这样工作</p></blockquote><p><strong>独特的功能</strong></p><ul><li>基于注解的导入导出,修改注解就可以修改Excel</li><li>支持常用的样式自定义</li><li>基于map可以灵活定义的表头字段</li><li>支持一堆多的导出,导入</li><li>支持模板的导出,一些常见的标签,自定义标签</li><li>支持HTML/Excel转换,如果模板还不能满足用户的变态需求,请用这个功能</li><li>支持word的导出,支持图片,Excel</li></ul><p><strong>需要的依赖</strong></p><p>把项目中的poi的依赖去除</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.afterturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easypoi-base<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.afterturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easypoi-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.afterturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easypoi-annotation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SpringBoot版本</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.afterturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easypoi-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、excel操作" tabindex="-1"><a class="header-anchor" href="#_2、excel操作" aria-hidden="true">#</a> 2、Excel操作</h3><h4 id="_1、导出" tabindex="-1"><a class="header-anchor" href="#_1、导出" aria-hidden="true">#</a> 1、导出</h4><p>注解方式导出</p><ol><li><p>修改实体类，添加注解，用到的是<code>@Excel</code>注解，使用如下，必须要有空构造函数，否则会报“对象创建错误”</p><p>| 属性 | 类型 | 类型 | 说明 | | -------------- | -------- | ---------------- | ------------------------------------------------------------ | | name | String | null | 列名 | | needMerge | boolean | fasle | 纵向合并单元格 | | orderNum | String | &quot;0&quot; | 列的排序,支持name_id | | replace | String[] | {} | 值得替换 导出是{a_id,b_id} 导入反过来 | | savePath | String | &quot;upload&quot; | 导入文件保存路径 | | type | int | 1 | 导出类型 1 是文本 2 是图片,3 是函数,10 是数字 默认是文本 | | width | double | 10 | 列宽 | | height | double | 10 | 列高,后期打算统一使用@ExcelTarget的height,这个会被废弃,注意 | | isStatistics | boolean | fasle | 自动统计数据,在追加一行统计,把所有数据都和输出这个处理会吞没异常,请注意这一点 | | isHyperlink | boolean | false | 超链接,如果是需要实现接口返回对象 | | isImportField | boolean | true | 校验字段,看看这个字段是不是导入的Excel中有,如果没有说明是错误的Excel,读取失败,支持name_id | | exportFormat | String | &quot;&quot; | 导出的时间格式,以这个是否为空来判断是否需要格式化日期 | | importFormat | String | &quot;&quot; | 导入的时间格式,以这个是否为空来判断是否需要格式化日期 | | format | String | &quot;&quot; | 时间格式,相当于同时设置了exportFormat 和 importFormat | | databaseFormat | String | &quot;yyyyMMddHHmmss&quot; | 导出时间设置,如果字段是Date类型则不需要设置 数据库如果是string类型,这个需要设置这个数据库格式,用以转换时间格式输出 | | numFormat | String | &quot;&quot; | 数字格式化,参数是Pattern,使用的对象是DecimalFormat | | imageType | int | 1 | 导出类型 1 从file读取 2 是从数据库中读取 默认是文件 同样导入也是一样的 | | suffix | String | &quot;&quot; | 文字后缀,如% 90 变成90% | | isWrap | boolean | true | 是否换行 即支持\\n | | mergeRely | int[] | {} | 合并单元格依赖关系,比如第二列合并是基于第一列 则{1}就可以了 | | mergeVertical | boolean | fasle | 纵向合并内容相同的单元格 |</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;tb_user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@KeySql</span><span class="token punctuation">(</span>useGeneratedKeys <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;编号&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>         <span class="token comment">//主键</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span> <span class="token comment">//员工名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>    <span class="token comment">//手机号</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;省份名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> province<span class="token punctuation">;</span> <span class="token comment">//省份名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;城市名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>     <span class="token comment">//城市名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> salary<span class="token punctuation">;</span>   <span class="token comment">// 工资</span>
    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern<span class="token operator">=</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;入职日期&quot;</span><span class="token punctuation">,</span>format <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> hireDate<span class="token punctuation">;</span> <span class="token comment">// 入职日期</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> deptId<span class="token punctuation">;</span>   <span class="token comment">//部门id</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;出生日期&quot;</span><span class="token punctuation">,</span>format <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span> <span class="token comment">//出生日期</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;一寸照片&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> photo<span class="token punctuation">;</span>    <span class="token comment">//一寸照片</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;现在居住地址&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>  <span class="token comment">//现在居住地址</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&gt;</span></span> resourceList<span class="token punctuation">;</span> <span class="token comment">//办公用品</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实现方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * easypoi导出excel
     * <span class="token keyword">@param</span> <span class="token parameter">response</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
     */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportExcelByEasyPOI</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//设置标题以及sheetName，excel导出类型</span>
    <span class="token class-name">ExportParams</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExportParams</span><span class="token punctuation">(</span><span class="token string">&quot;员工信息&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;员工数据&quot;</span><span class="token punctuation">,</span> <span class="token class-name">ExcelType</span><span class="token punctuation">.</span><span class="token constant">XSSF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取数据源</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span>Workbook</span> workbook <span class="token operator">=</span> <span class="token class-name">ExcelExportUtil</span><span class="token punctuation">.</span><span class="token function">exportExcel</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token string">&quot;easypoi导出用户数据列表.xlsx&quot;</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;attachment;filename=&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ISO8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="_2、导入" tabindex="-1"><a class="header-anchor" href="#_2、导入" aria-hidden="true">#</a> 2、导入</h4><p>有导出就应该有导入，我们就把刚才导出的数据库导入到表中</p><p>Excel导入时需要的参数类ImportParams常用设置说明</p><ol><li><p>读取指定的sheet 比如要读取上传得第二个sheet 那么需要把startSheetIndex = 1 就可以了</p></li><li><p>读取几个sheet 比如读取前2个sheet,那么 sheetNum=2 就可以了</p></li><li><p>读取第二个到第五个sheet 设置 startSheetIndex = 1 然后sheetNum = 4</p></li><li><p>读取全部的sheet sheetNum 设置大点就可以了</p></li><li><p>保存Excel 设置 needVerfiy = true,默认保存的路径为upload/excelUpload/Test/yyyyMMddHHmss 保存名称上传时间五位随机数 如果自定义路径 修改下saveUrl 就可以了,同时saveUrl也是图片上传时候的保存的路径</p></li><li><p>判断一个Excel是不是合法的Excel importFields 设置下值,就是表示表头必须至少包含的字段,如果缺一个就是不合法的excel,不导入</p></li><li><p>图片的导入</p><blockquote><p>有图片的导出就有图片的导入,导入的配置和导出是一样的,但是需要设置保存路径 1.设置保存路径saveUrl 默认为&quot;upload/excelUpload&quot; 可以手动修改 ImportParams 修改下就可以了</p></blockquote></li><li><p>修改实体类，表明哪些需要导入，设置<code>isImportField = &quot;true&quot;</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;tb_user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@KeySql</span><span class="token punctuation">(</span>useGeneratedKeys <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;编号&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>         <span class="token comment">//主键</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span> <span class="token comment">//员工名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>    <span class="token comment">//手机号</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;省份名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> province<span class="token punctuation">;</span> <span class="token comment">//省份名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;城市名&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>     <span class="token comment">//城市名</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> salary<span class="token punctuation">;</span>   <span class="token comment">// 工资</span>
    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern<span class="token operator">=</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;入职日期&quot;</span><span class="token punctuation">,</span>format <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> hireDate<span class="token punctuation">;</span> <span class="token comment">// 入职日期</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> deptId<span class="token punctuation">;</span>   <span class="token comment">//部门id</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;出生日期&quot;</span><span class="token punctuation">,</span>format <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthday<span class="token punctuation">;</span> <span class="token comment">//出生日期</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;一寸照片&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> savePath <span class="token operator">=</span> <span class="token string">&quot;D:\\\\28611\\\\idea-workspace\\\\xiaobear\\\\xiaobear-report\\\\xiaobear-report\\\\src\\\\main\\\\resources\\\\static\\\\user_photos\\\\&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> photo<span class="token punctuation">;</span>    <span class="token comment">//一寸照片</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;现在居住地址&quot;</span><span class="token punctuation">,</span>orderNum <span class="token operator">=</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> isImportField <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>  <span class="token comment">//现在居住地址</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&gt;</span></span> resourceList<span class="token punctuation">;</span> <span class="token comment">//办公用品</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>代码实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * easypoi导入
     * <span class="token keyword">@param</span> <span class="token parameter">file</span>
     */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importUserByEasyPoi</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    <span class="token class-name">ImportParams</span> importParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置有一行标题</span>
    importParams<span class="token punctuation">.</span><span class="token function">setTitleRows</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置有一行行头</span>
    importParams<span class="token punctuation">.</span><span class="token function">setHeadRows</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token class-name">ExcelImportUtil</span><span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> importParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="_3、使用模板导出数据" tabindex="-1"><a class="header-anchor" href="#_3、使用模板导出数据" aria-hidden="true">#</a> 3、使用模板导出数据</h4>`,19),f=t('<p>关于样式问题：<strong>easypoi不会改变excel原有的样式</strong></p><ol><li><p>制作模板</p><p><img src="'+k+'" alt="image-20210804111036865" loading="lazy"></p></li><li><p>放入项目中</p><p><img src="'+r+`" alt="image-20210804111108642" loading="lazy"></p></li><li><p>代码实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 通过easypoi导出word模板
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     * <span class="token keyword">@param</span> <span class="token parameter">request</span>
     * <span class="token keyword">@param</span> <span class="token parameter">response</span>
     */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportUserInfoWithTemplateByEasyPoi</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//获取模板的路径  SpringBoot项目获取根目录的方式</span>
    <span class="token class-name">File</span> rootPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">File</span> templatePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>rootPath<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;/excel_template/userInfo3.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//读取模板文件</span>
    <span class="token class-name">TemplateExportParams</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateExportParams</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//将对象转成map</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">entityToMap</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//设置图片</span>
    <span class="token class-name">ImageEntity</span> imageEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*     imageEntity.setWidth(50);
        imageEntity.setHeight(100);*/</span>
    imageEntity<span class="token punctuation">.</span><span class="token function">setColspan</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imageEntity<span class="token punctuation">.</span><span class="token function">setRowspan</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imageEntity<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPhoto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;photo&quot;</span><span class="token punctuation">,</span>imageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//进行导出</span>
    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span>Workbook</span> workbook <span class="token operator">=</span> <span class="token class-name">ExcelExportUtil</span><span class="token punctuation">.</span><span class="token function">exportExcel</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//导出的文件名称</span>
    <span class="token class-name">String</span> filename<span class="token operator">=</span><span class="token string">&quot;用户详细信息数据.xlsx&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//设置文件的打开方式和mime类型</span>
    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment;filename=&quot;</span>  <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ISO8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="_4、导出csv文件" tabindex="-1"><a class="header-anchor" href="#_4、导出csv文件" aria-hidden="true">#</a> 4、导出csv文件</h4><p>csv的导出基本上和excel的导出一致,大体参数也是一致的</p><p>CsvExportParams 的参数描述如下：</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>功能</th></tr></thead><tbody><tr><td>encoding</td><td>String</td><td>UTF8</td><td>文件编码</td></tr><tr><td>spiltMark</td><td>String</td><td>,</td><td>分隔符</td></tr><tr><td>textMark</td><td>String</td><td>“</td><td>字符串识别,可以去掉,需要前后一致</td></tr><tr><td>titleRows</td><td>int</td><td>0</td><td>表格头,忽略</td></tr><tr><td>headRows</td><td>int</td><td>1</td><td>标题</td></tr><tr><td>exclusions</td><td>String[]</td><td>0</td><td>忽略的字段</td></tr></tbody></table><p>代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * easypoi导出csv文件
     * <span class="token keyword">@param</span> <span class="token parameter">response</span>
     */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downLoadCSVWithEasyPOI</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token string">&quot;用户数据.csv&quot;</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;attachment;filename=&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ISO8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CsvExportParams</span> csvExportParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CsvExportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    csvExportParams<span class="token punctuation">.</span><span class="token function">setExclusions</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;照片&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CsvExportUtil</span><span class="token punctuation">.</span><span class="token function">exportCsv</span><span class="token punctuation">(</span>csvExportParams<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> users<span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、word操作" tabindex="-1"><a class="header-anchor" href="#_3、word操作" aria-hidden="true">#</a> 3、word操作</h3><h4 id="导出word" tabindex="-1"><a class="header-anchor" href="#导出word" aria-hidden="true">#</a> 导出word</h4><blockquote><p>Word模板和Excel模板用法基本一致，支持的标签也是一致的，仅仅支持07版本的word也是只能生成后缀是docx的文档，poi对doc支持不好所以easyPOI中就没有支持doc，我们就拿docx做导出</p></blockquote><p>模板中标签的用法：</p>`,12),w=n("thead",null,[n("tr",null,[n("th",null,"指令"),n("th",null,"作用")])],-1),x=n("td",null,"三元运算",-1),E=n("tr",null,[n("td",null,"n:"),n("td",null,[n("code",null,"表示 这个cell是数值类型 {{n:}} ")])],-1),_=n("tr",null,[n("td",null,"le:"),n("td",null,[n("code",null,"代表长度{{le:()}} 在if/else 运用{{le:() > 8 ? obj1 : obj2}}")])],-1),S=n("tr",null,[n("td",null,"fd:"),n("td",null,[n("code",null,"格式化时间 {{fd:(obj;yyyy-MM-dd)}} ")])],-1),I=n("tr",null,[n("td",null,"fn:"),n("td",null,[n("code",null,"格式化数字 {{fn:(obj;###.00)}} ")])],-1),P=n("tr",null,[n("td",null,"fe:"),n("td",null,"遍历数据,创建row")],-1),N=n("tr",null,[n("td",null,"!fe:"),n("td",null,"遍历数据不创建row")],-1),F=n("tr",null,[n("td",null,"$fe:"),n("td",null,"下移插入,把当前行,下面的行全部下移.size()行,然后插入")],-1),M=n("tr",null,[n("td",null,"#fe:"),n("td",null,"横向遍历")],-1),U=n("tr",null,[n("td",null,"v_fe:"),n("td",null,"横向遍历值")],-1),j=n("tr",null,[n("td",null,"!if:"),n("td",null,[n("code",null,"删除当前列 {{!if:(test)}} ")])],-1),H=n("tr",null,[n("td",null,"‘’"),n("td",null,"单引号表示常量值 ‘’ 比如’1’ 那么输出的就是 1")],-1),L=n("tr",null,[n("td",null,"&NULL&"),n("td",null,"空格")],-1),D=n("tr",null,[n("td",null,"&INDEX&"),n("td",null,"表示循环中的序号,自动添加")],-1),R=n("tr",null,[n("td",null,"]]"),n("td",null,"换行符 多行遍历导出")],-1),O=n("tr",null,[n("td",null,"sum："),n("td",null,"统计数据")],-1),T=t('<ol><li><p>根据指令，制作模板</p><p><img src="'+d+'" alt="image-20210804135257342" loading="lazy"></p></li><li><p>放入项目中</p><p><img src="'+m+`" alt="image-20210804135421146" loading="lazy"></p></li><li><p>代码实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * easyPOI导出word模板
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     * <span class="token keyword">@param</span> <span class="token parameter">response</span>
     */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportWordByEasyPOI</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    <span class="token comment">//获取模板</span>
    <span class="token class-name">File</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">File</span> templatePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/word_template/contract_template2.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//获取数据</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;hireDate&quot;</span><span class="token punctuation">,</span>sd<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getHireDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//正文照片</span>
    <span class="token class-name">ImageEntity</span> imageEntity1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imageEntity1<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imageEntity1<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imageEntity1<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>user<span class="token punctuation">.</span><span class="token function">getPhoto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;photo&quot;</span><span class="token punctuation">,</span>imageEntity1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//处理word表格</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map1<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>xiaobear<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span>Resource</span> resource <span class="token operator">:</span> user<span class="token punctuation">.</span><span class="token function">getResourceList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>resource<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span>resource<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;needReturn&quot;</span><span class="token punctuation">,</span>resource<span class="token punctuation">.</span><span class="token function">getNeedReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//表格照片</span>
        <span class="token class-name">ImageEntity</span> imageEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageEntity<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageEntity<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imageEntity<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\\\static&quot;</span><span class="token operator">+</span>resource<span class="token punctuation">.</span><span class="token function">getPhoto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;photo&quot;</span><span class="token punctuation">,</span>imageEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">XWPFDocument</span> document <span class="token operator">=</span> <span class="token class-name">WordExportUtil</span><span class="token punctuation">.</span><span class="token function">exportWord07</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//导出</span>
    <span class="token class-name">String</span> filename<span class="token operator">=</span>user<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;_合同.docx&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//            设置文件的打开方式和mime类型</span>
    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment;filename=&quot;</span>  <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ISO8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><img src="`+v+'" alt="image-20210804143558044" loading="lazy"></p>',2);function C(a,B){const p=l("ExternalLinkIcon");return u(),i("div",null,[b,n("p",null,[s("原文档地址："),n("a",q,[s("https://easypoi.mydoc.io/"),o(p)]),s(" （比较推荐）")]),n("p",null,[s("新地址："),n("a",y,[s("http://www.wupaas.com/"),o(p)])]),h,n("blockquote",null,[n("p",null,[s("模板是处理复杂Excel的简单方法，复杂的Excel样式，可以用Excel直接编辑，完美的避开了代码编写样式的雷区，同时指令的支持，也提了模板的有效性；"),n("strong",null,"采用的写法是"+e()+"代表表达式，然后根据表达式里面的数据取值",1)])]),f,n("table",null,[w,n("tbody",null,[n("tr",null,[n("td",null,e(a.test?a.obj:a.obj2),1),x]),E,_,S,I,P,N,F,M,U,j,H,L,D,R,O])]),T])}const z=c(g,[["render",C],["__file","easypoi.html.vue"]]);export{z as default};
