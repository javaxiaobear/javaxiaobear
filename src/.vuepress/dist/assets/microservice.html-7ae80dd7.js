import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,e as s}from"./app-aeb4ead9.js";const i="/assets/image-20220515153644202-8da81669.png",r={},d=s(`<h3 id="_1、建立测试微服务模块" tabindex="-1"><a class="header-anchor" href="#_1、建立测试微服务模块" aria-hidden="true">#</a> 1、建立测试微服务模块</h3><h3 id="_2、通过dockerfile发布微服务部署到docker容器" tabindex="-1"><a class="header-anchor" href="#_2、通过dockerfile发布微服务部署到docker容器" aria-hidden="true">#</a> 2、通过dockerfile发布微服务部署到docker容器</h3><h4 id="_1、idea-进行打包" tabindex="-1"><a class="header-anchor" href="#_1、idea-进行打包" aria-hidden="true">#</a> 1、IDEA 进行打包</h4><h4 id="_2、编写dockerfile" tabindex="-1"><a class="header-anchor" href="#_2、编写dockerfile" aria-hidden="true">#</a> 2、编写Dockerfile</h4><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token comment">## 基础镜像使用java</span>
<span class="token instruction"><span class="token keyword">FROM</span> java:8</span>
<span class="token comment">## 作者</span>
<span class="token instruction"><span class="token keyword">MAINTAINER</span> xiaobear</span>
<span class="token comment">## VOLUME 指定临时文件目录为/tmp，在主机/var/lib/docker目录下创建了一个临时文件并链接到容器的/tmp</span>
<span class="token instruction"><span class="token keyword">VOLUME</span> /tmp</span>
<span class="token comment">## 将jar包添加到容器中并更名为xiaobear_docker.jar</span>
<span class="token instruction"><span class="token keyword">ADD</span> Docker-Boot-0.0.1-SNAPSHOT.jar xiaobear_docker.jar</span>
<span class="token comment">## 运行jar包</span>
<span class="token instruction"><span class="token keyword">RUN</span> bash -c <span class="token string">&#39;touch /xiaobear_docker.jar&#39;</span></span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;java&quot;</span>,<span class="token string">&quot;-jar&quot;</span>,<span class="token string">&quot;/xiaobear_docker.jar&quot;</span>]</span>
<span class="token comment">#暴露6688端口作为微服务</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 6688</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS：将微服务jar包和Dockerfile文件上传到同一个目录下</p><h4 id="_3、构建镜像" tabindex="-1"><a class="header-anchor" href="#_3、构建镜像" aria-hidden="true">#</a> 3、构建镜像</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker build -t docker_boot:1.0 .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4、运行镜像" tabindex="-1"><a class="header-anchor" href="#_4、运行镜像" aria-hidden="true">#</a> 4、运行镜像</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> docker run -d -p 6688:6688 docker_boot:1.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5、测试" tabindex="-1"><a class="header-anchor" href="#_5、测试" aria-hidden="true">#</a> 5、测试</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl 127.0.0.1:6688/hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+i+'" alt="image-20220515153644202" loading="lazy"></p>',13),c=[d];function t(o,l){return a(),n("div",null,c)}const m=e(r,[["render",t],["__file","microservice.html.vue"]]);export{m as default};
