const e=JSON.parse('{"key":"v-86d94896","path":"/interview/javaBasics/objectOriented.html","title":"Java面向对象","lang":"zh-CN","frontmatter":{"title":"Java面向对象","description":"1、面向对象都有哪些特性以及你对这些特性的理解？\\r 1. 继承：继承是从已有类得到继承信息创建新类的过程。提供继承信息的类被称为父类（超类、基类）；得到继承信息的 类被称为子类（派生类）。继承让变化中的软件系统有了一定的延续性，同时继承也是封装程序中可变因素的重要手段。\\r 2. 封装：通常认为封装是把数据和操作数据的方法绑定起来，对数据的访问只能通过已...","head":[["meta",{"property":"og:url","content":"https://javaxiaobear.cn/interview/javaBasics/objectOriented.html"}],["meta",{"property":"og:site_name","content":"小熊学Java 全能学习+面试指南"}],["meta",{"property":"og:title","content":"Java面向对象"}],["meta",{"property":"og:description","content":"1、面向对象都有哪些特性以及你对这些特性的理解？\\r 1. 继承：继承是从已有类得到继承信息创建新类的过程。提供继承信息的类被称为父类（超类、基类）；得到继承信息的 类被称为子类（派生类）。继承让变化中的软件系统有了一定的延续性，同时继承也是封装程序中可变因素的重要手段。\\r 2. 封装：通常认为封装是把数据和操作数据的方法绑定起来，对数据的访问只能通过已..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T11:19:08.000Z"}],["meta",{"property":"article:author","content":"小熊同学"}],["meta",{"property":"article:modified_time","content":"2023-09-21T11:19:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T11:19:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小熊同学\\",\\"url\\":\\"https://javaxiaobear.cn\\"}]}"]]},"headers":[{"level":2,"title":"1、面向对象都有哪些特性以及你对这些特性的理解？","slug":"_1、面向对象都有哪些特性以及你对这些特性的理解","link":"#_1、面向对象都有哪些特性以及你对这些特性的理解","children":[]},{"level":2,"title":"2、访问 权限 修饰符 public 、 private 、 protected， 以及不写（默认）时的区别","slug":"_2、访问-权限-修饰符-public-、-private-、-protected-以及不写-默认-时的区别","link":"#_2、访问-权限-修饰符-public-、-private-、-protected-以及不写-默认-时的区别","children":[]},{"level":2,"title":"3、如何理解 clone 对象","slug":"_3、如何理解-clone-对象","link":"#_3、如何理解-clone-对象","children":[{"level":3,"title":"1、为什么要用 clone","slug":"_1、为什么要用-clone","link":"#_1、为什么要用-clone","children":[]},{"level":3,"title":"2、new一个对象的过程和 clone一个对象的过程区别？","slug":"_2、new一个对象的过程和-clone一个对象的过程区别","link":"#_2、new一个对象的过程和-clone一个对象的过程区别","children":[]},{"level":3,"title":"3、clone对象的使用？","slug":"_3、clone对象的使用","link":"#_3、clone对象的使用","children":[]}]},{"level":2,"title":"4、用户不能调用构造方法，只能通过new关键字自动调用？","slug":"_4、用户不能调用构造方法-只能通过new关键字自动调用","link":"#_4、用户不能调用构造方法-只能通过new关键字自动调用","children":[]},{"level":2,"title":"5、讲讲类的实例化顺序，比如父类静态数据，构造函数，子类静态数据，构造函数?","slug":"_5、讲讲类的实例化顺序-比如父类静态数据-构造函数-子类静态数据-构造函数","link":"#_5、讲讲类的实例化顺序-比如父类静态数据-构造函数-子类静态数据-构造函数","children":[]},{"level":2,"title":"6、构造器（constructor）是否可被重写（override）？","slug":"_6、构造器-constructor-是否可被重写-override","link":"#_6、构造器-constructor-是否可被重写-override","children":[]},{"level":2,"title":"7、创建对象的几种方式？","slug":"_7、创建对象的几种方式","link":"#_7、创建对象的几种方式","children":[]},{"level":2,"title":"8、Super与this表示什么？","slug":"_8、super与this表示什么","link":"#_8、super与this表示什么","children":[]},{"level":2,"title":"9、Java四种引用类型","slug":"_9、java四种引用类型","link":"#_9、java四种引用类型","children":[]},{"level":2,"title":"10、成员变量（属性）和局部变量的区别？","slug":"_10、成员变量-属性-和局部变量的区别","link":"#_10、成员变量-属性-和局部变量的区别","children":[]}],"git":{"createdTime":1695295148000,"updatedTime":1695295148000,"contributors":[{"name":"javaxiaobear","email":"2861184805@qq.com","commits":1}]},"readingTime":{"minutes":10.28,"words":3085},"filePathRelative":"interview/javaBasics/objectOriented.md","localizedDate":"2023年9月21日","copyright":{"author":"小熊学Java"},"autoDesc":true,"excerpt":""}');export{e as data};
