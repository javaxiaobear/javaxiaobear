import{_ as n}from"./1575107648105-f53bfcdd.js";import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,e as p}from"./app-f55ccf80.js";const e="/assets/1575108966935-c5fc88dc.png",c="/assets/1575109268443-d2b5c322.png",o="/assets/1575109366989-071a0baf.png",i="/assets/1575112075626-850759b1.png",l="/assets/1575109627745-0ce2a361.png",u="/assets/clip_image002-931e96a7.png",r="/assets/1575113551947-7a459621.png",k="/assets/1575113951966-fe94a91d.png",d="/assets/1575114245068-2e8b2527.png",m="/assets/image-20221204211405493-7da1bb4f.png",v="/assets/image-20221204211429039-b4fe1196.png",b="/assets/image-20221204211752675-a63757f3.png",g="/assets/image-20221204211848870-73d376f3.png",y="/assets/image-20221204211930300-bb8fe891.png",f="/assets/image-20221204220839762-b6cb2346.png",h={},_=p('<h2 id="_1、流程定义" tabindex="-1"><a class="header-anchor" href="#_1、流程定义" aria-hidden="true">#</a> 1、流程定义</h2><h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h3><p>流程定义是线下按照bpmn2.0标准去描述 业务流程，通常使用idea中的插件对业务流程进行建模。</p><p>使用idea下的designer设计器绘制流程，并会生成两个文件：.bpmn和.png</p><h3 id="bpmn文件" tabindex="-1"><a class="header-anchor" href="#bpmn文件" aria-hidden="true">#</a> .bpmn文件</h3><p>使用activiti-desinger设计业务流程，会生成.bpmn文件，上面我们已经创建好了bpmn文件</p><p>BPMN 2.0根节点是definitions节点。 这个元素中，可以定义多个流程定义（不过我们建议每个文件只包含一个流程定义， 可以简化开发过程中的维护难度）。 注意，definitions元素 最少也要包含xmlns 和 targetNamespace的声明。 targetNamespace可以是任意值，它用来对流程实例进行分类。</p><p>流程定义部分：定义了流程每个结点的描述及结点之间的流程流转。</p><p>流程布局定义：定义流程每个结点在流程图上的位置坐标等信息。</p><h3 id="生成-png图片文件" tabindex="-1"><a class="header-anchor" href="#生成-png图片文件" aria-hidden="true">#</a> 生成.png图片文件</h3><p>IDEA工具中的操作方式</p><h4 id="_1、修改文件后缀为xml" tabindex="-1"><a class="header-anchor" href="#_1、修改文件后缀为xml" aria-hidden="true">#</a> 1、修改文件后缀为xml</h4><p>首先将evection.bpmn文件改名为evection.xml，如下图：</p><p><img src="'+e+'" alt="1575108966935" loading="lazy"></p><p>evection.xml修改前的bpmn文件，效果如下：</p><p><img src="'+n+'" alt="1575107648105" loading="lazy"></p><h4 id="_2、使用designer设计器打开-xml文件" tabindex="-1"><a class="header-anchor" href="#_2、使用designer设计器打开-xml文件" aria-hidden="true">#</a> 2、使用designer设计器打开.xml文件</h4><p>在evection.xml文件上面，点右键并选择Diagrams菜单，再选择Show BPMN2.0 Designer…</p><p><img src="'+c+'" alt="1575109268443" loading="lazy"></p><h4 id="_3、查看打开的文件" tabindex="-1"><a class="header-anchor" href="#_3、查看打开的文件" aria-hidden="true">#</a> 3、查看打开的文件</h4><p>打开后，却出现乱码，如图：</p><p><img src="'+o+'" alt="1575109366989" loading="lazy"></p><h4 id="_4、解决中文乱码" tabindex="-1"><a class="header-anchor" href="#_4、解决中文乱码" aria-hidden="true">#</a> 4、解决中文乱码</h4><p>1、打开Settings，找到File Encodings，把encoding的选项都选择UTF-8</p><p><img src="'+i+'" alt="1575112075626" loading="lazy"></p><p>2、打开IDEA安装路径，找到如下的安装目录</p><p><img src="'+l+'" alt="1575109627745" loading="lazy"></p><p>根据自己所安装的版本来决定，我使用的是64位的idea，所以在idea64.exe.vmoptions文件的最后一行追加一条命令： -Dfile.encoding=UTF-8</p><p>如下所示：</p><p><img src="'+u+'" alt="https://images2017.cnblogs.com/blog/963440/201712/963440-20171221132445475-1259807908.png" loading="lazy"></p><p>一定注意，不要有空格，否则重启IDEA时会打不开，然后 重启IDEA。</p><p>如果以上方法已经做完，还出现乱码，就再修改一个文件，并在文件的末尾添加： -Dfile.encoding=UTF-8，然后重启idea，如图：</p><p><img src="'+r+'" alt="1575113551947" loading="lazy"></p><p>最后重新在evection.xml文件上面，点右键并选择Diagrams菜单，再选择Show BPMN2.0 Designer…，看到生成图片，如图：</p><p><img src="'+k+'" alt="1575113951966" loading="lazy"></p><p>到此，解决乱码问题</p><h4 id="_5、导出为图片文件" tabindex="-1"><a class="header-anchor" href="#_5、导出为图片文件" aria-hidden="true">#</a> 5、导出为图片文件</h4><p>点击Export To File的小图标，打开如下窗口，注意填写文件名及扩展名，选择好保存图片的位置：</p><p><img src="'+d+`" alt="1575114245068" loading="lazy"></p><p>然后，我们把png文件拷贝到resources下的bpmn目录，并且把evection.xml改名为evection.bpmn。</p><h2 id="_2、流程定义部署" tabindex="-1"><a class="header-anchor" href="#_2、流程定义部署" aria-hidden="true">#</a> 2、流程定义部署</h2><h3 id="概述-1" tabindex="-1"><a class="header-anchor" href="#概述-1" aria-hidden="true">#</a> 概述</h3><p>将上面在设计器中定义的流程部署到activiti数据库中，就是流程定义部署。</p><p>通过调用activiti的api将流程定义的bpmn和png两个文件一个一个添加部署到activiti中，也可以将两个文件打成zip包进行部署。</p><h3 id="单个文件部署方式" tabindex="-1"><a class="header-anchor" href="#单个文件部署方式" aria-hidden="true">#</a> 单个文件部署方式</h3><p>分别将bpmn文件和png图片文件部署。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span></span><span class="token class-name">ProcessEngine</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span></span><span class="token class-name">ProcessEngines</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span></span><span class="token class-name">RepositoryService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">Deployment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivitiDemo</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 部署流程定义
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//        1、创建ProcessEngine</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        2、得到RepositoryService实例</span>
        <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        3、使用RepositoryService进行部署</span>
        <span class="token class-name">Deployment</span> deployment <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addClasspathResource</span><span class="token punctuation">(</span><span class="token string">&quot;bpmn/evection.bpmn&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 添加bpmn资源</span>
                <span class="token punctuation">.</span><span class="token function">addClasspathResource</span><span class="token punctuation">(</span><span class="token string">&quot;bpmn/evection.png&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// 添加png资源</span>
                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;出差申请流程&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        4、输出部署信息</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署id：&quot;</span> <span class="token operator">+</span> deployment<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署名称：&quot;</span> <span class="token operator">+</span> deployment<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行此操作后activiti会将上边代码中指定的bpm文件和图片文件保存在activiti数据库。</p><p><img src="`+m+`" alt="image-20221204211405493" loading="lazy"></p><h3 id="压缩包部署方式" tabindex="-1"><a class="header-anchor" href="#压缩包部署方式" aria-hidden="true">#</a> 压缩包部署方式</h3><p>将evection.bpmn和evection.png压缩成zip包。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deployProcessByZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 定义zip输入流</span>
		<span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">this</span>
				<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>
						<span class="token string">&quot;bpmn/evection.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ZipInputStream</span> zipInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipInputStream</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 获取repositoryService</span>
		<span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine
				<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 流程部署</span>
		<span class="token class-name">Deployment</span> deployment <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addZipInputStream</span><span class="token punctuation">(</span>zipInputStream<span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署id：&quot;</span> <span class="token operator">+</span> deployment<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署名称：&quot;</span> <span class="token operator">+</span> deployment<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行此操作后activiti会将上边代码中指定的bpm文件和图片文件保存在activiti数据库。</p><p><img src="`+v+`" alt="image-20221204211429039" loading="lazy"></p><h3 id="操作数据表" tabindex="-1"><a class="header-anchor" href="#操作数据表" aria-hidden="true">#</a> 操作数据表</h3><p>流程定义部署后操作activiti的3张表如下：</p><p>act_re_deployment 流程定义部署表，每部署一次增加一条记录</p><p>act_re_procdef 流程定义表，部署每个新的流程定义都会在这张表中增加一条记录</p><p>act_ge_bytearray 流程资源表</p><p>接下来我们来看看，写入了什么数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> act_re_deployment <span class="token comment">#流程定义部署表，记录流程部署信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：</p><p><img src="`+b+`" alt="image-20221204211752675" loading="lazy"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> act_re_procdef <span class="token comment">#流程定义表，记录流程定义信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：</p><p>注意，KEY 这个字段是用来唯一识别不同流程的关键字</p><p><img src="`+g+`" alt="image-20221204211848870" loading="lazy"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> act_ge_bytearray <span class="token comment">#资源表 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：</p><p><img src="`+y+`" alt="image-20221204211930300" loading="lazy"></p><p>注意：</p><p>act_re_deployment和act_re_procdef一对多关系，一次部署在流程部署表生成一条记录，但一次部署可以部署多个流程定义，每个流程定义在流程定义表生成一条记录。每一个流程定义在act_ge_bytearray会存在两个资源记录，bpmn和png。</p><p>建议：一次部署一个流程，这样部署表和流程定义表是一对一有关系，方便读取流程部署及流程定义信息。</p><h2 id="_3、启动流程实例" tabindex="-1"><a class="header-anchor" href="#_3、启动流程实例" aria-hidden="true">#</a> 3、启动流程实例</h2><p>流程定义部署在activiti后就可以通过工作流管理业务流程了，也就是说上边部署的出差申请流程可以使用了。</p><p>针对该流程，启动一个流程表示发起一个新的出差申请单，这就相当于java类与java对象的关系，类定义好后需要new创建一个对象使用，当然可以new多个对象。对于请出差申请流程，张三发起一个出差申请单需要启动一个流程实例，出差申请单发起一个出差单也需要启动一个流程实例。</p><p>代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 启动流程
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStartProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//创建流程引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取runtimeService</span>
        <span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//通过流程id启动流程 对应的act_re_procdef的id</span>
        <span class="token class-name">ProcessInstance</span> evection <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceById</span><span class="token punctuation">(</span><span class="token string">&quot;evection:1:4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//输出内容</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义id：&quot;</span> <span class="token operator">+</span> evection<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例id：&quot;</span> <span class="token operator">+</span> evection<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前活动Id：&quot;</span> <span class="token operator">+</span> evection<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出内容如下：</p><p><img src="`+f+`" alt="image-20221204220839762" loading="lazy"></p><p><strong>操作数据表</strong></p><p>act_hi_actinst 流程实例执行历史</p><p>act_hi_identitylink 流程的参与用户历史信息</p><p>act_hi_procinst 流程实例历史信息</p><p>act_hi_taskinst 流程任务历史信息</p><p>act_ru_execution 流程执行信息</p><p>act_ru_identitylink 流程的参与用户信息</p><p>act_ru_task 任务信息</p><h2 id="_4、任务查询" tabindex="-1"><a class="header-anchor" href="#_4、任务查询" aria-hidden="true">#</a> 4、任务查询</h2><p>流程启动后，任务的负责人就可以查询自己当前需要处理的任务，查询出来的任务都是该用户的待办任务。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 查询当前个人待执行的任务
      */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindPersonalTaskList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        任务负责人</span>
        <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        创建TaskService</span>
        <span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        根据流程key 和 任务负责人 查询任务</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;myEvection&quot;</span><span class="token punctuation">)</span> <span class="token comment">//流程Key</span>
                <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span><span class="token comment">//只查询该任务负责人的任务</span>
                <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Task</span> task <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例id：&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务id：&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务负责人：&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getAssignee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称：&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>流程实例id：2501
任务id：2505
任务负责人：zhangsan
任务名称：创建出差申请
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、流程任务处理" tabindex="-1"><a class="header-anchor" href="#_5、流程任务处理" aria-hidden="true">#</a> 5、流程任务处理</h2><p>任务负责人查询待办任务，选择任务进行处理，完成任务。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 完成任务</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">completTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//        获取引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        获取taskService</span>
        <span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        根据流程key 和 任务的负责人 查询任务</span>
<span class="token comment">//        返回一个任务对象</span>
        <span class="token class-name">Task</span> task <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;myEvection&quot;</span><span class="token punctuation">)</span> <span class="token comment">//流程Key</span>
                <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//要查询的负责人</span>
                <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        完成任务,参数：任务id</span>
        taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、流程定义信息查询" tabindex="-1"><a class="header-anchor" href="#_6、流程定义信息查询" aria-hidden="true">#</a> 6、流程定义信息查询</h2><p>查询流程相关信息，包含流程定义，流程部署，流程定义版本</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 查询流程定义
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryProcessDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//        获取引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        repositoryService</span>
        <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        得到ProcessDefinitionQuery 对象</span>
        <span class="token class-name">ProcessDefinitionQuery</span> processDefinitionQuery <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//          查询出当前所有的流程定义</span>
<span class="token comment">//          条件：processDefinitionKey =evection</span>
<span class="token comment">//          orderByProcessDefinitionVersion 按照版本排序</span>
<span class="token comment">//        desc倒叙</span>
<span class="token comment">//        list 返回集合</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessDefinition</span><span class="token punctuation">&gt;</span></span> definitionList <span class="token operator">=</span> processDefinitionQuery<span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;myEvection&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orderByProcessDefinitionVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      输出流程定义信息</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ProcessDefinition</span> processDefinition <span class="token operator">:</span> definitionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义 id=&quot;</span><span class="token operator">+</span>processDefinition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义 name=&quot;</span><span class="token operator">+</span>processDefinition<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义 key=&quot;</span><span class="token operator">+</span>processDefinition<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义 Version=&quot;</span><span class="token operator">+</span>processDefinition<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程部署ID =&quot;</span><span class="token operator">+</span>processDefinition<span class="token punctuation">.</span><span class="token function">getDeploymentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>流程定义 id=myEvection:1:4
流程定义 name=出差申请
流程定义 key=myEvection
流程定义 Version=1
流程部署ID =1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、流程删除" tabindex="-1"><a class="header-anchor" href="#_7、流程删除" aria-hidden="true">#</a> 7、流程删除</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 流程部署id</span>
		<span class="token class-name">String</span> deploymentId <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
		
    <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过流程引擎获取repositoryService</span>
		<span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine
				<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//删除流程定义，如果该流程定义已有流程实例启动则删除时出错</span>
		repositoryService<span class="token punctuation">.</span><span class="token function">deleteDeployment</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//设置true 级联删除流程定义，即使该流程有流程实例启动也可以删除，设置为false非级别删除方式，如果流程</span>
		<span class="token comment">//repositoryService.deleteDeployment(deploymentId, true);</span>
	<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><ol><li><pre><code>  使用repositoryService删除流程定义，历史表信息不会被删除
</code></pre></li><li><pre><code>  如果该流程定义下没有正在运行的流程，则可以用普通删除。
</code></pre></li></ol><p>如果该流程定义下存在已经运行的流程，使用普通删除报错，可用级联删除方法将流程及相关记录全部删除。</p><p>先删除没有完成流程节点，最后就可以完全删除流程定义信息</p><p>项目开发中级联删除操作一般只开放给超级管理员使用.</p><h2 id="_8、流程资源下载" tabindex="-1"><a class="header-anchor" href="#_8、流程资源下载" aria-hidden="true">#</a> 8、流程资源下载</h2><p>现在我们的流程资源文件已经上传到数据库了，如果其他用户想要查看这些资源文件，可以从数据库中把资源文件下载到本地。</p><p>解决方案有：</p><p>1、jdbc对blob类型，clob类型数据读取出来，保存到文件目录</p><p>2、使用activiti的api来实现</p><p>使用commons-io.jar 解决IO的操作</p><p>引入commons-io依赖包</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过流程定义对象获取流程定义资源，获取bpmn和png</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOUtils</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//        获取引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        获取repositoryService</span>
        <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        根据部署id 删除部署信息,如果想要级联删除，可以添加第二个参数，true</span>
        repositoryService<span class="token punctuation">.</span><span class="token function">deleteDeployment</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span>  <span class="token function">queryBpmnFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
<span class="token comment">//        1、得到引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        2、获取repositoryService</span>
        <span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        3、得到查询器：ProcessDefinitionQuery，设置查询条件,得到想要的流程定义</span>
        <span class="token class-name">ProcessDefinition</span> processDefinition <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span><span class="token string">&quot;myEvection&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        4、通过流程定义信息，得到部署ID</span>
        <span class="token class-name">String</span> deploymentId <span class="token operator">=</span> processDefinition<span class="token punctuation">.</span><span class="token function">getDeploymentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        5、通过repositoryService的方法，实现读取图片信息和bpmn信息</span>
<span class="token comment">//        png图片的流</span>
        <span class="token class-name">InputStream</span> pngInput <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">,</span> processDefinition<span class="token punctuation">.</span><span class="token function">getDiagramResourceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        bpmn文件的流</span>
        <span class="token class-name">InputStream</span> bpmnInput <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">,</span> processDefinition<span class="token punctuation">.</span><span class="token function">getResourceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        6、构造OutputStream流</span>
        <span class="token class-name">File</span> file_png <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;d:/evectionflow01.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> file_bpmn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;d:/evectionflow01.bpmn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> bpmnOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file_bpmn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> pngOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file_png<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        7、输入流，输出流的转换</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>pngInput<span class="token punctuation">,</span>pngOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>bpmnInput<span class="token punctuation">,</span>bpmnOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        8、关闭流</span>
        pngOut<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bpmnOut<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pngInput<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bpmnInput<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><ol><li><pre><code>  deploymentId为流程部署ID
</code></pre></li><li><pre><code>  resource_name为act_ge_bytearray表中NAME_列的值
</code></pre></li><li><pre><code>  使用repositoryService的getDeploymentResourceNames方法可以获取指定部署下得所有文件的名称
</code></pre></li><li><pre><code>  使用repositoryService的getResourceAsStream方法传入部署ID和资源图片名称可以获取部署下指定名称文件的输入流
</code></pre></li></ol><p>最后的将输入流中的图片资源进行输出。</p><h2 id="_9、流程历史信息的查看" tabindex="-1"><a class="header-anchor" href="#_9、流程历史信息的查看" aria-hidden="true">#</a> 9、流程历史信息的查看</h2><p>即使流程定义已经删除了，流程执行的历史信息通过前面的分析，依然保存在activiti的act_hi_*相关的表中。所以我们还是可以查询流程执行的历史信息，可以通过HistoryService来查看相关的历史记录。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 查看历史信息
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findHistoryInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//      获取引擎</span>
        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        获取HistoryService</span>
        <span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        获取 actinst表的查询对象</span>
        <span class="token class-name">HistoricActivityInstanceQuery</span> instanceQuery <span class="token operator">=</span> historyService<span class="token punctuation">.</span><span class="token function">createHistoricActivityInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        查询 actinst表，条件：根据 InstanceId 查询</span>
<span class="token comment">//        instanceQuery.processInstanceId(&quot;2501&quot;);</span>
<span class="token comment">//        查询 actinst表，条件：根据 DefinitionId 查询</span>
        instanceQuery<span class="token punctuation">.</span><span class="token function">processDefinitionId</span><span class="token punctuation">(</span><span class="token string">&quot;myEvection:1:4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        增加排序操作,orderByHistoricActivityInstanceStartTime 根据开始时间排序 asc 升序</span>
        instanceQuery<span class="token punctuation">.</span><span class="token function">orderByHistoricActivityInstanceStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        查询所有内容</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricActivityInstance</span><span class="token punctuation">&gt;</span></span> activityInstanceList <span class="token operator">=</span> instanceQuery<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        输出</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HistoricActivityInstance</span> hi <span class="token operator">:</span> activityInstanceList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hi<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hi<span class="token punctuation">.</span><span class="token function">getActivityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hi<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hi<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;==========================&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,124),S=[_];function q(I,D){return a(),t("div",null,S)}const P=s(h,[["render",q],["__file","operate.html.vue"]]);export{P as default};
