const e=JSON.parse('{"key":"v-3023f9de","path":"/architecture/basic/principles.html","title":"架构原则","lang":"zh-CN","frontmatter":{"title":"架构原则","description":"1、 解耦 在软件工程中，耦合指的就是对象之间的依赖性。对象之间的耦合度越高，维护成本越高。因此对象的设计应使类和构件之间的耦合最小。软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则就是高内聚低耦合。 耦合性存在于各个领域，而非软件设计中独有的，理论上说绝对的零耦合是做不到的，但可以通过一些方法将耦合降至最低，降低耦合度即可...","head":[["meta",{"property":"og:url","content":"https://javaxiaobear.cn/architecture/basic/principles.html"}],["meta",{"property":"og:site_name","content":"小熊学Java全能学习+面试指南"}],["meta",{"property":"og:title","content":"架构原则"}],["meta",{"property":"og:description","content":"1、 解耦 在软件工程中，耦合指的就是对象之间的依赖性。对象之间的耦合度越高，维护成本越高。因此对象的设计应使类和构件之间的耦合最小。软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则就是高内聚低耦合。 耦合性存在于各个领域，而非软件设计中独有的，理论上说绝对的零耦合是做不到的，但可以通过一些方法将耦合降至最低，降低耦合度即可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-09T09:36:54.000Z"}],["meta",{"property":"article:author","content":"小熊同学"}],["meta",{"property":"article:modified_time","content":"2023-06-09T09:36:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构原则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-09T09:36:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小熊同学\\",\\"url\\":\\"https://javaxiaobear.cn\\"}]}"]]},"headers":[{"level":2,"title":"1、 解耦","slug":"_1、-解耦","link":"#_1、-解耦","children":[]},{"level":2,"title":"2、 分层","slug":"_2、-分层","link":"#_2、-分层","children":[]},{"level":2,"title":"3、 封装","slug":"_3、-封装","link":"#_3、-封装","children":[]}],"git":{"createdTime":1686303414000,"updatedTime":1686303414000,"contributors":[{"name":"2861184805@qq.com","email":"2861184805@qq.com","commits":1}]},"readingTime":{"minutes":2.2,"words":659},"filePathRelative":"architecture/basic/principles.md","localizedDate":"2023年6月9日","copyright":{"author":"小熊学Java"},"autoDesc":true}');export{e as data};
