const e=JSON.parse('{"key":"v-6cca4558","path":"/interview/javaHighLevel/reflection.html","title":"Java反射面试题","lang":"zh-CN","frontmatter":{"title":"Java反射面试题","description":"1、什么是Java反射机制？\\r Java的反射（reflection）机制是指在程序的运行状态中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任意一个类的成员变量和方法，可以调用任意一个对象的属性和方法。 这种动态获取程序信息以及动态调用对象的功能称为Java语言的反射机制。 1、除了使用new创建对象之外，还可以用什么方法创建对象...","head":[["meta",{"property":"og:url","content":"https://javaxiaobear.cn/interview/javaHighLevel/reflection.html"}],["meta",{"property":"og:site_name","content":"小熊学Java 全能学习+面试指南"}],["meta",{"property":"og:title","content":"Java反射面试题"}],["meta",{"property":"og:description","content":"1、什么是Java反射机制？\\r Java的反射（reflection）机制是指在程序的运行状态中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任意一个类的成员变量和方法，可以调用任意一个对象的属性和方法。 这种动态获取程序信息以及动态调用对象的功能称为Java语言的反射机制。 1、除了使用new创建对象之外，还可以用什么方法创建对象..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T11:19:08.000Z"}],["meta",{"property":"article:author","content":"小熊同学"}],["meta",{"property":"article:modified_time","content":"2023-09-21T11:19:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java反射面试题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T11:19:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小熊同学\\",\\"url\\":\\"https://javaxiaobear.cn\\"}]}"]]},"headers":[{"level":2,"title":"1、什么是Java反射机制？","slug":"_1、什么是java反射机制","link":"#_1、什么是java反射机制","children":[]},{"level":2,"title":"1、除了使用new创建对象之外，还可以用什么方法创建对象？","slug":"_1、除了使用new创建对象之外-还可以用什么方法创建对象","link":"#_1、除了使用new创建对象之外-还可以用什么方法创建对象","children":[]},{"level":2,"title":"2、Java反射创建对象效率高还是通过new创建对象的效率高？","slug":"_2、java反射创建对象效率高还是通过new创建对象的效率高","link":"#_2、java反射创建对象效率高还是通过new创建对象的效率高","children":[]},{"level":2,"title":"3、java反射的作用？","slug":"_3、java反射的作用","link":"#_3、java反射的作用","children":[]},{"level":2,"title":"4、哪些地方会用到反射？","slug":"_4、哪些地方会用到反射","link":"#_4、哪些地方会用到反射","children":[]},{"level":2,"title":"5、反射的实现方法？","slug":"_5、反射的实现方法","link":"#_5、反射的实现方法","children":[]},{"level":2,"title":"6、实现Java反射的类","slug":"_6、实现java反射的类","link":"#_6、实现java反射的类","children":[]},{"level":2,"title":"7、反射机制有哪些优缺点？","slug":"_7、反射机制有哪些优缺点","link":"#_7、反射机制有哪些优缺点","children":[]},{"level":2,"title":"8、Java反射API","slug":"_8、java反射api","link":"#_8、java反射api","children":[]},{"level":2,"title":"9、反射使用步骤（获取 Class 对象、调用对象方法）","slug":"_9、反射使用步骤-获取-class-对象、调用对象方法","link":"#_9、反射使用步骤-获取-class-对象、调用对象方法","children":[]},{"level":2,"title":"10、获取 Class 对象有几种方法","slug":"_10、获取-class-对象有几种方法","link":"#_10、获取-class-对象有几种方法","children":[]},{"level":2,"title":"11、利用反射动态创建对象实例","slug":"_11、利用反射动态创建对象实例","link":"#_11、利用反射动态创建对象实例","children":[]}],"git":{"createdTime":1695295148000,"updatedTime":1695295148000,"contributors":[{"name":"javaxiaobear","email":"2861184805@qq.com","commits":1}]},"readingTime":{"minutes":4.82,"words":1447},"filePathRelative":"interview/javaHighLevel/reflection.md","localizedDate":"2023年9月21日","copyright":{"author":"小熊学Java"},"autoDesc":true,"excerpt":""}');export{e as data};
