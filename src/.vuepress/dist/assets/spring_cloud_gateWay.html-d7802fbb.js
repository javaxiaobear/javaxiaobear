import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as a,d as e,e as t}from"./app-aeb4ead9.js";const i="/assets/image-20210524103410190-705cfe52.png",u="/assets/image-20210524111220156-c4e3a525.png",r="/assets/image-20210524112720689-8a2ab9e1.png",d="/assets/image-20210524134612890-a52361ae.png",k="/assets/image-20210524150219034-0d9d5329.png",m="/assets/image-20210524150854540-c4fd4d4e.png",v="/assets/image-20210524151219175-f0828c60.png",b="/assets/image-20210524154233333-fdfbf25c.png",g="/assets/image-20210524154338650-712c8225.png",h="/assets/image-20210524154702826-2c393fd7.png",y={},_={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/",target:"_blank",rel:"noopener noreferrer"},f=t('<blockquote><p>该项目提供了一个用于在Spring WebFlux之上构建API网关的库。Spring Cloud Gateway旨在提供一种简单而有效的方法来路由到API，并为它们提供跨领域关注，例如：安全性，监视/指标和弹性。</p></blockquote><h3 id="_1、什么是gateway" tabindex="-1"><a class="header-anchor" href="#_1、什么是gateway" aria-hidden="true">#</a> 1、什么是<code>GateWay</code></h3><blockquote><p>Cloud全家桶中有个很重要的组件就是网关，在1.x版本中都是采用的Zuul网关；</p><p>但在2.x版本中，zuul的升级一直跳票，SpringCloud最后自己研发了一个网关替代Zuul，</p><p>那就是SpringCloud Gateway一句话：gateway是原zuul1.x版的替代</p></blockquote><p><img src="'+i+'" alt="image-20210524103410190" loading="lazy"></p><h4 id="_1、概述" tabindex="-1"><a class="header-anchor" href="#_1、概述" aria-hidden="true">#</a> 1、概述</h4><p><strong>提供了一个在Spring生态系统之上构建的API网关，包括：Spring 5，Spring Boot 2和Project Reactor</strong></p><blockquote><p>pringCloud Gateway 作为 Spring Cloud 生态系统中的网关，目标是替代 Zuul，在Spring Cloud 2.0以上版本中，没有对新版本的Zuul 2.0以上最新高性能版本进行集成，仍然还是使用的Zuul 1.x非Reactor模式的老版本。</p><p><strong>而为了提升网关的性能，SpringCloud Gateway是基于WebFlux框架实现的，而WebFlux框架底层则使用了高性能的Reactor模式通信框架Netty。</strong></p><p>Spring Cloud Gateway的目标提供统一的路由方式且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/指标，和限流。</p></blockquote><h4 id="_2、特性" tabindex="-1"><a class="header-anchor" href="#_2、特性" aria-hidden="true">#</a> 2、特性</h4><ul><li>反向代理</li><li>鉴权</li><li>流量控制</li><li>熔断</li><li>日志监控</li></ul><h4 id="_3、微服务的网关在哪" tabindex="-1"><a class="header-anchor" href="#_3、微服务的网关在哪" aria-hidden="true">#</a> 3、微服务的网关在哪</h4><p><img src="'+u+'" alt="image-20210524111220156" loading="lazy"></p><h4 id="_4、有zuul-为什么又出现了gateway" tabindex="-1"><a class="header-anchor" href="#_4、有zuul-为什么又出现了gateway" aria-hidden="true">#</a> 4、有<code>Zuul</code>，为什么又出现了<code>GateWay</code></h4><h5 id="_1、为什么我们选择gateway" tabindex="-1"><a class="header-anchor" href="#_1、为什么我们选择gateway" aria-hidden="true">#</a> 1、为什么我们选择<code>GateWay</code></h5><ol><li><p>netflix不靠谱，迟迟不发布</p><blockquote><p>方面因为Zuul1.0已经进入了维护阶段，而且Gateway是SpringCloud团队研发的，是亲儿子产品，值得信赖。而且很多功能Zuul都没有用起来也非常的简单便捷。</p><p>Gateway是基于异步非阻塞模型上进行开发的，性能方面不需要担心。虽然Netflix早就发布了最新的 Zuul 2.x，但 Spring Cloud 貌似没有整合计划。而且Netflix相关组件都宣布进入维护期；不知前景如何？</p><p>多方面综合考虑Gateway是很理想的网关选择。</p></blockquote></li><li><p>Spring Cloud GateWay有很多特性</p><blockquote><p>基于Spring Framework 5, Project Reactor 和 Spring Boot 2.0 进行构建；</p><p>动态路由：能够匹配任何请求属性；</p><p>可以对路由指定 Predicate（断言）和 Filter（过滤器）；</p><p>集成Hystrix的断路器功能；</p><p>集成 Spring Cloud 服务发现功能；</p><p>易于编写的 Predicate（断言）和 Filter（过滤器）；</p><p>请求限流功能；</p><p>支持路径重写。</p></blockquote></li><li><p>Spring Cloud Gateway 与 Zuul的区别</p><blockquote><p>在SpringCloud Finchley 正式版之前，Spring Cloud 推荐的网关是 Netflix 提供的Zuul：</p><ol><li>Zuul 1.x，是一个基于阻塞 I/ O 的 API Gateway</li><li>Zuul 1.x 基于Servlet 2. 5使用阻塞架构它不支持任何长连接(如 WebSocket) Zuul 的设计模式和Nginx较像，每次 I/ O 操作都是从工作线程中选择一个执行，请求线程被阻塞到工作线程完成，但是差别是Nginx 用C++ 实现，Zuul 用 Java 实现，而 JVM 本身会有第一次加载较慢的情况，使得Zuul 的性能相对较差。</li><li>Zuul 2.x理念更先进，想基于Netty非阻塞和支持长连接，但SpringCloud目前还没有整合。 Zuul 2.x的性能较 Zuul 1.x 有较大提升。在性能方面，根据官方提供的基准测试， Spring Cloud Gateway 的 RPS（每秒请求数）是Zuul 的 1. 6 倍。</li><li>Spring Cloud Gateway 建立 在 Spring Framework 5、 Project Reactor 和 Spring Boot 2 之上， 使用非阻塞 API。</li><li>Spring Cloud Gateway 还 支持 WebSocket， 并且与Spring紧密集成拥有更好的开发体验</li></ol></blockquote></li></ol><h5 id="_2、zuul-1-x模型" tabindex="-1"><a class="header-anchor" href="#_2、zuul-1-x模型" aria-hidden="true">#</a> 2、Zuul 1.x模型</h5><p>Springcloud中所集成的Zuul版本，采用的是Tomcat容器，使用的是传统的Servlet IO处理模型。</p><p>学web课程都知道一个题目，Servlet的生命周期?servlet由servlet container进行生命周期管理。</p><blockquote><p>container启动时构造servlet对象并调用servlet init()进行初始化；</p><p>container运行时接受请求，并为每个请求分配一个线程（一般从线程池中获取空闲线程）然后调用service()。</p><p>container关闭时调用servlet destory()销毁servlet；</p></blockquote><p><strong>上述模式的缺点：</strong></p><blockquote><p>servlet是一个简单的网络IO模型，当请求进入servlet container时，servlet container就会为其绑定一个线程，在并发不高的场景下这种模型是适用的。但是一旦高并发(比如抽风用jemeter压)，线程数量就会上涨，而线程资源代价是昂贵的（上线文切换，内存消耗大）严重影响请求的处理时间。在一些简单业务场景下，不希望为每个request分配一个线程，只需要1个或几个线程就能应对极大并发的请求，这种业务场景下servlet模型没有优势</p></blockquote><p>所以Zuul 1.X是基于servlet之上的一个<mark>阻塞式</mark>处理模型，即spring实现了处理所有request请求的一个</p><p>servlet（DispatcherServlet）并由该servlet阻塞式处理处理。所以Springcloud Zuul无法摆脱servlet模型的弊端</p><h5 id="_3、gateway模型" tabindex="-1"><a class="header-anchor" href="#_3、gateway模型" aria-hidden="true">#</a> 3、GateWay模型</h5><blockquote><p>传统的Web框架，比如说：struts2，springmvc等都是基于Servlet API与Servlet容器基础之上运行的。但是</p><p>在Servlet3.1之后有了<mark>异步非阻塞的支持</mark>。而WebFlux是一个典型非阻塞异步的框架，它的核心是基于Reactor的相关API实现的。相对于传统的web框架来说，它可以运行在诸如Netty，Undertow及支持Servlet3.1的容器上。非阻塞式+函数式编程（Spring5必须让你使用java8）</p><p>Spring WebFlux 是 Spring 5.0 引入的新的响应式框架，区别于 Spring MVC，它不需要依赖Servlet API，它是完全异步非阻塞的，并且基于 Reactor 来实现响应式流规范。</p></blockquote><h3 id="_2、核心概念" tabindex="-1"><a class="header-anchor" href="#_2、核心概念" aria-hidden="true">#</a> 2、核心概念</h3><h4 id="_1、route路由" tabindex="-1"><a class="header-anchor" href="#_1、route路由" aria-hidden="true">#</a> 1、<code>Route</code>路由</h4><p>路由是构建网关的基本模块，它由ID、目标url，一系列的断言和过滤组成，如果断言为true则匹配该路由</p><h4 id="_2、predicate断言" tabindex="-1"><a class="header-anchor" href="#_2、predicate断言" aria-hidden="true">#</a> 2、<code>Predicate</code>断言</h4><p>参考Java8的函数式编程</p><p>开发人员可以匹配HTTP请求中的所有内容（例如请求头或请求参数）， 如果<mark>请求与断言匹配则进行路由</mark></p><h4 id="_3、filter过滤" tabindex="-1"><a class="header-anchor" href="#_3、filter过滤" aria-hidden="true">#</a> 3、<code>Filter</code>过滤</h4><p>Spring框架中GateWayFilter的实例，使用过滤器，可以在请求被路由前或之后队请求进行修改</p><hr><p><strong>总结：</strong></p><blockquote><p>web请求，通过一些匹配条件，定位到真正的服务节点。并在这个转发过程的前后，进行一些精细化控制。</p><p>predicate就是我们的匹配条件；</p><p>而filter，就可以理解为一个无所不能的拦截器。有了这两个元素，再加上目标uri，就可以实现一个具体的路由了</p></blockquote><h3 id="_3、gateway工作流程" tabindex="-1"><a class="header-anchor" href="#_3、gateway工作流程" aria-hidden="true">#</a> 3、GateWay工作流程</h3><p><img src="'+r+`" alt="image-20210524112720689" loading="lazy"></p><blockquote><p>客户端向 Spring Cloud Gateway 发出请求。然后在 Gateway Handler Mapping 中找到与请求相匹配的路由，将其发送到 Gateway Web Handler。</p><p>Handler 再通过指定的过滤器链来将请求发送到我们实际的服务执行业务逻辑，然后返回。</p><p>过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前（“pre”）或之后（“post”）执行业务逻辑。</p><p>Filter在“pre”类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换等，</p><p>在“post”类型的过滤器中可以做响应内容、响应头的修改，日志的输出，流量监控等有着非常重要的作用。</p></blockquote><p><mark>核心逻辑</mark>：<strong>路由转发+执行过滤链</strong></p><h3 id="_4、入门配置" tabindex="-1"><a class="header-anchor" href="#_4、入门配置" aria-hidden="true">#</a> 4、入门配置</h3><h5 id="_1、新建module" tabindex="-1"><a class="header-anchor" href="#_1、新建module" aria-hidden="true">#</a> 1、新建module</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>xiaobear-gateway-gateway9527
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_2、改pom-xml" tabindex="-1"><a class="header-anchor" href="#_2、改pom-xml" aria-hidden="true">#</a> 2、改pom.xml</h5><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--gateway--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--eureka-client--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.xiaobear<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xiaobear-common-api-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--一般基础配置类--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>注意</mark>：<code>spring-cloud-starter-gateway</code>的依赖，是不需要<code>web</code>的依赖</p><h5 id="_3、写yaml" tabindex="-1"><a class="header-anchor" href="#_3、写yaml" aria-hidden="true">#</a> 3、写yaml</h5><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>

<span class="token key atrule">eureka</span><span class="token punctuation">:</span>
  <span class="token key atrule">instance</span><span class="token punctuation">:</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway<span class="token punctuation">-</span>service
  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment">#服务提供者provider注册进eureka服务列表内</span>
    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>
      <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//eureka7001.com<span class="token punctuation">:</span>7001/eureka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4、主启动类" tabindex="-1"><a class="header-anchor" href="#_4、主启动类" aria-hidden="true">#</a> 4、主启动类</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableEurekaClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GateWayApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">GateWayApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5、增加yaml的配置" tabindex="-1"><a class="header-anchor" href="#_5、增加yaml的配置" aria-hidden="true">#</a> 5、增加yaml的配置</h5><p>作为路由映射</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8001</span>          <span class="token comment">#匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8001</span>          <span class="token comment">#匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

<span class="token key atrule">eureka</span><span class="token punctuation">:</span>
  <span class="token key atrule">instance</span><span class="token punctuation">:</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway<span class="token punctuation">-</span>service
  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment">#服务提供者provider注册进eureka服务列表内</span>
    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>
      <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//eureka7001.com<span class="token punctuation">:</span>7001/eureka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6、测试" tabindex="-1"><a class="header-anchor" href="#_6、测试" aria-hidden="true">#</a> 6、测试</h5><p><strong>启动顺序：</strong></p><ul><li>启动7001</li><li>启动8001</li><li>启动9527</li></ul><p><strong>访问：</strong></p>`,56),w={href:"http://localhost:8001/payment/selectOne/1",target:"_blank",rel:"noopener noreferrer"},x={href:"http://localhost:9527/payment/selectOne/1",target:"_blank",rel:"noopener noreferrer"},I=t('<p><img src="'+d+'" alt="image-20210524134612890" loading="lazy"></p><h5 id="_7、gateway网关配置的两种方式" tabindex="-1"><a class="header-anchor" href="#_7、gateway网关配置的两种方式" aria-hidden="true">#</a> 7、<code>gateWay</code>网关配置的两种方式</h5><h6 id="_1、yaml配置-前面我们用到的就是" tabindex="-1"><a class="header-anchor" href="#_1、yaml配置-前面我们用到的就是" aria-hidden="true">#</a> 1、yaml配置，前面我们用到的就是</h6><h6 id="_2、代码中注入routelocator的bean" tabindex="-1"><a class="header-anchor" href="#_2、代码中注入routelocator的bean" aria-hidden="true">#</a> 2、代码中注入<code>RouteLocator</code>的<code>Bean</code></h6>',4),S={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#configuration",target:"_blank",rel:"noopener noreferrer"},P=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GateWayConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RouteLocator</span> <span class="token function">customRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">RouteLocatorBuilder</span> routeBuilder<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> routeBuilder<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;xiaobear-config&quot;</span><span class="token punctuation">,</span>r <span class="token operator">-&gt;</span> r<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token string">&quot;/spring-cloud-gateway-configuration&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.bilibili.com/video/BV18E411x7eT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、动态路由" tabindex="-1"><a class="header-anchor" href="#_5、动态路由" aria-hidden="true">#</a> 5、动态路由</h3><blockquote><p>通过微服务名实现动态路由，默认情况下<code>GateWay</code>会根据注册中心注册的服务列表，以注册中心上微服务名为路径创建动态路由进行转发，从而实现动态路由的功能。</p></blockquote><p>启动：</p><ul><li>一个Eureka7001</li><li>两个服务提供者8001，8002</li></ul><h4 id="_1、修改yaml" tabindex="-1"><a class="header-anchor" href="#_1、修改yaml" aria-hidden="true">#</a> 1、修改yaml</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>


<span class="token key atrule">eureka</span><span class="token punctuation">:</span>
  <span class="token key atrule">instance</span><span class="token punctuation">:</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway<span class="token punctuation">-</span>service
  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment">#服务提供者provider注册进eureka服务列表内</span>
    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>
      <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//eureka7001.com<span class="token punctuation">:</span>7001/eureka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+'" alt="image-20210524150219034" loading="lazy"></p><p><mark>注意</mark>：<code>uri</code>的协议为<code>lb</code>，表示启用<code>GateWay</code>的负载均衡功能</p><p><code>lb://serviceName</code>是<code>Spring Cloud GateWay</code>在微服务中自动为我们创建的负载均衡<code>uri</code></p><h4 id="_2、测试" tabindex="-1"><a class="header-anchor" href="#_2、测试" aria-hidden="true">#</a> 2、测试</h4>',11),C={href:"http://localhost:9527/payment/payment/lb",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,"发现在端口8001与8002来回切换",-1),R=n("h3",{id:"_6、predicate断言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6、predicate断言","aria-hidden":"true"},"#"),a(" 6、"),n("code",null,"Predicate"),a("断言")],-1),q=n("p",null,[a("在启动网关模块的时候，控制输出如下："),n("img",{src:m,alt:"image-20210524150854540",loading:"lazy"})],-1),A={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories",target:"_blank",rel:"noopener noreferrer"},O=n("h4",{id:"_1、常用的route-predicate",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、常用的route-predicate","aria-hidden":"true"},"#"),a(" 1、常用的"),n("code",null,"Route Predicate")],-1),G=n("blockquote",null,[n("p",null,"Spring Cloud Gateway将路由匹配作为Spring WebFlux HandlerMapping基础架构的一部分。"),n("p",null,"Spring Cloud Gateway包括许多内置的Route Predicate工厂。所有这些Predicate都与HTTP请求的不同属性匹配。多个Route Predicate工厂可以进行组合"),n("p",null,"Spring Cloud Gateway 创建 Route 对象时， 使用 RoutePredicateFactory 创建 Predicate 对象，Predicate 对象可以赋值给 Route。 Spring Cloud Gateway 包含许多内置的Route Predicate Factories。"),n("p",null,"所有这些谓词都匹配HTTP请求的不同属性。多种谓词工厂可以组合，并通过逻辑and。")],-1),D={id:"_1、after-route-predicate-factory",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#_1、after-route-predicate-factory","aria-hidden":"true"},"#",-1),F={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-after-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},B=t('<p>表示在这个时区里的时间点才允许访问</p><p><img src="'+v+`" alt="image-20210524151219175" loading="lazy"></p><p>这个时间格式，是Java 8新特性的时区时间格式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZoneDateTimeTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ZonedDateTime</span> zbj <span class="token operator">=</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 默认时区</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>zbj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        ZonedDateTime zny = ZonedDateTime.now(ZoneId.of(&quot;America/New_York&quot;)); // 用指定时区获取当前时间</span>
<span class="token comment">//        System.out.println(zny);</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token punctuation">-</span> After=2021<span class="token punctuation">-</span>05<span class="token punctuation">-</span>24T15<span class="token punctuation">:</span>17<span class="token punctuation">:</span>53.623+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>


<span class="token key atrule">eureka</span><span class="token punctuation">:</span>
  <span class="token key atrule">instance</span><span class="token punctuation">:</span>
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway<span class="token punctuation">-</span>service
  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment">#服务提供者provider注册进eureka服务列表内</span>
    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>
      <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//eureka7001.com<span class="token punctuation">:</span>7001/eureka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Z={id:"_2、before-route-predicate-factory",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#_2、before-route-predicate-factory","aria-hidden":"true"},"#",-1),W={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-before-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},X=t(`<blockquote><p>在时间点前才允许访问</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token punctuation">-</span> Before=2021<span class="token punctuation">-</span>05<span class="token punctuation">-</span>24T15<span class="token punctuation">:</span>17<span class="token punctuation">:</span>53.623+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),L={id:"_3、between-route-predicate-factory",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#_3、between-route-predicate-factory","aria-hidden":"true"},"#",-1),M={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-between-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},H=t(`<blockquote><p>在两者之间</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token punctuation">-</span> Between=2021<span class="token punctuation">-</span>05<span class="token punctuation">-</span>24T15<span class="token punctuation">:</span>17<span class="token punctuation">:</span>53.623+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span><span class="token punctuation">,</span> 2021<span class="token punctuation">-</span>05<span class="token punctuation">-</span>24T15<span class="token punctuation">:</span>30<span class="token punctuation">:</span>53.623+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),j={id:"_4、cookie-route-predicate-factory",tabindex:"-1"},z=n("a",{class:"header-anchor",href:"#_4、cookie-route-predicate-factory","aria-hidden":"true"},"#",-1),U={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-cookie-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},Y=t(`<blockquote><p>Cookie Route Predicate需要两个参数，一个是 Cookie name ,一个是正则表达式。</p><p>路由规则会通过获取对应的 Cookie name 值和正则表达式去匹配，如果匹配上就会执行路由，如果没有匹配上则不执行</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token punctuation">-</span> Cookie=uname<span class="token punctuation">,</span> xiaobear
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_1、不带cookie访问" tabindex="-1"><a class="header-anchor" href="#_1、不带cookie访问" aria-hidden="true">#</a> 1、不带cookie访问</h6>`,3),J={href:"http://localhost:9527/payment/payment/lb",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,[n("img",{src:b,alt:"image-20210524154233333",loading:"lazy"})],-1),K=n("h6",{id:"_2、带cookie访问",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、带cookie访问","aria-hidden":"true"},"#"),a(" 2、带cookie访问")],-1),$={href:"http://localhost:9527/payment/payment/lb",target:"_blank",rel:"noopener noreferrer"},nn=n("p",null,[n("img",{src:g,alt:"image-20210524154338650",loading:"lazy"})],-1),an={id:"_5、header-route-predicate-factory",tabindex:"-1"},sn=n("a",{class:"header-anchor",href:"#_5、header-route-predicate-factory","aria-hidden":"true"},"#",-1),en={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-header-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},tn=n("blockquote",null,[n("p",null,"两个参数：一个是属性名称和一个正则表达式，这个属性值和正则表达式匹配则执行。")],-1),pn={href:"http://localhost:9526/payment/payment/lb",target:"_blank",rel:"noopener noreferrer"},on=t('<p><img src="'+h+`" alt="image-20210524154702826" loading="lazy"></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token punctuation">-</span> Header=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>Id<span class="token punctuation">,</span> \\d+  <span class="token comment">## 请求头要有X-Request-Id属性并且值为整数的正则表达式</span>
            <span class="token comment">#- Cookie=uname, xiaobear</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),cn={id:"_6、host-route-predicate-factory",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#_6、host-route-predicate-factory","aria-hidden":"true"},"#",-1),un={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-host-route-predicate-factory",target:"_blank",rel:"noopener noreferrer"},rn=t(`<blockquote><p>Host Route Predicate 接收一组参数，一组匹配的域名列表，这个模板是一个 ant 分隔的模板，用.号作为分隔符。它通过参数中的主机地址作为匹配规则。</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token comment">#- Header=X-Request-Id, \\d+  ## 请求头要有X-Request-Id属性并且值为整数的正则表达式</span>
            <span class="token comment">#- Cookie=uname, xiaobear</span>
            <span class="token punctuation">-</span> Host=<span class="token important">**.xiaobear.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),dn={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories",target:"_blank",rel:"noopener noreferrer"},kn=n("p",null,[n("mark",null,"总结："),n("code",null,"Predicate"),a("就是为了实现一组匹配规则，让请求找到对应的"),n("code",null,"Route"),a("进行处理")],-1),mn=n("h3",{id:"_7、filter过滤",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7、filter过滤","aria-hidden":"true"},"#"),a(" 7、"),n("code",null,"Filter"),a("过滤")],-1),vn={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories",target:"_blank",rel:"noopener noreferrer"},bn=t('<blockquote><p>路由过滤器可用于修改进入的HTTP请求和返回的HTTP响应，路由过滤器只能指定路由进行使用。</p><p>Spring Cloud Gateway 内置了多种路由过滤器，他们都由GatewayFilter的工厂类来产生。</p></blockquote><h4 id="_1、分类" tabindex="-1"><a class="header-anchor" href="#_1、分类" aria-hidden="true">#</a> 1、分类</h4><h5 id="_1、按生命周期分类" tabindex="-1"><a class="header-anchor" href="#_1、按生命周期分类" aria-hidden="true">#</a> 1、按生命周期分类</h5><ul><li><code>Pre</code></li><li><code>Post</code></li></ul><h5 id="_2、按种类分类" tabindex="-1"><a class="header-anchor" href="#_2、按种类分类" aria-hidden="true">#</a> 2、按种类分类</h5>',5),gn={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#global-filters",target:"_blank",rel:"noopener noreferrer"},yn=t(`<h4 id="_2、常用的filter" tabindex="-1"><a class="header-anchor" href="#_2、常用的filter" aria-hidden="true">#</a> 2、常用的<code>Filter</code></h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> xiaobear<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/selectOne/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>

        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> payment_routh2 <span class="token comment">#payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//XIAOBEAR<span class="token punctuation">-</span>CLOUD<span class="token punctuation">-</span>PAYMENT<span class="token punctuation">-</span>SERVICE
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> AddRequestParameter=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>Id<span class="token punctuation">,</span><span class="token number">1024</span> <span class="token comment">#过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024</span>
          <span class="token comment">#uri: http://localhost:8001          #匹配后提供服务的路由地址</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/payment/payment/lb/<span class="token important">**</span>         <span class="token comment">## 断言，路径相匹配的进行路由</span>
            <span class="token comment">#- Header=X-Request-Id, \\d+  ## 请求头要有X-Request-Id属性并且值为整数的正则表达式</span>
            <span class="token comment">#- Cookie=uname, xiaobear</span>
            <span class="token punctuation">-</span> Host=<span class="token important">**.xiaobear.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、自定义过滤器" tabindex="-1"><a class="header-anchor" href="#_3、自定义过滤器" aria-hidden="true">#</a> 3、自定义过滤器</h4><p>自定义全局过滤器<code>Global Filters</code></p><p>主要是实现两个接口 <code>implements GlobalFilter,Ordered</code></p><h5 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h5><ul><li>全局日志处理</li><li>统一网关鉴权</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XiaoBearGateWayFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span><span class="token punctuation">,</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">XiaoBearGateWayFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;time:&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\t 执行了自定义的全局过滤器: &quot;</span><span class="token operator">+</span><span class="token string">&quot;MyLogGateWayFilter&quot;</span><span class="token operator">+</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> uname <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uname <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;用户名为空！！！！！！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_ACCEPTABLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h5>`,9),_n={href:"http://localhost:9527/payment/payment/lb",target:"_blank",rel:"noopener noreferrer"},fn={href:"http://localhost:9527/payment/payment/lb?uname=123",target:"_blank",rel:"noopener noreferrer"},wn=n("p",null,[a("**注意：**之前我们使用"),n("code",null,"Predicate"),a("的代码记得注释，以及yaml的过滤")],-1);function xn(In,Sn){const s=o("ExternalLinkIcon");return c(),l("div",null,[n("p",null,[a("官网："),n("a",_,[a("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/"),e(s)])]),f,n("ul",null,[n("li",null,[a("添加网关前："),n("a",w,[a("http://localhost:8001/payment/selectOne/1"),e(s)])]),n("li",null,[a("添加网关后："),n("a",x,[a("http://localhost:9527/payment/selectOne/1"),e(s)])])]),I,n("p",null,[a("官网："),n("a",S,[a("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#configuration"),e(s)])]),P,n("p",null,[a("测试地址："),n("a",C,[a("http://localhost:9527/payment/payment/lb"),e(s)])]),E,R,q,n("p",null,[a("官网地址："),n("a",A,[a("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories"),e(s)])]),O,G,n("h5",D,[T,a(" 1、"),n("a",F,[a("After Route Predicate Factory"),e(s)])]),B,n("h5",Z,[N,a(" 2、"),n("a",W,[a("Before Route Predicate Factory"),e(s)])]),X,n("h5",L,[V,a(" 3、"),n("a",M,[a("Between Route Predicate Factory"),e(s)])]),H,n("h5",j,[z,a(" 4、"),n("a",U,[a("Cookie Route Predicate Factory"),e(s)])]),Y,n("p",null,[a("curl "),n("a",J,[a("http://localhost:9527/payment/payment/lb"),e(s)])]),Q,K,n("p",null,[a("curl "),n("a",$,[a("http://localhost:9527/payment/payment/lb"),e(s)]),a(' --cookie "uname=xiaobear"')]),nn,n("h5",an,[sn,a(" 5、"),n("a",en,[a("Header Route Predicate Factory"),e(s)])]),tn,n("p",null,[a("curl "),n("a",pn,[a("http://localhost:9526/payment/payment/lb"),e(s)]),a(' -H "X-Request-Id:123"')]),on,n("h4",cn,[ln,a(" 6、"),n("a",un,[a("Host Route Predicate Factory"),e(s)])]),rn,n("p",null,[a("其他的请参照官网："),n("a",dn,[a("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories"),e(s)])]),kn,mn,n("p",null,[n("a",vn,[a("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories"),e(s)])]),bn,n("ul",null,[n("li",null,[n("a",gn,[a("GatewayFilter Factories"),e(s)])]),n("li",null,[n("a",hn,[a("Global Filters"),e(s)])])]),yn,n("ul",null,[n("li",null,[n("p",null,[a("错误的："),n("a",_n,[a("http://localhost:9527/payment/payment/lb"),e(s)])])]),n("li",null,[n("p",null,[a("正确的："),n("a",fn,[a("http://localhost:9527/payment/payment/lb?uname=123"),e(s)])])])]),wn])}const En=p(y,[["render",xn],["__file","spring_cloud_gateWay.html.vue"]]);export{En as default};
